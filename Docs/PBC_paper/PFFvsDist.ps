%!PS-Adobe-2.0
%%Title: PFFvsDist.ps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Thu Oct  4 16:01:19 2001
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid true def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
742 280 M
63 0 V
6157 0 R
-63 0 V
 stroke
658 280 M
[ [(Helvetica) 140.0 0.0 true true (1e-05)]
] -46.7 MRshow
742 556 M
31 0 V
6189 0 R
-31 0 V
742 922 M
31 0 V
6189 0 R
-31 0 V
742 1109 M
31 0 V
6189 0 R
-31 0 V
742 1198 M
63 0 V
6157 0 R
-63 0 V
 stroke
658 1198 M
[ [(Helvetica) 140.0 0.0 true true (0.0001)]
] -46.7 MRshow
742 1475 M
31 0 V
6189 0 R
-31 0 V
742 1840 M
31 0 V
6189 0 R
-31 0 V
742 2028 M
31 0 V
6189 0 R
-31 0 V
742 2117 M
63 0 V
6157 0 R
-63 0 V
 stroke
658 2117 M
[ [(Helvetica) 140.0 0.0 true true (0.001)]
] -46.7 MRshow
742 2393 M
31 0 V
6189 0 R
-31 0 V
742 2759 M
31 0 V
6189 0 R
-31 0 V
742 2946 M
31 0 V
6189 0 R
-31 0 V
742 3035 M
63 0 V
6157 0 R
-63 0 V
 stroke
658 3035 M
[ [(Helvetica) 140.0 0.0 true true (0.01)]
] -46.7 MRshow
742 3312 M
31 0 V
6189 0 R
-31 0 V
742 3677 M
31 0 V
6189 0 R
-31 0 V
742 3865 M
31 0 V
6189 0 R
-31 0 V
742 3954 M
63 0 V
6157 0 R
-63 0 V
 stroke
658 3954 M
[ [(Helvetica) 140.0 0.0 true true (0.1)]
] -46.7 MRshow
742 4230 M
31 0 V
6189 0 R
-31 0 V
742 4596 M
31 0 V
6189 0 R
-31 0 V
742 4783 M
31 0 V
6189 0 R
-31 0 V
742 4872 M
63 0 V
6157 0 R
-63 0 V
 stroke
658 4872 M
[ [(Helvetica) 140.0 0.0 true true (1)]
] -46.7 MRshow
742 280 M
0 63 V
0 4529 R
0 -63 V
 stroke
742 140 M
[ [(Helvetica) 140.0 0.0 true true (10)]
] -46.7 MCshow
1955 280 M
0 31 V
0 4561 R
0 -31 V
2664 280 M
0 31 V
0 4561 R
0 -31 V
3167 280 M
0 31 V
0 4561 R
0 -31 V
3558 280 M
0 31 V
0 4561 R
0 -31 V
3877 280 M
0 31 V
0 4561 R
0 -31 V
4146 280 M
0 31 V
0 4561 R
0 -31 V
4380 280 M
0 31 V
0 4561 R
0 -31 V
4586 280 M
0 31 V
0 4561 R
0 -31 V
4770 280 M
0 63 V
0 4529 R
0 -63 V
 stroke
4770 140 M
[ [(Helvetica) 140.0 0.0 true true (100)]
] -46.7 MCshow
5983 280 M
0 31 V
0 4561 R
0 -31 V
6692 280 M
0 31 V
0 4561 R
0 -31 V
1.000 UL
LTb
742 280 M
6220 0 V
0 4592 V
-6220 0 V
742 280 L
1.000 UP
1.000 UL
LT0
6311 4739 M
[ [(Helvetica) 140.0 0.0 true true ("test.dat" using 2:3)]
] -46.7 MRshow
6395 4739 M
399 0 V
1190 3907 M
71 -614 V
175 25 V
248 122 V
156 -10 V
405 -107 V
228 -691 V
283 -199 V
421 407 V
406 -827 V
404 -184 V
404 155 V
422 -222 V
402 14 V
401 -261 V
6016 894 L
400 514 V
6834 586 L
1190 3907 Pls
1261 3293 Pls
1436 3318 Pls
1684 3440 Pls
1840 3430 Pls
2245 3323 Pls
2473 2632 Pls
2756 2433 Pls
3177 2840 Pls
3583 2013 Pls
3987 1829 Pls
4391 1984 Pls
4813 1762 Pls
5215 1776 Pls
5616 1515 Pls
6016 894 Pls
6416 1408 Pls
6834 586 Pls
6594 4739 Pls
1.000 UL
LT1
6311 4599 M
[ [(Helvetica) 140.0 0.0 true true (1.8/\(x**\(2.0\)\))]
] -46.7 MRshow
6395 4599 M
399 0 V
742 3270 M
63 -29 V
63 -29 V
62 -28 V
63 -29 V
63 -29 V
63 -28 V
63 -29 V
63 -29 V
62 -28 V
63 -29 V
63 -28 V
63 -29 V
63 -29 V
63 -28 V
62 -29 V
63 -29 V
63 -28 V
63 -29 V
63 -29 V
63 -28 V
62 -29 V
63 -29 V
63 -28 V
63 -29 V
63 -29 V
63 -28 V
62 -29 V
63 -28 V
63 -29 V
63 -29 V
63 -28 V
63 -29 V
62 -29 V
63 -28 V
63 -29 V
63 -29 V
63 -28 V
62 -29 V
63 -29 V
63 -28 V
63 -29 V
63 -29 V
63 -28 V
62 -29 V
63 -29 V
63 -28 V
63 -29 V
63 -28 V
63 -29 V
62 -29 V
63 -28 V
63 -29 V
63 -29 V
63 -28 V
63 -29 V
62 -29 V
63 -28 V
63 -29 V
63 -29 V
63 -28 V
63 -29 V
62 -29 V
63 -28 V
63 -29 V
63 -28 V
63 -29 V
62 -29 V
63 -28 V
63 -29 V
63 -29 V
63 -28 V
63 -29 V
62 -29 V
63 -28 V
63 -29 V
63 -29 V
63 -28 V
63 -29 V
62 -29 V
63 -28 V
63 -29 V
63 -28 V
63 -29 V
63 -29 V
62 -28 V
63 -29 V
63 -29 V
63 -28 V
63 -29 V
63 -29 V
62 -28 V
63 -29 V
63 -29 V
63 -28 V
63 -29 V
63 -29 V
62 -28 V
63 -29 V
63 -29 V
1.000 UL
LT2
6311 4459 M
[ [(Helvetica) 140.0 0.0 true true (11/\(x**\(2.0\)\))]
] -46.7 MRshow
6395 4459 M
399 0 V
742 3992 M
63 -29 V
63 -29 V
62 -28 V
63 -29 V
63 -29 V
63 -28 V
63 -29 V
63 -29 V
62 -28 V
63 -29 V
63 -29 V
63 -28 V
63 -29 V
63 -28 V
62 -29 V
63 -29 V
63 -28 V
63 -29 V
63 -29 V
63 -28 V
62 -29 V
63 -29 V
63 -28 V
63 -29 V
63 -29 V
63 -28 V
62 -29 V
63 -29 V
63 -28 V
63 -29 V
63 -28 V
63 -29 V
62 -29 V
63 -28 V
63 -29 V
63 -29 V
63 -28 V
62 -29 V
63 -29 V
63 -28 V
63 -29 V
63 -29 V
63 -28 V
62 -29 V
63 -29 V
63 -28 V
63 -29 V
63 -28 V
63 -29 V
62 -29 V
63 -28 V
63 -29 V
63 -29 V
63 -28 V
63 -29 V
62 -29 V
63 -28 V
63 -29 V
63 -29 V
63 -28 V
63 -29 V
62 -29 V
63 -28 V
63 -29 V
63 -28 V
63 -29 V
62 -29 V
63 -28 V
63 -29 V
63 -29 V
63 -28 V
63 -29 V
62 -29 V
63 -28 V
63 -29 V
63 -29 V
63 -28 V
63 -29 V
62 -29 V
63 -28 V
63 -29 V
63 -29 V
63 -28 V
63 -29 V
62 -28 V
63 -29 V
63 -29 V
63 -28 V
63 -29 V
63 -29 V
62 -28 V
63 -29 V
63 -29 V
63 -28 V
63 -29 V
63 -29 V
62 -28 V
63 -29 V
63 -29 V
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1

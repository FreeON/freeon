%!PS-Adobe-2.0
%%Title: Timing_Diamond_512_log.ps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Tue Apr 29 10:17:41 2003
%%DocumentFonts: (atend)
%%BoundingBox: 0 0 265 190
%%Orientation: Portrait
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid true def
/gnulinewidth 20.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10 mul} def
/hpt_ 62 def
/vpt_ 62 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
35 30 translate
0.070 0.070 scale
0.5 0.5 scale
-1000 -800 translate
%
0 setgray
newpath
(Times) findfont 250 scalefont setfont
1.000 UL
LTb
658 280 M
31 0 V
6273 0 R
-31 0 V
658 606 M
31 0 V
6273 0 R
-31 0 V
658 838 M
31 0 V
6273 0 R
-31 0 V
658 1018 M
31 0 V
6273 0 R
-31 0 V
658 1164 M
31 0 V
6273 0 R
-31 0 V
658 1289 M
31 0 V
6273 0 R
-31 0 V
658 1396 M
31 0 V
6273 0 R
-31 0 V
658 1491 M
31 0 V
6273 0 R
-31 0 V
658 1576 M
63 0 V
6241 0 R
-63 0 V
 stroke
574 1576 M
[ [(Times) 250.0 0.0 true true (1000)]
] -46.7 MRshow
658 2134 M
31 0 V
6273 0 R
-31 0 V
658 2460 M
31 0 V
6273 0 R
-31 0 V
658 2692 M
31 0 V
6273 0 R
-31 0 V
658 2871 M
31 0 V
6273 0 R
-31 0 V
658 3018 M
31 0 V
6273 0 R
-31 0 V
658 3142 M
31 0 V
6273 0 R
-31 0 V
658 3250 M
31 0 V
6273 0 R
-31 0 V
658 3345 M
31 0 V
6273 0 R
-31 0 V
658 3429 M
63 0 V
6241 0 R
-63 0 V
 stroke
574 3429 M
[ [(Times) 250.0 0.0 true true (10000)]
] -46.7 MRshow
658 3988 M
31 0 V
6273 0 R
-31 0 V
658 4314 M
31 0 V
6273 0 R
-31 0 V
658 4546 M
31 0 V
6273 0 R
-31 0 V
658 4725 M
31 0 V
6273 0 R
-31 0 V
658 4872 M
31 0 V
6273 0 R
-31 0 V
658 280 M
0 31 V
0 4561 R
0 -31 V
865 280 M
0 31 V
0 4561 R
0 -31 V
1045 280 M
0 31 V
0 4561 R
0 -31 V
1204 280 M
0 31 V
0 4561 R
0 -31 V
1345 280 M
0 63 V
0 4529 R
0 -63 V
 stroke
1345 100 M
[ [(Times) 250.0 0.0 true true (10)]
] -46.7 MCshow
2278 280 M
0 31 V
0 4561 R
0 -31 V
2824 280 M
0 31 V
0 4561 R
0 -31 V
3211 280 M
0 31 V
0 4561 R
0 -31 V
3511 280 M
0 31 V
0 4561 R
0 -31 V
3756 280 M
0 31 V
0 4561 R
0 -31 V
3964 280 M
0 31 V
0 4561 R
0 -31 V
4143 280 M
0 31 V
0 4561 R
0 -31 V
4302 280 M
0 31 V
0 4561 R
0 -31 V
4443 280 M
0 63 V
0 4529 R
0 -63 V
 stroke
4443 100 M
[ [(Times) 250.0 0.0 true true (100)]
] -46.7 MCshow
5376 280 M
0 31 V
0 4561 R
0 -31 V
5922 280 M
0 31 V
0 4561 R
0 -31 V
6309 280 M
0 31 V
0 4561 R
0 -31 V
6609 280 M
0 31 V
0 4561 R
0 -31 V
6854 280 M
0 31 V
0 4561 R
0 -31 V
1.000 UL
LTb
658 280 M
6304 0 V
0 4592 V
-6304 0 V
658 280 L
1.000 UP
1.000 UL
LT0
1045 1200 M
%933 452 V
%932 516 V
%933 520 V
%546 317 V
%545 310 V
%546 313 V
%387 251 V
%387 228 V
%387 224 V
5596 3200 V
%
1045 1294 Box
1978 1746 Box
2910 2262 Box
3843 2782 Box
4389 3099 Box
4934 3409 Box
5480 3722 Box
5867 3973 Box
6254 4201 Box
6641 4425 Box
%
1200 4500 Box
900  4500 M
600  0 V
LTa
1600 4500 M
[ [(Times) 200.0 0.0 true true (Coulomb Matrix build)]] -46.7 MLshow
%
1.000 UP
1.000 UL
LT2
1045 810 M
%933 496 V
%932 558 V
%933 504 V
%546 283 V
%545 298 V
%546 332 V
%387 222 V
%387 249 V
%387 240 V
5600 3170 V
1045 826 Circle
1978 1322 Circle
2910 1880 Circle
3843 2384 Circle
4389 2667 Circle
4934 2965 Circle
5480 3297 Circle
5867 3519 Circle
6254 3768 Circle
6641 4008 Circle
%
1200 4000 Circle
900  4000 M
600  0 V
LTa
1600 4000 M
[ [(Times) 200.0 0.0 true true (Exchange-Correlation Marix Build)]] -46.7 MLshow
stroke
%
%
3800 -150 M
[ [(Times) 250.0 0.0 true true (Number of Carbon Atoms)]] -46.7 MCshow
90 rotate
2500 200 M 
[ [(Times) 250.0 0.0 true true (CPU Time (sec))]] -46.7 MCshow
stroke
%
%
%  Inset Graph
%
%
-90 rotate
4050 400 translate
0.4 0.4 scale
newpath
(Times) findfont 220 scalefont setfont
1.000 UL
LTb
658 280 M
63 0 V
6241 0 R
-63 0 V
 stroke
574 280 M
[ [(Times) 220.0 0.0 true true (0)]
] -46.7 MRshow
658 936 M
63 0 V
6241 0 R
-63 0 V
 stroke
574 936 M
[ [(Times) 220.0 0.0 true true (5000)]
] -46.7 MRshow
658 1592 M
63 0 V
6241 0 R
-63 0 V
 stroke
574 1592 M
[ [(Times) 220.0 0.0 true true (10000)]
] -46.7 MRshow
658 2248 M
63 0 V
6241 0 R
-63 0 V
 stroke
574 2248 M
[ [(Times) 220.0 0.0 true true (15000)]
] -46.7 MRshow
658 2904 M
63 0 V
6241 0 R
-63 0 V
 stroke
574 2904 M
[ [(Times) 220.0 0.0 true true (20000)]
] -46.7 MRshow
658 3560 M
63 0 V
6241 0 R
-63 0 V
 stroke
574 3560 M
[ [(Times) 220.0 0.0 true true (25000)]
] -46.7 MRshow
658 4216 M
63 0 V
6241 0 R
-63 0 V
 stroke
574 4216 M
[ [(Times) 220.0 0.0 true true (30000)]
] -46.7 MRshow
658 4872 M
63 0 V
6241 0 R
-63 0 V
 stroke
574 4872 M
[ [(Times) 220.0 0.0 true true (35000)]
] -46.7 MRshow
658 280 M
0 63 V
0 4529 R
0 -63 V
 stroke
658 140 M
[ [(Times) 220.0 0.0 true true (0)]
] -46.7 MCshow
1804 280 M
0 63 V
0 4529 R
0 -63 V
 stroke
1804 140 M
[ [(Times) 220.0 0.0 true true (100)]
] -46.7 MCshow
2950 280 M
0 63 V
0 4529 R
0 -63 V
 stroke
2950 140 M
[ [(Times) 220.0 0.0 true true (200)]
] -46.7 MCshow
4097 280 M
0 63 V
0 4529 R
0 -63 V
 stroke
4097 140 M
[ [(Times) 220.0 0.0 true true (300)]
] -46.7 MCshow
5243 280 M
0 63 V
0 4529 R
0 -63 V
 stroke
5243 140 M
[ [(Times) 220.0 0.0 true true (400)]
] -46.7 MCshow
6389 280 M
0 63 V
0 4529 R
0 -63 V
 stroke
6389 140 M
[ [(Times) 220.0 0.0 true true (500)]
] -46.7 MCshow
1.000 UL
LTb
658 280 M
6304 0 V
0 4592 V
-6304 0 V
658 280 L
1.000 UP
1.000 UL
LT0
750 372 M
6526 4799 L
750 372 Box
841 442 Box
1025 588 Box
1392 867 Box
1758 1150 Box
2309 1560 Box
3134 2168 Box
3959 2859 Box
5059 3699 Box
6526 4799 Box
1.000 UP
1.000 UL
LT2
750 332 M
5776 2638 V
750 332 Circle
841 376 Circle
1025 471 Circle
1392 638 Circle
1758 789 Circle
2309 1017 Circle
3134 1393 Circle
3959 1746 Circle
5059 2279 Circle
6526 2970 Circle
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times
%%Pages: 1

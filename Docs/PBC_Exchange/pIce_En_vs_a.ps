%!PS-Adobe-2.0
%%Title: En_vs_a_pIce.ps
%%Creator: gnuplot 3.8j patchlevel 0
%%CreationDate: Tue Jan 20 09:56:42 2004
%%DocumentFonts: (atend)
%%BoundingBox: 0 0 260 190
%%Orientation: Portrait
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid true def
/gnulinewidth 15.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 62 def
/vpt_ 62 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse } forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
5 5 translate
0.035 0.035 scale
0 setgray
newpath
(Times) findfont 140 scalefont setfont
1.000 UL
LTb
1050 420 M
63 0 V
5849 0 R
-63 0 V
stroke
966 420 M
[ [(Times) 200.0 0.0 true true 0 (-76.0192)]
] -46.7 MRshow
1.000 UL
LTb
1050 865 M
63 0 V
5849 0 R
-63 0 V
stroke
966 865 M
[ [(Times) 200.0 0.0 true true 0 ()]
] -46.7 MRshow
1.000 UL
LTb
1050 1310 M
63 0 V
5849 0 R
-63 0 V
stroke
966 1310 M
[ [(Times) 200.0 0.0 true true 0 (-76.0191)]
] -46.7 MRshow
1.000 UL
LTb
1050 1756 M
63 0 V
5849 0 R
-63 0 V
stroke
966 1756 M
[ [(Times) 200.0 0.0 true true 0 ()]
] -46.7 MRshow
1.000 UL
LTb
1050 2201 M
63 0 V
5849 0 R
-63 0 V
stroke
966 2201 M
[ [(Times) 200.0 0.0 true true 0 (-76.0190)]
] -46.7 MRshow
1.000 UL
LTb
1050 2646 M
63 0 V
5849 0 R
-63 0 V
stroke
966 2646 M
[ [(Times) 200.0 0.0 true true 0 ()]
] -46.7 MRshow
1.000 UL
LTb
1050 3091 M
63 0 V
5849 0 R
-63 0 V
stroke
966 3091 M
[ [(Times) 200.0 0.0 true true 0 (-76.0189)]
] -46.7 MRshow
1.000 UL
LTb
1050 3536 M
63 0 V
5849 0 R
-63 0 V
stroke
966 3536 M
[ [(Times) 200.0 0.0 true true 0 ()]
] -46.7 MRshow
1.000 UL
LTb
1050 3982 M
63 0 V
5849 0 R
-63 0 V
stroke
966 3982 M
[ [(Times) 200.0 0.0 true true 0 (-76.0188)]
] -46.7 MRshow
1.000 UL
LTb
1050 4427 M
63 0 V
5849 0 R
-63 0 V
stroke
966 4427 M
[ [(Times) 200.0 0.0 true true 0 ()]
] -46.7 MRshow
1.000 UL
LTb
1050 4872 M
63 0 V
5849 0 R
-63 0 V
stroke
966 4872 M
[ [(Times) 200.0 0.0 true true 0 (-76.0187)]
] -46.7 MRshow
1.000 UL
LTb
1050 420 M
0 63 V
0 4389 R
0 -63 V
stroke
1050 280 M
[ [(Times) 200.0 0.0 true true 0 ( 6.90)]
] -46.7 MCshow
1.000 UL
LTb
1707 420 M
0 63 V
0 4389 R
0 -63 V
stroke
1707 280 M
[ [(Times) 200.0 0.0 true true 0 ( 6.95)]
] -46.7 MCshow
1.000 UL
LTb
2364 420 M
0 63 V
0 4389 R
0 -63 V
stroke
2364 280 M
[ [(Times) 200.0 0.0 true true 0 ( 7.00)]
] -46.7 MCshow
1.000 UL
LTb
3021 420 M
0 63 V
0 4389 R
0 -63 V
stroke
3021 280 M
[ [(Times) 200.0 0.0 true true 0 ( 7.05)]
] -46.7 MCshow
1.000 UL
LTb
3678 420 M
0 63 V
0 4389 R
0 -63 V
stroke
3678 280 M
[ [(Times) 200.0 0.0 true true 0 ( 7.10)]
] -46.7 MCshow
1.000 UL
LTb
4334 420 M
0 63 V
0 4389 R
0 -63 V
stroke
4334 280 M
[ [(Times) 200.0 0.0 true true 0 ( 7.15)]
] -46.7 MCshow
1.000 UL
LTb
4991 420 M
0 63 V
0 4389 R
0 -63 V
stroke
4991 280 M
[ [(Times) 200.0 0.0 true true 0 ( 7.20)]
] -46.7 MCshow
1.000 UL
LTb
5648 420 M
0 63 V
0 4389 R
0 -63 V
stroke
5648 280 M
[ [(Times) 200.0 0.0 true true 0 ( 7.25)]
] -46.7 MCshow
1.000 UL
LTb
6305 420 M
0 63 V
0 4389 R
0 -63 V
stroke
6305 280 M
[ [(Times) 200.0 0.0 true true 0 ( 7.3)]
] -46.7 MCshow
1.000 UL
LTb
6962 420 M
0 63 V
0 4389 R
0 -63 V
stroke
6962 280 M
[ [(Times) 200.0 0.0 true true 0 ( 7.35)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1050 420 M
5912 0 V
0 4452 V
-5912 0 V
0 -4452 V
LTb
0 2646 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times) 240.0 0.0 true true 0 (Energy per Molecule  \(a.u.\))]
] -46.7 MCshow
grestore
LTb
4006 0 M
[ [(Times) 240.0 0.0 true true 0 (Lattice Constant \(\a.u.\))]
] -46.7 MCshow
1.000 UP
1.000 UP
1.000 UL
LTb
6000 4650 M
(Crystal98) Rshow
LT0
6100 4650 M
400 0 V
%
%LTb
%5300 4400 M
%(MondoSCF:) Rshow
%
%5400 4380 M
%[[(Symbol) 220.0 0.0 true true 0 (t)]
%] 0.0 MCshow
%5650 4380 M
%[[(Times) 220.0 0.0 true true 0 (=10)]
%] 0.0 MCshow
%5910 4450 M
%[[(Times) 180.0 0.0 true true 0 (-4)]
%] 0.0 MCshow
%5910 4450 M
%[[(Times) 240.0 0.0 true true 0 ()]
%] 0.0 MCshow
%LT1
%6100 4400 M
%400 0 V
%6300 4400 CircleF
%
LTb
5300 4350 M
(MondoSCF:) Rshow
%
5400 4320 M
[[(Symbol) 220.0 0.0 true true 0 (t)]
] 0.0 MCshow
5650 4320 M
[[(Times) 220.0 0.0 true true 0 (=10)]
] 0.0 MCshow
5910 4400 M
[[(Times) 180.0 0.0 true true 0 (-6)]
] 0.0 MCshow
LT2
6100 4350 M
400 0 V
6300 4350 BoxF
%
%LT1
%1707 4611 M
%2232 3124 L
%2758 2104 L
%525 -776 V
%3809 663 L
%4334 529 L
%526 214 V
%525 408 V
%526 801 V
%525 916 V
%526 1275 V
%1707 4611 CircleF
%2232 3124 CircleF
%2758 2104 CircleF
%3283 1328 CircleF
%3809 663 CircleF
%4334 529 CircleF
%4860 743 CircleF
%5385 1151 CircleF
%5911 1952 CircleF
%6436 2868 CircleF
%6962 4143 CircleF
%
LT2
1707 4574 M
2232 3172 L
2758 2130 L
525 -717 V
3809 992 L
4334 888 L
526 174 V
525 443 V
526 751 V
525 1003 V
526 1254 V
1707 4574 BoxF
2232 3172 BoxF
2758 2130 BoxF
3283 1413 BoxF
3809 992 BoxF
4334 888 BoxF
4860 1062 BoxF
5385 1505 BoxF
5911 2256 BoxF
6436 3259 BoxF
6962 4513 BoxF
1707 4413 BoxF
%
LT0
1707 4413 M
263 -727 V
262 -644 V
263 -560 V
263 -479 V
263 -397 V
262 -318 V
263 -242 V
3809 882 L
263 -89 V
262 -13 V
263 58 V
263 129 V
263 200 V
262 269 V
263 337 V
263 405 V
263 471 V
262 537 V
237 535 V
289 726 V
%
1.000 UL
LTb
1050 420 M
5912 0 V
0 4452 V
-5912 0 V
0 -4452 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times
%%Pages: 1

% \iffalse
% ****** Start of file revtex4.dtx ****** %
%
%   This file is part of the APS files in the REVTeX 4 distribution.
%   For version number, search on the string "%FileInfo"
%
% Original version by David Carlisle
% 
% Copyright (c) 1999 The American Physical Society.
% http://publish.aps.org/revtex4/
% mailto:revtex4@aps.org
% 
% See the REVTeX 4 README file for restrictions and more information.
% \fi
% \iffalse
%<*driver>
          \ProvidesFile{revtex4.dtx}
%</driver>
%<class|aps|rmp>\NeedsTeXFormat{LaTeX2e}[1996/06/01]
%<class>\ProvidesClass{revtex4}
%<aps>\ProvidesFile{aps.rtx}
%<rmp>\ProvidesFile{rmp.rtx}
%<10pt>\ProvidesFile{10pt.rtx}
%<11pt>\ProvidesFile{11pt.rtx}
%<12pt>\ProvidesFile{12pt.rtx}
%<revsymb&!class>\ProvidesPackage{revsymb}
%<driver>\ProvidesFile{revtex.drv}
          [1999/09/13 v4.0beta 2 RevTeX class (DPC,AO,APS)]%FileInfo
%<*driver>
\documentclass{ltxdoc}
\RequirePackage{ltxdocext}%
\let\url\undefined
\RequirePackage{hyperref}%
\RequirePackage{acrofont}%NOTE: Comment out this line for the release version!
\CodelineIndex\EnableCrossrefs
\begin{document}
\DocInput{revtex4.dtx}
\end{document}
%</driver>
% \fi
%
% \GetFileInfo{revtex4.dtx}\CheckSum{6226}
%
% \title{The \classname{revtex4} document class}
% \author{David Carlisle, Arthur Ogawa, and The American Physical Society}
% \date{Version \fileversion, dated \filedate}%
% \newcommand\revtex{Rev\TeX}
%
% \maketitle
%
% This file embodies the implementation of the APS \revtex\ 4 document class
% for electronic submissions to journals.
% 
% The distribution point for this work is
% \url{http://publish.aps.org/revtex4/},
% which contains fully unpacked, prebuilt runtime files and documentation.
%
% \tableofcontents
%
% \section{Using \protect\revtex}
%
% The file \file{README} has retrieval and installation information.
%
% User documentation is presented separately in \file{revguide.tex}.
%
% The file \file{template.aps} is a boilerplate file. 
%
% \StopEventually{}
%
% \changes{v4.a}{1998/01/16}
%    {Initial version}
% \changes{v4.0beta 2}{1999/06/20}
%    {First modifications by Arthur Ogawa (mailto:ogawa@teleport.com)}
%
% \section{Overview}%
% \revtex\ is a \LaTeXe\ document class, aomewhat like a hybrid of 
% the standard \LaTeX\ \classname{book} and \classname{article} classes.
%
% Certain packages are (should be) loaded by this class in any case:
% \classname{amssymb}, \classname{amsmath}, \classname{bm}, \classname{natbib}.
% 
% Certain packages are automatically loaded by this class
% when a corresponding class option has been invoked:
% 
% \begin{tabular}{ll}
% \textbf{\revtex\ option}&\textbf{package}\\
% \classoption{twocolumn}&\classname{multicol}\\
% \classoption{hyperref}&\classname{hyperref}\\
% \classoption{amsfonts}&\classname{amsfonts}\\
% \classoption{amssymb}&\classname{amssymb}\\
% \classoption{aps}&\classname{overcite}\\
% \end{tabular}
%
% Certain other packages are to be loaded by the
% document through explicit use of \cmd\usepackage.
% Some mentioned in the user documentation are
% \classname{graphicx}, \classname{longtable},
% and \classname{bm}.
%
% This document class implements the substyle: a set of mutually
% exclusive class options that, in this case, allow the 
% document class to address multiple societies.
% It also implements a sub-substyle, giving the 
% journal of the given society.
% The only society currently implemented is \classoption{aps},
% however, code is in place for another society, the \classoption{osa}.
%
% FIXME: should always load the \classname{graphicx} package.
% 
% QUERY: since \classname{amsfonts} and \classname{amssymb} extend
% syntax, why not load them in any case?
% 
% QUERY: if you say \cmd\documentclass|[prb,osa]{revtex4}|, then
% the value of \cmd\@society\ will be wrong, or? Fixed.
%
% Certain events optionally occur at \cmd\AtEndOfClass\ time:
% \begin{enumerate}
% \item
%  Read in packages \classname{hyperref}, \classname{multicol},
%  \classname{amsfonts}, \classname{amssymb}.
% \item
%  Read in journal substyle \file{.rtx} file.
% \item
%  Read in type size \file{.rtx} file.
% \end{enumerate}
%
% FIXME: per SPQR, \classname{hyperref} to load last of all.
%
% Certain events are optionally scheduled for \cmd\AtBeginDocument\ time:
% \begin{enumerate}
% \item
%  Setting default values for the Booleans and for other procedures used in formatting.
% \item
%  In response to class options options, adjusting parameters and procedures used in formatting.
% \item
%  Implementing the \classoption{eqsecnum} option, if required.
% \item
%  Setting the state engine for data commands.
% \item
%  Memorizing procedures for later use.
% \item
%  Setting type size and area, for use by later calculations.
% \end{enumerate}
%
% Certain events are scheduled for \cmd\AtEndDocument\ time:
% \begin{enumerate}
% \item
%  Print out the migrated floats or the end notes, if needed.
% \item
%  Close out the page grid.
% \item
%  Label the last page of the document
% \item
%  (\classname{natbib}) prepare to read in the \file{.aux} file.
% \end{enumerate}
% The first two of these are executed by \cmd\class@enddocumenthook,
% which is itself installed via \cmd\AtEndDocument.
%
%
% \section{Writing journal-specifc extensions to \revtex}
%
% With this version of \revtex, we introduce a somewhat different
% scheme for adapting \revtex\ to the needs of a specific journal.
%
% To create a journal substyle, you create new class options in 
% \revtex\ for the society, say \classoption{osa}, and any of that society's journals,
% one of which is, say, \classoption{josaa},
% using the code for the APS as a guide.
% In particular, each of your new options should separately define \cmd\@society\
% and \cmd\@journal. That for the former will be the same for
% all options relating to a particular society.
%
% Then, for the society, you create a corresponding \file{.rtx}
% file, in our case \file{osa.rtx}.
% Within that file, you override procedures and parameter assignments as you see fit.
% Ideally they will be generally applicable to all of that society's
% journals (see the file \file{aps.rtx} for a realization of this scheme).
% Also within that file, you include a 
% section of code for each journal, that for josaa looks like:
% \begin{verbatim}
% \@ifx{\@journal\journal@josaa}{%
% <code specific to the josaa>
% }{}%
% \end{verbatim}
% 
% Thus far, the scheme is similar to that used in \revtex\ 3.1.
% However, the new scheme does differ from the old in that 
% the \file{.rtx} file should define no syntactical extensions
% to \revtex.
%
% \section{The \classname{revtex4} Document Class}
%
%    \begin{macrocode}
%<*class>
\def\class@name{revtex4}%
%    \end{macrocode}
%
% \subsection{Compatability Processing}
%
% Three cases are possible:
% \begin{enumerate}
% \item \cmd\documentstyle|{revtex}| run under \LaTeX\,2.09.
% Input the original \revtex\,3.0 style file.
% \item  \cmd\documentstyle|{revtex4}| run under \LaTeXe.
% Make a small fudge required for table support on all but the first
% releases of \LaTeXe, and then act as above, skipping the rest of this
% class file.
% This is exactly the behavior of the
% \file{revtex.cls} distributed with \revtex\,3.0.
% \item \cmd\documentclass|{revtex4}| run under \LaTeXe.
% This file is executed in full, giving \revtex\,4.0 behavior.
% \end{enumerate}
%
%    \begin{macrocode}
\if@compatibility		  
  \ifx\every@math@size\@undefined
  \else		 
    \let\old@expast\@expast
    \def\@expast#1{\old@expast{#1}\let\@tempa\reserved@a}
  \fi
  \input{revtex.sty}
  \expandafter\endinput
\fi
%    \end{macrocode}
%
% \subsection{Errors and warnings}
%
% \begin{macro}{\REVTEX@err}
% \begin{macro}{\REVTEX@warn}
% A couple of shorthands for Class messages.
%    \begin{macrocode}
\def\REVTEX@err#1{\ClassError{\class@name}{#1}\@eha}%
\def\REVTEX@warn#1{\ClassWarningNoLine{\class@name}{#1}}%
\def\REVTEX@info#1{\ClassInfo{\class@name}{#1}}%
\def\obsolete@command#1{%
 \REVTEX@warn@end{Command \string#1\space is obsolete.^^JPlease remove from your document.}%
 \global\let#1\@empty
 #1%
}%
\def\replace@command#1#2{%
 \REVTEX@warn@end{Command \string#1\space is obsolete;^^JUse \string#2\space instead.}%
 \global\let#1#2%
 #1%
}%
\def\REVTEX@warn@end#1{\AtEndDocument{\REVTEX@warn{#1}}}%
%    \end{macrocode}
%    \end{macro}
%    \end{macro}
%
%
% \section{Extensions to the \LaTeX\ Kernel}
% For better or worse, I am gradually introducing 
% some portions of the \classname{ltxkrnext} package
% (\url{ftp://ftp.teleport.com/users/ogawa/macros/latex/contrib/supported/ltxkrnext/}).
%
% Also, any portions of \revtex\ that I consider to be kernel extensions, 
% I am putting here.
%
% \subsection{New Tools}%
%
% \begin{macro}{\halignt@}
%    \begin{macrocode}
\def\halignt@{\halign to}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\f@ur}
% Analogous to \cmd\@ne, \cmd\tw@, and \cmd\thr@@.
%    \begin{macrocode}
\chardef\f@ur=4\relax
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\let@environment}
% The directive \cmd\let@environment\ takes care of a common programming
% idiom whereby one environment is made a synonym for another.
%    \begin{macrocode}
\def\let@environment#1#2{%
 \expandafter\let
 \csname#1\expandafter\endcsname\csname#2\endcsname
 \expandafter\let
 \csname end#1\expandafter\endcsname\csname end#2\endcsname
 }%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\tracingplain}
% The command \cmd\tracingplain\ causes \TeX's tracing parameters to
% return to the values set by default. This command is sometimes
% useful when you have said \cmd\tracingall\ somewhere and want to
% restore.
% The \cmd\traceoutput\ command causes \cmd\tracingoutput\ diagnostics
% upon \cmd\shipout.
%    \begin{macrocode}
\newcommand\tracingplain{%
 \tracingonline\z@\tracingcommands\z@\tracingstats\z@
 \tracingpages\z@\tracingoutput\z@\tracinglostchars\@ne
 \tracingmacros\z@\tracingparagraphs\z@\tracingrestores\z@
 \showboxbreadth5\showboxdepth3\relax %\errorstopmode
 }%
\newcommand\traceoutput{%
 \appdef\@resetactivechars{\showoutput}%
}%
%    \end{macrocode}
% \end{macro}
%
%
% \subsection{Boolean Control}%
% We introduce just enough of the Boolean calculus for \TeX.
% Alan Jeffrey was the pioneer here, with an article in TUGboat
% (Vol. 11, No. 2, page 237).
% This implementation owes a debt to
% William Baxter (web@superscript.com).
% See articles by Baxter and Ogawa in the proceedings of the
% 1994 TUG meeting.
%
% \begin{macro}{\prepdef}
% \begin{macro}{\appdef}
% \begin{macro}{\gappdef}
%
% Provide the capability of performing head- and tail patches.
% The procedure \cmd\prepdef\ prepends to the given macro
% the tokens specified in its second argument.
% Likewise for \cmd\appdef, except that it appends.
% Note that the first 10 toks registers are utility registers,
% and we simply make a control sequence name, \cmd\toks@ii, for one of
% them.
%    \begin{macrocode}
\def\prepdef#1#2{%
 \@ifxundefined#1{\toks@{}}{\toks@\expandafter{#1}}%
 \toks@ii{#2}%
 \edef#1{\the\toks@ii\the\toks@}%
}%
\def\appdef#1#2{%
 \@ifxundefined#1{\toks@{}}{\toks@\expandafter{#1}}%
 \toks@ii{#2}%
 \edef#1{\the\toks@\the\toks@ii}%
}%
\def\gappdef#1#2{%
 \@ifxundefined#1{\toks@{}}{\toks@\expandafter{#1}}%
 \toks@ii{#2}%
 \global\edef#1{\the\toks@\the\toks@ii}%
}%
\def\appdef@val#1#2{%
 \appdef#1{{#2}}%
}%
\def\appdef@e#1#2{%
 \expandafter\appdef
 \expandafter#1%
 \expandafter{#2}%
}%
\def\appdef@eval#1#2{%
 \expandafter\appdef@val
 \expandafter#1%
 \expandafter{#2}%
}%
\toksdef\toks@ii=\tw@
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\@ifxundefined}
% \begin{macro}{\@ifnotrelax}
% \begin{macro}{\@argswap}
% \begin{macro}{\@argswap@val}
%
% Certain utility procedures use \cmd\@ifxundefined,
% which is defined here in terms of \cmd\@ifx.
% Others use \cmd\@ifnotrelax, namely when 
% the control sequence name is manufactured by
% the use of \cmd\csname.
%
% The procedures \cmd\@argswap and \cmd\@argswap@val
% are used to facilitate control of expansion.
%
%    \begin{macrocode}
\long\def\@ifxundefined#1{\@ifx{\undefined#1}}%
\long\def\@ifnotrelax#1#2#3{\@ifx{\relax#1}{#3}{#2}}%
\long\def\@argswap#1#2{#2#1}%
\long\def\@argswap@val#1#2{#2{#1}}%
\def\@ifxundefined@cs#1{\expandafter\@ifx\expandafter{\csname#1\endcsname\relax}}%
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\@boolean}
% \begin{macro}{\@boole@def}
% In order to define \cmd\@ifx, we first must create the
% ``defining word'' (term taken form our Forth vocabulary)
% \cmd\@boole@def, which employs \cmd\@boolean\ to do its job.
%    \begin{macrocode}
\def\@boolean#1#2{%
  \long\def#1{%
    #2% \if<something>
      \expandafter\boolean@true
    \else
      \expandafter\boolean@false
    \fi
  }%
}%
\def\@boole@def#1#{\@boolean{#1}}% Implicit #2
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\@booleantrue}
% \begin{macro}{\@booleanfalse}
% The procedures \cmd\@booleantrue\ and
% \cmd\@booleanfalse\ are assignment operators
% for Boolean flags.
%    \begin{macrocode}
\def\@booleantrue#1{\let#1\boolean@true}%
\def\@booleanfalse#1{\let#1\boolean@false}%
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\@ifx}
% \begin{macro}{\@ifx@empty}
% \begin{macro}{\@ifempty}
% \begin{macro}{\@ifnum}
% \begin{macro}{\@ifodd}
% \begin{macro}{\@ifdim}
% \begin{macro}{\@ifvoid}
% \begin{macro}{\@ifhmode}
% \begin{macro}{\@ifvmode}
% We can now invoke the defining word to create
% the procedures \cmd\@ifx\ and friends.
%
%    \begin{macrocode}
\@boole@def\@ifx#1{\ifx#1}%
\@boole@def\@ifx@empty#1{\ifx\@empty#1}%
\@boole@def\@ifempty#1{\if!#1!}%
\@boole@def\@if@sw#1{\csname if#1\endcsname}%
\@boole@def\@ifnum#1{\ifnum#1}%
\@boole@def\@ifodd#1{\ifodd#1}%
\@boole@def\@ifdim#1{\ifdim#1}%
\@boole@def\@ifvoid#1{\ifvoid#1}%
\@boole@def\@ifhmode{\ifhmode}%
\@boole@def\@ifvmode{\ifvmode}%
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\boolean@true}
% \begin{macro}{\boolean@false}
%
% Note that when a Boolean operator expands, it
% employs two macros that act as selectors, defined here.
%
%    \begin{macrocode}
\long\def\boolean@true#1#2{#1}%
\long\def\boolean@false#1#2{#2}%
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
%
% \subsection{Begin Document Structure}
% The standard \LaTeX\ mechanism \cmd\AtBeginDocument\
% is inadequate because the \cmd\vsize\ is bound much too early.
% We supply here a mechanism whereby decisions about the 
% page layout can be deferred until \cmd\AtBeginDocument\ time.
%
% The problem we are working around is that the \cmd\AtBeginDocument\
% hook in \cmd\document\ appears long after the calculation of
% \cmd\vsize\ and \cmd\hsize, that is, \LaTeX\ provides no mechanism
% for deferring the decision about the page grid until \cmd\AtBeginDocument\ time.
% We fix things by prepending a hook at the very beginning of \cmd\document.
%
% The price we pay for this facility is to depend on the stability of this part
% of \LaTeX's kernel code (the first token of \cmd\document),
% which could change, you see. But considering that \LaTeX\ is
% at this point essentially stagnant again, we risk it.
%
% \begin{macro}{\document}
% We begin by installing hooks into \cmd\document\ that
% we will manage ourselves.
% First we do as \cmd\document\ does: end the group
% begun by \cmd\begin. Last, we conclude our shenanigans by absorbing
% the first token of the expansion of \cmd\document, which
% we assume to be \cmd\endgroup.
%    \begin{macrocode}
\prepdef\document{%
 \endgroup
 \set@typesize@hook
 \normalsize
 \set@pica@hook
 \boolean@true{}%
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\set@typesize@hook}
% \begin{macro}{\set@pica@hook}
% The macros \cmd\set@typesize@hook\ and \cmd\set@pica@hook\ provide everything we need.
% To use, simply \cmd\appdef\ your tokens to the appropriate hook.
%    \begin{macrocode}
\def\set@typesize@hook{}%
\def\set@pica@hook{}%
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
%
% \subsection{Display Math}%
%
% \begin{macro}{\eqnarray@broken}
% \begin{macro}{\eqnarray@fleqn@fixed}
% Team \LaTeX\ will never repair Leslie's broken definition of \env{eqnarray}.
% Let us be bold\dots.
%
%    \begin{macrocode}
\def\eqnarray@broken{%
   \stepcounter{equation}%
   \def\@currentlabel{\p@equation\theequation}%
   \global\@eqnswtrue
   \m@th
   \global\@eqcnt\z@
   \tabskip\@centering
   \let\\\@eqncr
   $$\everycr{}\halign to\displaywidth\bgroup
       \hskip\@centering$\displaystyle\tabskip\z@skip{##}$\@eqnsel
      &\global\@eqcnt\@ne\hskip \tw@\arraycolsep \hfil${##}$\hfil
      &\global\@eqcnt\tw@ \hskip \tw@\arraycolsep
         $\displaystyle{##}$\hfil\tabskip\@centering
      &\global\@eqcnt\thr@@ \hb@xt@\z@\bgroup\hss##\egroup
         \tabskip\z@skip
      \cr
}
\long\def\eqnarray@fleqn@fixed{%
 \stepcounter{equation}\def\@currentlabel{\p@equation\theequation}%
 \global\@eqnswtrue\m@th\global\@eqcnt\z@
 \tabskip\mathindent
 \let\\=\@eqncr
 \setlength\abovedisplayskip{\topsep}%
 \ifvmode\addtolength\abovedisplayskip{\partopsep}\fi
 \addtolength\abovedisplayskip{\parskip}%
 \setlength\belowdisplayskip{\abovedisplayskip}%
 \setlength\belowdisplayshortskip{\abovedisplayskip}%
 \setlength\abovedisplayshortskip{\abovedisplayskip}%
 $$%
 \everycr{}%
 \halignt@\linewidth\bgroup
  \hskip\@centering$\displaystyle\tabskip\z@skip{##}$\@eqnsel
  &\global\@eqcnt\@ne
   \hskip\tw@\eqncolsep
   \hfil${{}##{}}$\hfil
  &\global\@eqcnt\tw@
   \hskip\tw@\eqncolsep
   $\displaystyle{##}$\hfil\tabskip\@centering
  &\global\@eqcnt\thr@@\hb@xt@\z@\bgroup\hss##\egroup
   \tabskip\z@skip
  \cr
}%
\@ifx{\eqnarray\eqnarray@broken}{%
 \expandafter\PackageInfo\expandafter{\class@name}%
  {Repairing broken {eqnarray} definition}%
 \let\eqnarray\eqnarray@fleqn@fixed
 \newlength\eqncolsep
 \setlength\eqncolsep\z@
 \let\eqnarray@broken\relax
 \let\eqnarray@fleqn@fixed\relax
}{}%
\def\mathindent{\@centering}%
\def\set@eqnarray@skips{}%
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
%
% \subsection{Floats}
%
% \subsubsection{Usage notes}%
% We extend the \LaTeX\ kernel for three purposes:
% \begin{enumerate}
%
% \item
%  When the \cmd\footnote\ command is used within the
%  scope of a float, we do as \env{minipage} does.
%
% \item
%  We provide a mechanism to write floats out to an external
%  stream for temporary storage (deferred floats).
%
% \item
%  We provide mechanism for placing a float \texttt{here}
%  invariably, that is, floats are unfloated.
%  This mechanism is used to read the external stream mentioned above.
%
% \end{enumerate}
%
% To use these mechanisms, the document class should 
% define a float, say, \env{figure} as per usual, and in addition:
% \begin{enumerate}
%
% \item
%  Optionally define an alternative, say \env{figure@write} as follows:
%    \begin{verbatim}
%\newenvironment{figure@write}{%
% \write@float{figure}%
%}{%
% \endwrite@float
%}%
%    \end{verbatim}
% That is, the alternative environment executes \cmd\write@float\
% instead of \cmd\@float.
% Note that this step is not needed if the float environment
% is defined in the simple way of \file{classes.dtx}.
% However, an environment like \env{longtable} will require it.
%
% \item
%  Install into \cmd\AtBeginDocument\ a call to \cmd\do@if@floats,
%  with the float name and an appropriate file extension as its arguments.
%    \begin{verbatim}
%\AtBeginDocument{\do@if@floats{figure}{.fgx}}%
%    \end{verbatim}
%  
% \item
%  Optionally define a text entity \cmd\figuresname\ that will
%  be the text of the head that is set over the 
%  deferred floats.
%  If not defined, there will be no head.
%  
% \item
%  Optionally define a user-level command to allow
%  the document to determine where the figures are printed out
%  (default is to print at end of document). E.g.,
%    \begin{verbatim}
%\newcommand\printfigures{\print@float{figure}}%
%    \end{verbatim}
% \item
%  Install into \cmd\AtEndDocument\ a call to \cmd\printfigures,
%  or, if the latter is not defined, as follows:
%    \begin{verbatim}
%\AtEndDocument{\print@float{figure}}%
%    \end{verbatim}
%  Note that installing this command into \cmd\AtBeginDocument
%  is best done earlier than calls that assume the last page of
%  the document is at hand.
%  
% \end{enumerate} 
%
% \subsubsection{Footnotes within floats, unfloating floats, float font}%
%
% \begin{macro}{\caption}
% DPC: Er a bit of a hack, but seems best way of supporting normal
% \LaTeX\ syntax at this point: If a caption is used below a table,
% then put out the footnotes before the caption.
% \changes{v4.0beta 2}{1999/06/20}
%    {Support the hack with \cs{prepdef}, and delay until \cs{AtBeginDocument} time,
%    since \classname{hyperref} clobbers \cs{caption}.}
%    \begin{macrocode}
\AtBeginDocument{%
 \prepdef\caption{\minipagefootnotes}%
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\minipagefootnotes}
% Procedure to spew the footnotes accumulated 
% within a minipage environment.
%    \begin{macrocode}
\def\minipagefootnotes{%
    \par
    \ifvoid\@mpfootins\else
%      \unskip
%      \vskip\skip\@mpfootins
      \unvbox\@mpfootins
    \fi}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\floats@sw}
% The Boolean \cmd\floats@sw\ signifies that floats are to be floated;
% if false, that floats are to be deferred to the end of the document.
% Note that the state of this Boolean is to be changed by 
% the document class in response to user-selected options.
% Here we display model code that assigns a default value
% at \cmd\AtBeginDocument\ time.
%    \begin{verbatim}
%\AtBeginDocument{%
% \@ifxundefined\floats@sw{\@booleantrue\floats@sw}{}%
%}%
%    \end{verbatim}
% \end{macro}
%
% \begin{macro}{\@xfloat}
% \begin{macro}{\@mpmakefntext}
% The float start-code is redefined to set up footnotes in the style of minipage.
% Also, the \cmd\floats@sw\ Boolean informs us that floats are to be 
% all placed \texttt{here}.
% Note that, to protect against the Boolean being undefined
% at this late hour, we default it globally to true.
%
% DPC: setting \cmd\if@twocolumn\ flag just to prompt the float not to float.
% (probably should add new explicit flag)
% \changes{v4.0beta 2}{1999/06/20}
%  {AO: Removed superfluous \cs{def}s, changed to using \cs{floats@sw} as the flag.
%  Also stopped using DPC's \cs{if@twocolumn} flag: using \cs{floats@sw} instead.
%  Also added \cs{par}\cs{vskip}\cs{z@skip} after the \cs{minipagefootnotes}
%  so that the float box would have zero depth like the kernel one.
%  }
%    \begin{macrocode}
\let\REVTEX@xfloat\@xfloat
\def\@xfloat#1[#2]{%
  \par
  \let\footnote\REVTEX@footnote
  \def\@mpfn{mpfootnote}%
  \def\thempfn{\thempfootnote}%
  \c@mpfootnote\z@
  \let\@footnotetext\@mpfootnotetext
  \let\@makefntext\@mpmakefntext
  \@ifxundefined\floats@sw{\global\@booleantrue\floats@sw}{}%
  \floats@sw{%
   \REVTEX@xfloat#1[#2]%
  }{%
   \def\@captype{#1}%
   \addvspace\intextsep
   \vbox\bgroup
    \def\end@float{%
      \minipagefootnotes
      \par\vskip\z@skip      %% \par\vskip\z@ added 15 Dec 87
      \egroup
      \par
      \addvspace\intextsep
    }%
  }%
}%
\def\@mpmakefntext#1{%
 \parindent=1em
 \noindent
 \hb@xt@1em{\hss\@makefnmark}%
 #1%
}%
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\end@float}
% If you get to the end of the float and still have pending
% footnotes, put then out now.
% \changes{v4.0beta 2}{1999/06/20}
%    {Support the hack with \cs{prepdef}}
%    \begin{macrocode}
\prepdef\end@float{\minipagefootnotes}%
%    \end{macrocode}
% \end{macro}
%
%
% \subsubsection{Writing floats out to a file}%
%
% \begin{macro}{\do@if@floats}
% The procedure \cmd\do@if@floats\ should be executed at
% \cmd\AtBeginDocument\ time, and arranges to write out
% the floats of the given class to a temporary file, to be 
% read back later (deferred floats),
% given that \cmd\floats@sw\ is false.
% Note that, to protect against the Boolean being undefined
% at this late hour, we default it globally to true.
%    \begin{macrocode}
\def\do@if@floats#1#2{%
 \@ifxundefined\floats@sw{\global\@booleantrue\floats@sw}{}%
 \floats@sw{}{%
%    \end{macrocode}
% Open the stream to save out the document's floats of this class.
%    \begin{macrocode}
  \expandafter\newwrite
              \csname#1write\endcsname
  \expandafter\def
              \csname#1@stream\endcsname{\jobname#2}%
  \expandafter\immediate
  \expandafter\openout
              \csname#1write\endcsname
              \csname#1@stream\endcsname\relax
%    \end{macrocode}
% Swap environments.
% If the class writer has defined, e.g., \env{figure@write},
% then we use this as the procedure to execute for writing
% the float out to the external stream.
% Otherwise, the replacement of \cmd\@float\ by \cmd\write@float\
% should do the right thing for float environments defined
% in the simple way of \classname{classes.dtx}.
%    \begin{macrocode}
  \@ifxundefined\REVTEX@float{%
   \let\REVTEX@float\@float
   \let\REVTEX@dblfloat\@dblfloat
   \let\@float\write@float
   \let\@dblfloat\write@floats
  }{}%
  \let@environment{#1@float}{#1}%
  \let@environment{#1@floats}{#1*}%
  \@ifxundefined@cs{#1@write}{}{%
   \let@environment{#1}{#1@write}%
  }%
 }%
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\print@float}
% The procedure \cmd\print@float\ prints out the
% deferred floats.
% \changes{v4.0beta 2}{1999/06/20}
%    {only execute if appropriate}
%
%    \begin{macrocode}
\def\print@float#1{%
 \@ifxundefined@cs{#1write}{}{%
  \begingroup
%  \c@secnumdepth-\maxdimen
   \@ifxundefined@cs{#1sname}{}{%
    \expandafter\section
    \expandafter*%
    \expandafter{%
                 \csname#1sname\endcsname
                }%
   }%
   \raggedbottom
   \let\@float\REVTEX@float
   \let\@dblfloat\REVTEX@dblfloat
   \let@environment{#1}{#1@float}%
   \let@environment{#1*}{#1@floats}%
   \expandafter\immediate
   \expandafter\closeout
               \csname#1write\endcsname
   \input{\csname#1@stream\endcsname}%
  \endgroup
  \expandafter\let\csname#1write\endcsname\relax
 }%
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\write@float}
% \begin{macro}{\write@floats}
% \begin{macro}{\write@@float}
% Handles the case where the name of the float is the same as
% that of the stream. Note that
% \env{longtable} does \emph{not} fit this case.
% Note also: \cmd\write@float\ is \emph{not} a user-level environment
% therefore it is properly not defined with \cmd\newenvironment.
%    \begin{macrocode}
\def\write@float#1{\write@@float{#1}{#1}}%
\def\endwrite@float{\@Esphack}%
\def\write@floats#1{\write@@float{#1*}{#1}}%
\def\endwrite@floats{\@Esphack}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\write@@float}
% \changes{v4.0beta 2}{1999/06/20}
%  {AO: Fixed spurious \texttt{CR} and (return) characters in output file.
%   Also, if the document did not have the \cs{end}\texttt{figure} on a line of its own, 
%   the macro wouldn't work. Fixed.}
%    \begin{macrocode}
\def\write@@float#1#2{%
  \ifhmode
     \@bsphack
  \fi
  \chardef\@tempc\csname#2write\endcsname
  \toks@{\begin{#1}}%
  \def\@tempb{#1}%
  \expandafter\let\csname end#1\endcsname\endwrite@float
  \catcode`\^^M\active
  \@makeother\{\@makeother\}\@makeother\%
  \write@floatline
}%
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\write@floatline}
% \begin{macro}{\@write@floatline}
% \begin{macro}{\float@end@tag}
% The procedure \cmd\write@floatline\ only parses, and passes
% its result to \cmd\@write@floatline, which
% writes the line to output, then tests the line
% for the \cmd\end\arg{float} tokens with 
% aid of the \cmd\float@end@tag\ procedure.
%    \begin{macrocode}
\begingroup
 \catcode`\[\the\catcode`\{\catcode`\]\the\catcode`\}\@makeother\{\@makeother\}%
 \gdef\float@end@tag#1\end{#2}#3\@nul[%
  \def\@tempa[#2]%
  \@ifx[\@tempa\@tempb][\end[#2]][\write@floatline]%
 ]%
 \obeylines%
 \gdef\write@floatline#1^^M[%
  \begingroup%
   \newlinechar`\^^M%
   \toks@\expandafter[\the\toks@#1]\immediate\write\@tempc[\the\toks@]%
  \endgroup%
  \toks@[]%
  \float@end@tag#1\end{}\@nul%
 ]%
\endgroup
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
%
%
%
% \subsection{Counters}
% The following definitions override those of the \LaTeX\ kernel,
% providing for a greater range of inputs.
%    \begin{macrocode}
\def\@alph#1{\ifcase#1\or a\or b\or c\or d\else\@ialph{#1}\fi}
%    \end{macrocode}
%
%    \begin{macrocode}
\def\@ialph#1{\ifcase#1\or \or \or \or \or e\or f\or g\or h\or i\or j\or
  k\or l\or m\or n\or o\or p\or q\or r\or s\or t\or u\or v\or w\or x\or
  y\or z\or aa\or bb\or cc\or dd\or ee\or ff\or gg\or hh\or ii\or jj\or
  kk\or ll\or mm\or nn\or oo\or pp\or qq\or rr\or ss\or tt\or uu\or
  vv\or ww\or xx\or yy\or zz\else\@ctrerr\fi}
%    \end{macrocode}
%
%    \begin{macrocode}
\def\@fnsymbol#1{\ensuremath{\ifcase#1\or *\or \dagger\or \ddagger\or
  \mathchar "278\or **\or \dagger\dagger
  \or \ddagger\ddagger \or \mathsection \mathsection\or
  *{*}*\or\dagger\dagger\dagger\or\ddagger\ddagger\ddagger\or
  \mathsection \mathsection \mathsection
  \else\@ctrerr\fi}}
%    \end{macrocode}
%
% \subsection{Customization of Sections}%
%
% Patch the standard \LaTeX\ sectioning procedure to:
%\begin{itemize}
%\item
% Allow a sectioning command to trigger the title page, or more generally
% to recognize that it is the first object in the document,
% so we headpatch \cmd\@startsection.
%
%\item
% Allow a tail command in |#6| to uppercase the title, so we retain
% DPC's braces.
%
%\item
% Allow each type of sectioning command to format its number differently,
% so we generalize \cmd\@seccntformat.
%
%\item
% Allow each type of sectioning command to format its argument differently,
% so we generalize \cmd\@hangfrom.
%
%\item
% Allow the starred form of the command to
% mark (the running head) and
% make an entry in the TOC,
% so we put \cmd\@ssect\ on the same footing as \cmd\@sect.
%
% Note that the tokens passed to the TOC now are \emph{not}
% the optional argument of the command, but the required.
% This means that the user can no longer use the former
% to put variant content in to the TOC as the Manual says.
%
% Instead, the optional argument is used to put an alternative
% title into the running headers, a better choice.
%
%\end{itemize}
%
% \begin{macro}{\@startsection}
% Patch a head hook into the basic sectioning command.
% Treat \cmd\@sect\ and \cmd\@ssect\ on an equal footing:
% now their pattern parts are identical.
%    \begin{macrocode}
\def\@startsection#1#2#3#4#5#6{%
 \@startsection@hook
 \if@noskipsec \leavevmode \fi
 \par
 \@tempskipa #4\relax
 \@afterindenttrue
 \ifdim \@tempskipa <\z@
  \@tempskipa -\@tempskipa \@afterindentfalse
 \fi
 \if@nobreak
  \everypar{}%
 \else
  \addpenalty\@secpenalty\addvspace\@tempskipa
 \fi
 \@ifstar
  {\@dblarg{\@ssect{#1}{#2}{#3}{#4}{#5}{#6}}}%
  {\@dblarg{\@sect {#1}{#2}{#3}{#4}{#5}{#6}}}%
}%
\def\@startsection@hook{}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@sect}
% When defining \cmd\@svsec, do not expand \cmd\@seccntformat.
% Put brace characters back where they were before David Carlisle got at them
% (i.e., as if \cmd\@hangfrom\ had two arguments).
% Protect the mark mechanism from an undefined meaning.
% Pass |#8| to the TOC instead of |#7|.
% Remove \cmd\relax\ from the replacement part of \cmd\@svsec.
%
% The procedure \cmd\@hangfrom\ and \cmd\@runin@to\ can
% be used to process the argument of the head.
% The head can define, e.g., \cmd\@hangfrom@section, to
% do its own processing.
%    \begin{macrocode}
\REVTEX@info
  {Repairing broken definition of \string\@sect.}%
\def\@sect#1#2#3#4#5#6[#7]#8{%
  \@ifnum{#2>\c@secnumdepth}{%
    \let\@svsec\@empty
  }{%
    \refstepcounter{#1}%
    \protected@edef\@svsec{{#1}}%
    \@ifundefined{@#1cntformat}{%
     \prepdef\@svsec\@seccntformat
    }{%
     \expandafter\prepdef
     \expandafter\@svsec
                 \csname @#1cntformat\endcsname
    }%
  }%
  \@tempskipa #5\relax
  \@ifdim{\@tempskipa>\z@}{%
    \begingroup
      \interlinepenalty \@M
      #6{%
       \@ifundefined{@hangfrom@#1}{\@hangfrom}{\csname @hangfrom@#1\endcsname}%
       {\hskip#3\relax\@svsec}{#8}%
      }%
      \@@par
    \endgroup
    \@ifundefined{#1mark}{\@gobble}{\csname #1mark\endcsname}{#7}%
    \addcontentsline{toc}{#1}{%
      \ifnum #2>\c@secnumdepth \else
        \protect\numberline{\csname the#1\endcsname}%
      \fi
      #8}%
  }{%
    \def\@svsechd{%
      #6{%
       \@ifundefined{@runin@to@#1}{\@runin@to}{\csname @runin@to@#1\endcsname}%
       {\hskip#3\relax\@svsec}{#8}%
      }%
      \@ifundefined{#1mark}{\@gobble}{\csname #1mark\endcsname}{#7}%
      \addcontentsline{toc}{#1}{%
        \ifnum #2>\c@secnumdepth \else
          \protect\numberline{\csname the#1\endcsname}%
        \fi
        #8}%
    }%
  }%
  \@xsect{#5}%
}%
\def\@runin@to#1#2{#1#2}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@ssect}
% Put brace characters back where they were before David Carlisle got at them
% (as if \cmd\@hangfrom\ has two arguments).
% Possibly set a mark.
% Make a TOC entry.
%    \begin{macrocode}
\REVTEX@info
  {Repairing broken definition of \string\@ssect.}%
\def\@ssect#1#2#3#4#5#6[#7]#8{%
  \@tempskipa #5\relax
  \@ifdim{\@tempskipa>\z@}{%
    \begingroup
      \interlinepenalty \@M
      #6{%
       \@ifundefined{@hangfroms@#1}{\@hangfrom}{\csname @hangfroms@#1\endcsname}%
       {\hskip#3\relax}{#8}%
      }%
      \@@par
    \endgroup
    \@ifundefined{#1smark}{\@gobble}{\csname #1smark\endcsname}{#7}%
    \addcontentsline{toc}{#1}{#8}%
  }{%
    \def\@svsechd{%
      #6{%
       \@ifundefined{@runin@tos@#1}{\@runin@to}{\csname @runin@tos@#1\endcsname}%
       {\hskip#3\relax}{#8}%
      }%
      \@ifundefined{#1smark}{\@gobble}{\csname #1smark\endcsname}{#7}%
      \addcontentsline{toc}{#1}{#8}%
    }%
  }%
  \@xsect{#5}%
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\sec@upcase}
% Upper case for sections (optional upper case items).  These are
% created so that some headings can be toggled between mixed case and
% upper case readily.
% Headings that might be changed can be wrapped in the style file in
% \cmd\sec@upcase\arg{text} constructs;
% the expansion of \cmd\sec@upcase\ is
% controlled here.  It is \cmd\relax\ by default (mixed case heads), and
% can easily be changed to \cmd\uppercase\ if desired.
% If mixed-case headings are wanted by the editor, authors {\em must}
% supply mixed case text, although this is what authors should be doing
% anyway.
% (Mixed can be converted to upper,
% but the reverse transformation cannot be automated.)
%
% The following setting gives the \LaTeX\ default.
%    \begin{macrocode}
\def\sec@upcase#1{\relax{#1}}%
%    \end{macrocode}
% \end{macro}
%
%
% \subsection{Patch the \env{tabular} and \env{array} Environments}
% \begin{macro}{\AtBeginDocument}
% We headpatch the begin processing and tailpatch the end processing
% of the \env{tabular} and \env{array} environments.
% A document class can define these hooks as needed.
%
% We assume that the pattern part of \cmd\@array\
% remains unchanged from that of the \LaTeX\ kernel.
% This is true if the \classname{array} package is loaded.
% However, our patches will not necessarily be effective for 
% other packages that replace the \LaTeX\ \env{array} and \env{tabular}
% environments.
%    \begin{macrocode}
\AtBeginDocument{%
% \toks@\expandafter{\@array}%
% \edef\@array@junk[####1]####2{%
%  \the\toks@
%  \noexpand\@array@sw
%  \noexpand\array@hook
%  \noexpand\tabular@hook
% }%
 \prepdef\endtabular{\endtabular@hook}%
 \prepdef\endarray{\endarray@hook}%
 \providecommand\array@hook{}%
 \@ifxundefined\endarray@hook{\let\endarray@hook\@empty}{}%
 \providecommand\tabular@hook{}%
 \@ifxundefined\endtabular@hook{\let\endtabular@hook\@empty}{}%
 \@ifpackageloaded{array}{%
  \let\@array@sw\@array@sw@array
 }{%
  \let\@array@sw\@array@sw@LaTeX
 }%
}%
\def\@array@sw@LaTeX{\@ifx{\\\@tabularcr}}%
\def\@array@sw@array{\@ifx{\d@llarbegin\begingroup}}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@tabular}
% Install, effectively, a head patch to \cmd\tabular.
%    \begin{macrocode}
\prepdef\@tabular{\tabular@font}%
%    \end{macrocode}
% \end{macro}
%
%
% \subsection{Syntax}
% \begin{macro}{\@gobble@opt@one}
% The \cmd\@gobble@opt@one\ command eats up an optional argument
% and one required argument.
%    \begin{macrocode}
\newcommand*\@gobble@opt@one[2][]{}%
%    \end{macrocode}
% \end{macro}
%
% \subsection{Auto-indented Contents}
% Facility to automatically determine the proper indentation of
% the TOC entries.
%
% Note: \classname{hyperref} compatibility demands respecting that
% \cmd\contentsline now has a 4th argument.
% So, instead of trying to override the meaning of \cmd\contentsline,
% we use the aux file to remember max values from one run to the next.
%
% \begin{macro}{\@starttoc}
% Install hooks at beginning and end of the TOC processing.
%    \begin{macrocode}
\def\@starttoc#1{%
  \begingroup
    \toc@pre
    \makeatletter
    \@input{\jobname.#1}%
    \if@filesw
      \expandafter\newwrite\csname tf@#1\endcsname
      \immediate\openout \csname tf@#1\endcsname \jobname.#1\relax
    \fi
    \@nobreakfalse
    \toc@post
  \endgroup
}%
\def\toc@pre{}%
\def\toc@post{}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\toc@@font}
% Interface for setting the formatting characteristics of this part
%  of the TOC.
%
% Note: \cmd\toc@@font\ is the common font for all auto-sizing toc commands,
% although this, too, could become a dispatcher.
%    \begin{macrocode}
\def\toc@@font{}%{\footnotesize\rmfamily}%
\def\@dotsep{\z@}%{5.5pt}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\l@section}
% Interface for determining which TOC elements are automatically indented.
%
% All of the \cmd\l@\dots\ commands simply go through the 
% bottleproc \cmd\l@@sections. The calling convention is
% to pass the name of self and the name of parent.
% If you want to exclude any of these from the indentation
% scheme, simply leave the \cmd\l@\dots\ command undefined.
%
% Note that the parent of ``section'' is nil, so we have to
% define a stub.
%    \begin{verbatim}
%\def\l@section{%
% \l@@sections{}{section}% Implicit #3#4
%}%
%\def\tocleft@{\z@}%
%\def\l@subsection{%
% \l@@sections{section}{subsection}% Implicit #3#4
%}%
%\def\l@subsubsection{%
% \l@@sections{subsection}{subsubsection}% Implicit #3#4
%}%
%\def\l@paragraph{%
% \l@@sections{subsubsection}{paragraph}% Implicit #3#4
%}%
%\def\l@subparagraph#1#2{%
% \l@@sections{paragraph}{subparagraph}% Implicit #3#4
%}%
%    \end{verbatim}
% \end{macro}
%
% Glom some \cmd\dimen\ registers.
%    \begin{macrocode}
\let\tocdim@section       \leftmargini
\let\tocdim@subsection    \leftmarginii
\let\tocdim@subsubsection \leftmarginiii
\let\tocdim@paragraph     \leftmarginiv
\let\tocdim@appendix      \leftmarginv
\let\tocdim@pagenum       \leftmarginvi
%    \end{macrocode}
%
% \begin{macro}{\toc@pre@auto}
% \begin{macro}{\toc@post@auto}
% We patch \cmd\@starttoc\ to:
% 1) before TOC processing,
% initialize the max registers and
% set the needed dimensions from 
% the values stored in the auxiliary file, and
% 2) after TOC processing,
% store out those max register values into the auxiliary file.
%
% Note that the font is set here: all other TOC entries must
% override these font settings.
% 
% To activate this override of the standard \LaTeX\ processing,
% the substyle does: \cmd\let\cmd\toc@pre\cmd\toc@pre@auto\
% and \cmd\let\cmd\toc@post\cmd\toc@post@auto.
%    \begin{macrocode}
\def\toc@pre@auto{%
  \toc@@font
  \@tempdima\z@
  \toc@setindent\@tempdima{section}%
  \toc@setindent\@tempdima{subsection}%
  \toc@setindent\@tempdima{subsubsection}%
  \toc@setindent\@tempdima{paragraph}%
  \toc@letdimen{appendix}%
  \toc@letdimen{pagenum}%
}%
\def\toc@post@auto{%
  \if@filesw
   \begingroup
    \toc@writedimen{section}%
    \toc@writedimen{subsection}%
    \toc@writedimen{subsubsection}%
    \toc@writedimen{paragraph}%
    \toc@writedimen{appendix}%
    \toc@writedimen{pagenum}%
   \endgroup
  \fi
}%
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\toc@setindent}
%    \begin{macrocode}
\def\toc@setindent#1#2{%
 \csname tocdim@#2\endcsname\z@
 \@ifundefined{tocmax@#2}{\@namedef{tocmax@#2}{\z@}}{}%
 \advance#1\@nameuse{tocmax@#2}\relax
 \expandafter\edef\csname tocleft@#2\endcsname{\the#1}%
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\toc@letdimen}
%    \begin{macrocode}
\def\toc@letdimen#1{%
 \csname tocdim@#1\endcsname\z@
 \@ifundefined{tocmax@#1}{\@namedef{tocmax@#1}{\z@}}{}%
 \expandafter\let\csname tocleft@#1\expandafter\endcsname\csname tocmax@#1\endcsname
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\toc@writedimen}
%    \begin{macrocode}
\def\toc@writedimen#1{%
 \immediate\write\@auxout{%
  \gdef\expandafter\string\csname tocmax@#1\endcsname{%
   \expandafter\the\csname tocdim@#1\endcsname
  }%
 }%
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\l@@sections}
% The procedure for formatting the indented TOC entries.
% We use control sequence names such as \cmd\tocmax@section\ and
% \cmd\tocleft@section, the former being written to the auxiliary file
% and the latteronly defined for the duration of the TOC processing.
%
% Note that the assignment of \cmd\box\cmd\z@\ must endure
% over the invocation of |#3|.
%    \begin{macrocode}
\def\l@@sections#1#2#3#4{%
 % #1 - superior section
 % #2 - this section
 % #3 - content, including possible \numberline
 % #4 - page number
 \expandafter\let\expandafter\dimen@temp\csname tocdim@#2\endcsname
 \setbox\z@\hbox{\ignorespaces#4}\ifdim\tocdim@pagenum<\wd\z@\tocdim@pagenum\wd\z@\fi
 \begingroup
  \everypar{}%
  \leftskip\csname tocleft@#2\endcsname\relax
  \parindent-\leftskip\advance\parindent\csname tocleft@#1\endcsname\relax
  \rightskip\tocleft@pagenum plus 1fil\relax
  \skip@\parfillskip\parfillskip\z@
  \let\numberline\numberline@@sections
  \ignorespaces#3\unskip\nobreak\hskip\skip@
  \hb@xt@\rightskip{\hfil\unhbox\z@}\hskip-\rightskip\hskip\z@skip
  \par
  \aftergroup\dimen@temp
  \expandafter
 \endgroup\the\dimen@temp\relax
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\numberline@@sections}
% The bottleproc for all \cmd\numberline\ processing in indented TOC entries.
% The first argument is self.
%    \begin{macrocode}
\def\numberline@@sections#1{%
 \leavevmode\hb@xt@-\parindent{%
  \aftergroup\dimen@temp
  \hfil
  \setbox\z@\hbox{#1.\kern\@dotsep}\dimen@\wd\z@
  \unhbox\z@
  \@ifdim{\dimen@<\dimen@temp}{\dimen@\dimen@temp}{}%
  \expandafter
 }\the\dimen@\relax
 \ignorespaces
}%
%    \end{macrocode}
% \end{macro}
%
%
%
% \section{Options}\label{sec:options}%
%
% \subsection{Define Booleans Used in Options}%
% The following Booleans are used within the document class to
% allow the document or the substyle to make selections
% of formatting.
% Because an explicit document class option always overrides a substyle,
% any substyle wishing to assign a value to a flag must first test the flag to 
% confirm that it is still undefined.
% This further means that the default value of the flag must be 
% assigned late, at the end of \cmd\AtBeginDocument\ time, and that 
% the flag may be queried no earlier than that time.
%
% \begin{macro}{\twocolumn@sw}
% \begin{macro}{\multicol@sw}
% The boolean \cmd\twocolumn@sw\ signifies that we are to use a two-column grid,
% the boolean \cmd\multicol@sw\ that we are to use the \classname{multicol}
% package for this purpose.
% 
%    \begin{macrocode}
\AtBeginDocument{%
 \@ifxundefined\twocolumn@sw{\@booleanfalse\twocolumn@sw}{}%
 \@ifxundefined\multicol@sw{\@booleanfalse\multicol@sw}{}%
}%
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\footinbib@sw}
% The boolean \cmd\footinbib@sw\ signifies that 
% footnotes are to be set in the bibliography, as endnotes.
%    \begin{macrocode}
\AtBeginDocument{%
 \@ifxundefined\footinbib@sw{\@booleanfalse\footinbib@sw}{}%
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\preprintsty@sw}
% The boolean \cmd\preprintsty@sw\ signifies that 
% the document is to be formatted in preprint style.
%    \begin{macrocode}
\AtBeginDocument{%
 \@ifxundefined\preprintsty@sw{\@booleanfalse\preprintsty@sw}{}%
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\galley@sw}
% The boolean \cmd\galley@sw\ signifies that 
% the document is to be formatted in galley style.
%
% Asserting both \cmd\galley@sw\ and \cmd\preprintsty@sw\ 
% may produce strange formatting results, but it is not illegal.
% However, it \emph{is} illegal to assert galley and any 
% twocolumn option.
%    \begin{macrocode}
\AtBeginDocument{%
 \@ifxundefined\galley@sw{\@booleanfalse\galley@sw}{}%
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\groupauthors@sw}
% The flag \cmd\groupauthors@sw\ signifies that authors are to be grouped.
% This affects the meaning of \cmd\@author@present\ and \cmd\@tempaffil.
% \end{macro}
%
% \begin{macro}{\runinaddress@sw}
% The flag \cmd\runinaddress@sw\ signifies that author addresses are to be
% run in.
% \end{macro}
%
% \begin{macro}{\@affils@sw}
% If \cmd\@affils@sw\ is false, an address is never recognised as ``new''
% and is therefore always entered into the affiliation list,
% stopping groups of authors at the same address being amalgamated
% into the same list:
% the address will be printed the same number of times it is entered.
% \end{macro}
%
% \begin{macro}{\showPACS@sw}
% If \cmd\showPACS@sw\ is true, print the PACS information in the title block,
% otherwise not.
%    \begin{macrocode}
\AtBeginDocument{%
 \@ifxundefined\showPACS@sw{\@booleanfalse\showPACS@sw}{}%
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\floats@sw}
% The Boolean \cmd\floats@sw\ signifies that floats are to be floated;
% if false, that floats are to be deferred to the end of the document.
% By default, the former.
% Note that the state of this Boolean is to be changed by 
% the document class in response to user-selected options.
% The default is established here.
% \end{macro}
%
% \begin{macro}{\twoside@sw}
% The flag \cmd\twoside@sw\ signifies that the document is to be 
% formatted for duplex printing.
% At \cmd\AtBeginDocument\ time, we must align the value
% of the kernel \cmd\newif\ switch \cmd\if@twoside\ 
% to that of \cmd\twoside@sw.
%    \begin{macrocode}
\AtBeginDocument{%
 \@ifxundefined\twoside@sw{\@booleanfalse\twoside@sw}{}%
 \twoside@sw{\@twosidetrue}{\@twosidefalse}%
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\draft@sw}
% The flag \cmd\draft@sw\ signifies that the document is to be 
% formatted in draft mode. 
% Certain packages may pay attention to the 
% class option \classoption{draft} that sets this Boolean.
%    \begin{macrocode}
\AtBeginDocument{%
 \@ifxundefined\draft@sw{\@booleanfalse\draft@sw}{}%
 \draft@sw{\overfullrule 5\p@}{\overfullrule\z@}%
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\tightenlines@sw}
% The boolean \cmd\tightenlines@sw\ signifies that 
% the leading is to be made standard amount.
% If false, it means that the leading is to be set extra open.
% Has no effect on 10pt size option.
%    \begin{macrocode}
\AtBeginDocument{%
 \@ifxundefined\tightenlines@sw{\@booleanfalse\tightenlines@sw}{}%
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\lengthcheck@sw}
% The flag \cmd\lengthcheck@sw\ signifies that 
% the length checking is in effect.
% It is up to the individual journal substyle 
% to alter its formatting accordingly.
%    \begin{macrocode}
\AtBeginDocument{%
 \@ifxundefined\lengthcheck@sw{\@booleanfalse\lengthcheck@sw}{}%
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\eqsecnum@sw}
% The flag \cmd\eqsecnum@sw\ signifies that equations are to be 
% numbered with the section, e.g., ``Eq. (2.13)''.
% This flag is neither set nor queried.
%    \begin{macrocode}
\AtBeginDocument{%
 \@ifxundefined\eqsecnum@sw{\@booleanfalse\eqsecnum@sw}{}%
 \eqsecnum@sw{%
  \@addtoreset{equation}{section}%
  \def\theequation@prefix{\thesection.}%
 }{}%
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\byrevtex@sw}
% The flag \cmd\byrevtex@sw\ signifies that the document should
% bear an imprint to the effect that it was formatted by this document class.
%    \begin{macrocode}
\AtBeginDocument{%
 \@ifxundefined\byrevtex@sw{\@booleanfalse\byrevtex@sw}{}%
}%
%    \end{macrocode}
% \end{macro}
%
%
% \subsection{Declare Options}%
%
% \subsubsection{Preprint Style}%
% \changes{v4.d}{1998/01/31}
%    {Rearrange the ordering so numerical ones come first. AO: David, what does this mean?}
%
% \changes{v4.g}{1998/06/10}
%    {comma not space between email and homepage}
%
% \changes{v4.0beta 2}{1999/06/20}
%    {Move this ``complex'' option to the front, where it can be overridden by ``simple'' options.}
%    \begin{macrocode}
\DeclareOption{preprint}{%
  \@booleantrue\preprintsty@sw
  \def\@pointsize{12}%
}%
\DeclareOption{manuscript}{%
 \REVTEX@warn{Document class option manuscript is obsolete; use preprint instead}%
 \ExecuteOptions{preprint}%
}%
%    \end{macrocode}
%
% \subsubsection{Showing PACS}%
% \changes{v4.0beta 2}{1999/06/20}
%    {New option}
%    \begin{macrocode}
\DeclareOption{showpacs}{%
  \@booleantrue\showPACS@sw
}%
\DeclareOption{noshowpacs}{%
  \@booleanfalse\showPACS@sw
}%
%    \end{macrocode}
%
% \subsubsection{Hypertext Option}%
%
% DPC: For Hyperpreprint, we want to load hyperref, but stop it making
% special kludges for revtex3 which don't apply here.
% (Once \revtex~4 is released, hyperref can be updated to spot the
% difference between revtex3 and 4, but this will not do any harm,
% even then.)
% \changes{v4.e}{1998/01/31}
%    {protect against hyperref revtex kludges which are not needed now}
% \changes{v4.0beta 2}{1999/06/20}
%    {Move this ``complex'' option to the front, where it can be overridden by ``simple'' options.}
% FIXME: hyperref should load last of all packages.
%    \begin{macrocode}
\DeclareOption{hyperref}{%
  \AtEndOfClass{%
    \let\REVTEX@tempa\@clsextension
    \let\@clsextension\@empty
    \RequirePackage{hyperref}%
    \let\@clsextension\REVTEX@tempa
  }%
%    \end{macrocode}
%
% If you have a hyper-foo enabled browser you may prefer this format
% which does not print the URL for the home page, but just makes the
% name a link, but by default print it so it works on paper.
% \changes{v4.e}{1998/01/31}
%    {print homepage}
%
%    \begin{macrocode}
  \def\@pointsize{10}%
}%
%    \end{macrocode}
%
% \subsubsection{Type Size}%
% Use \cmd\@pointsize|=10| rather than \cmd\@ptsize|=0| to allow easy extensions
% to 9pt or whatever. 
% Note: the three alternatives are mutually exclusive. Furthermore
% if \cmd\@pointsize\ is still undefined at \cmd\AtEndOfClass\ time,
% then the substyle can conclude that the user accepts the default.
%    \begin{macrocode}
\DeclareOption{10pt}{\def\@pointsize{10}}
\DeclareOption{11pt}{\def\@pointsize{11}}
\DeclareOption{12pt}{\def\@pointsize{12}}
%    \end{macrocode}
%
% \subsubsection{Media Size}%
% \changes{v4.0beta 2}{1999/06/20}
%    {Restore all media size class option of \protect\file{classes.dtx}}
%    \begin{macrocode}
\DeclareOption{a4paper}
   {\setlength\paperheight {297mm}%
    \setlength\paperwidth  {210mm}}
\DeclareOption{a5paper}
   {\setlength\paperheight {210mm}%
    \setlength\paperwidth  {148mm}}
\DeclareOption{b5paper}
   {\setlength\paperheight {250mm}%
    \setlength\paperwidth  {176mm}}
\DeclareOption{letterpaper}
   {\setlength\paperheight {11in}%
    \setlength\paperwidth  {8.5in}}
\DeclareOption{legalpaper}
   {\setlength\paperheight {14in}%
    \setlength\paperwidth  {8.5in}}
\DeclareOption{executivepaper}
   {\setlength\paperheight {10.5in}%
    \setlength\paperwidth  {7.25in}}
\DeclareOption{landscape}
   {\setlength\@tempdima   {\paperheight}%
    \setlength\paperheight {\paperwidth}%
    \setlength\paperwidth  {\@tempdima}}
%    \end{macrocode}
%
% \subsubsection{Bibnotes}%
% The default for \cmd\author@note\ (email, homepage) is a \cmd\footnote,
% the alternative, seleted by this option, is a bibnote.
%    \begin{macrocode}
\DeclareOption{bibnotes}{\def\author@note{\rtx@bibnote}}%
\DeclareOption{nobibnotes}{\def\author@note{\footnote}}%
\AtBeginDocument{\@ifxundefined\author@note{\def\author@note{\footnote}}{}}%
%    \end{macrocode}
%
% \subsubsection{Footinbib}%
%    \begin{macrocode}
\DeclareOption{footinbib}{\@booleantrue\footinbib@sw}
\DeclareOption{nofootinbib}{\@booleanfalse\footinbib@sw}
%    \end{macrocode}
%
% \subsubsection{superbib}%
% The document may invoke superscript bibliography style.
% If not, the journal substyle may make a selection.
% If neither, the class itself selects a default.
% This is really a quite deep nesting of defaults.
%     \begin{macrocode}
\DeclareOption{superbib}{%
 \def\place@bibnumber{\place@bibnumber@sup}%
}%
%    \end{macrocode}
%
% \subsubsection{Simplex/Duplex Pages}%
% \changes{v4.e}{1998/01/31}
%    {4.d had twoside option setting twoside switch to false}
% The complementary options \classoption{twoside} and \classoption{oneside}
% assert formatting for duplex or simplex printing, respectively.
% At the same time, we arrange for the selection of the page grid 
% with respect to the marginal column:
% Because \cmd\if@reversemargin\ remains default (false),
% if duplex printing, this column will always be on the (right),
% if simplex printing, it will always be on the (outside).
% QUERY: correct choice?
%    \begin{macrocode}
\DeclareOption{twoside}{\@booleantrue\twoside@sw \@mparswitchfalse}
\DeclareOption{oneside}{\@booleanfalse\twoside@sw\@mparswitchtrue}
%    \end{macrocode}
%
% \subsubsection{Two-Column Page Grid}%
% Two-column formatting uses the \classname{multicol} package,
% licensed from Frank Mittelbach.
%
% \begin{macro}{\twocolumn@sw}
% The flag \cmd\twocolumn@sw\ signifies that the document is to be 
% formatted in the two-column page grid.
%
% If no options relating to page grid are invoked by 
% \cmd\AtBeginDcoument\ time, we set default values.
% Up to that point, the class can check if \cmd\twocolumn@sw\
% is \cmd\undefined\ to see if any related options have been invoked.
%
% At \cmd\AtBeginDocument\ time, we must align the value
% of the kernel \cmd\newif\ switch \cmd\if@twocolumn\ 
% to that of \cmd\twocolumn@sw.
%
% At \cmd\AtEndDocument\ time, a hook is installed that,
% say, could return us to one-column page grid.
% This hook is installed as late as possible 
% (i.e., after items like \cmd\printtables).
%    \begin{macrocode}
\AtBeginDocument{%
 \@ifxundefined\twocolumn@sw{%
  \@booleanfalse\twocolumn@sw
 }{}%
 \twocolumn@sw{\@twocolumntrue}{\@twocolumnfalse}%
}%
\AtEndDocument{%
 \class@enddocumenthook
}%
\AtEndOfClass{%
 \appdef\class@enddocumenthook{%
  \close@column
 }%
 \AtBeginDocument{%
  \@ifxundefined\close@column{%
   \let\close@column\close@column@default
  }{}%
 }%
}%
%    \end{macrocode}
% \end{macro}
%
% \classoption{twocolumn} sets up \cmd\maketitle\ to start two columns
% using the \classoption{multicol} package.
% At the end of the document the \env{multicol}
% environment ends. (The fudge with \cmd\hfuzz\ just stops a spurious
% warning about overfull box in the output routine, which appears
% just to be an artifact of ending the environment in the middle
% of the end code for document.
%    \begin{macrocode}
\DeclareOption{twocolumn}{%
  \@booleantrue\twocolumn@sw
  \@booleantrue\multicol@sw
}%
\DeclareOption{twocolumngrid}{%
  \@booleantrue\twocolumn@sw
  \@booleanfalse\multicol@sw
}%
%    \end{macrocode}
%
% \classoption{onecolumn} specifies one-column page grid.
%    \begin{macrocode}
\DeclareOption{onecolumn}{%
  \@booleanfalse\twocolumn@sw
}%
%    \end{macrocode}
%
% \classoption{galley} emulates setting the galleys of
% a two-column journal.
% FIXME: this option should effectively set \cmd\preprintsty@sw\ false.
% NOTE: it makes no sense to assert both galley and twocolumn.
% 
%    \begin{macrocode}
\DeclareOption{galley}{%
  \ExecuteOptions{onecolumn}%
  \@booleantrue\galley@sw
  \appdef\set@pica@hook{%
    \advance\textwidth-\columnsep
    \textwidth.5\textwidth
  }%
}%
%    \end{macrocode}
%
%
% \subsubsection{tightenlines}%
% This class option specifies that standard leading 
% is to be used to set the type.
% If lacking, the leading will be loose.
%
%    \begin{macrocode}
\DeclareOption{tightenlines}{\@booleantrue\tightenlines@sw}
%    \end{macrocode}
%
% \subsubsection{lengthcheck}%
% This class option specifies that the formatted document 
% should approach as closely as possible the
% formatting of an actual journal article 
% to facilitate the author's performance of a length check.
%
%    \begin{macrocode}
\DeclareOption{lengthcheck}{\@booleantrue\lengthcheck@sw}
%    \end{macrocode}
%
% \subsubsection{Draft and Final}%
%    \begin{macrocode}
\DeclareOption{draft}{%
 \@booleantrue\draft@sw
}%
\DeclareOption{final}{%
 \@booleanfalse\draft@sw
}%
%    \end{macrocode}
%
% \subsubsection{eqsecnum}%
% The \classoption{eqsecnum} class option signifies that equations are
% to be numbered within sections.
%    \begin{macrocode}
\DeclareOption{eqsecnum}{\@booleantrue\eqsecnum@sw}
%    \end{macrocode}
%
% \subsubsection{secnumarabic}%
% The \classoption{secnumarabic} class option signifies that sectioning commands are
% to be numbered arabic.
%    \begin{macrocode}
\DeclareOption{secnumarabic}{\@booleantrue\secnumarabic@sw}
%    \end{macrocode}
% The code that polls the Boolean \cmd\secnumarabic@sw\ appears
% in Section~\ref{sec:secnumarabic}.
%
% FIXME: model fleqn after amsfonts. I no longer understand why I said this.
%    \begin{macrocode}
\DeclareOption{fleqn}{\input{fleqn.clo}}
%    \end{macrocode}
%
% \subsubsection{floats/endfloats}%
% These options control, via the Boolean \cmd\floats@sw, 
% whether floats are to be migrated to the end of the document.
%    \begin{macrocode}
\DeclareOption{floats}{\@booleantrue\floats@sw}
\DeclareOption{endfloats}{\@booleanfalse\floats@sw}
\AtBeginDocument{%
 \@ifxundefined\floats@sw{\@booleantrue\floats@sw}{}%
}%
%    \end{macrocode}
%
% \subsubsection{titlepage/notitlepage}%
% These options control, via \cmd\titlepage@sw, 
% whether the title block is to be set on a separate page.
% \begin{macro}{\titlepage@sw}
% The flag \cmd\titlepage@sw\ signifies that a forced 
% page break is to follow the title page: the article
% title appears on a page by itself.
%
% The Boolean \cmd\titlepage@sw\ is in an odd situation:
% its value is set by one or more substyles, contingent
% upon the value of another Boolean.
% Therefore that code must be invoked at \cmd\AtBeginDocument\ time.
% Therefore we must assign the default value at the very end
% of \cmd\AtBeginDocument\ processing: we use \cmd\defaults@hook.
% Luckily, this Boolean does not need to be queried at
% \cmd\AtBeginDocument\ time, or we'd be in dire straights.
%    \begin{macrocode}
\DeclareOption{titlepage}{\@booleantrue\titlepage@sw}
\DeclareOption{notitlepage}{\@booleanfalse\titlepage@sw}
\appdef\defaults@hook{%
 \@ifxundefined\titlepage@sw{\@booleanfalse\titlepage@sw}{}%
}%
%    \end{macrocode}
% \end{macro}
%
% \subsubsection{Substyle and Sub-substyle}%
%
% If the society has already been assigned,
% notify user that \cmd\@society\ is being overridden.
% 
%    \begin{macrocode}
\def\change@society#1{%
 \def\@tempa{#1}%
 \@ifxundefined\@society{}{%
  \@ifx\@tempa\@society{}{%
   \REVTEX@warn{Conflicting society \@tempa<>\@society.}%
  }%
 }%
 \let\@society\@tempa
}%
\DeclareOption{aps}{\change@society{aps}\def\@journal{}}%
\DeclareOption{pra}{\change@society{aps}\def\@journal{pra}}%
\DeclareOption{prb}{\change@society{aps}\def\@journal{prb}}%
\DeclareOption{prc}{\change@society{aps}\def\@journal{prc}}%
\DeclareOption{prd}{\change@society{aps}\def\@journal{prd}}%
\DeclareOption{pre}{\change@society{aps}\def\@journal{pre}}%
\DeclareOption{prl}{\change@society{aps}\def\@journal{prl}}%
\DeclareOption{prstab}{\change@society{aps}\def\@journal{prstab}}%
\DeclareOption{rmp}{\change@society{aps}\def\@journal{rmp}}%
%    \end{macrocode}
%
% NOTE: \file{revguide.tex} does not mention any \cmd\@journal\ options
% besides \classoption{prb}.
%
% \begin{macro}{amsfonts}
% The class option \classoption{amsfonts} has the
% same effect as if the document preamble contained
% a \cmd\usepackage\verb${amsfonts}$ statement.
%    \begin{macrocode}
\DeclareOption{amsfonts}{%
  \def\REVTEX@amsfonts{\RequirePackage{amsfonts}}%
}%
\DeclareOption{noamsfonts}{%
  \let\REVTEX@amsfonts\@empty
}%
\AtEndOfClass{\@ifxundefined\REVTEX@amsfonts{}{\REVTEX@amsfonts}}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{amssymb}
% The class option \classoption{amssymb} has the
% same effect as if the document preamble contained
% a \cmd\usepackage\verb${amssymb}$ statement.
%    \begin{macrocode}
\DeclareOption{amssymb}{%
  \def\REVTEX@amssymb{\RequirePackage{amssymb}}%
}%
\DeclareOption{noamssymb}{%
  \let\REVTEX@amssymb\@empty
}%
\AtEndOfClass{\@ifxundefined\REVTEX@amssymb{}{\REVTEX@amssymb}}%
%    \end{macrocode}
% \end{macro}
%
% \subsubsection{Presenting Authors and Their Affiliations}%
% \changes{v4.0beta 2}{1999/06/20}
%    {These options are now mutually exclusive. But is this correct?}
%
% The \classoption{runinaddress}    option is the only one that sets \cmd\runinaddress@sw\ to true.
%
% The \classoption{unsortedaddress} option is the only one that sets \cmd\@affils@sw\ to false.
% 
% If we take the \classoption{groupedaddress} option as the default, then we can look upon
% the \classoption{superscriptaddress} option as simply turning \cmd\groupauthors@sw\ to false.
%
% \classoption{groupedaddress}, the default, groups authors above a common address.
% In order to assert the default and still provide for proper precedence
% for document-supplied options, we carry out our action at \cmd\AtBeginDocument\ time,
% and only if none of the related class options were invoked.
%    \begin{macrocode}
\DeclareOption{groupedaddress}{\clo@groupedaddress}%
\def\clo@groupedaddress{%
 \@booleantrue\groupauthors@sw
 \@booleantrue\@affils@sw
 \@booleanfalse\runinaddress@sw
}%
\AtBeginDocument{%
 \@ifxundefined\groupauthors@sw{\clo@groupedaddress}{}%
}%
%    \end{macrocode}
%
% \classoption{unsortedaddress} is similar to \classoption{groupedaddress},
% but turns off \cmd\@affils@sw,
% with the resulrt that each address that is entered will be printed.
%    \begin{macrocode}
\DeclareOption{unsortedaddress}{\clo@unsortedaddress}%
\def\clo@unsortedaddress{%
 \@booleantrue\groupauthors@sw
 \@booleanfalse\@affils@sw
 \@booleanfalse\runinaddress@sw
}%
%    \end{macrocode}
%
% \classoption{runinaddress} is similar to \classoption{groupedaddress},
% with the addition of the Boolean \cmd\runinaddress@sw,
% which causes the authors to be formatted in a paragraph instead of
% on separate lines.
%    \begin{macrocode}
\DeclareOption{runinaddress}{\clo@runinaddress}%
\def\clo@runinaddress{%
 \@booleantrue\groupauthors@sw
 \@booleantrue\@affils@sw
 \@booleantrue\runinaddress@sw
}%
%    \end{macrocode}
%
% \classoption{superscriptaddress} presents author affiliations 
% as superscripts. Authors with like affiliations share the same
% superscript.
%    \begin{macrocode}
\DeclareOption{superscriptaddress}{\clo@superscriptaddress}%
\def\clo@superscriptaddress{%
 \@booleanfalse\groupauthors@sw
 \@booleantrue\@affils@sw
 \@booleanfalse\runinaddress@sw
}%
%    \end{macrocode}
%
%
% \subsubsection{Typeset by \revtex}%
%
% The class option \classoption{byrevtex} signifies that you want the 
% ``Typeset by \revtex'' byline to appear on your formatted output.
% By default, no such byline appears.
%    \begin{macrocode}
\DeclareOption{byrevtex}{\@booleantrue\byrevtex@sw}%
%    \end{macrocode}
%
%
% \subsection{Default Option}%
%
% The default handling for a document class option is to
% treat it as the name of a society and 
% hunt for a corresponding \file{.rtx} file to read in.
% This behavior is much like the \LaTeX2.09 handling, where
% one looked for a \file{.sty} file, except that 
% in this case, we must catch the case where multiple
% unknown options are declared.
%
%    \begin{macrocode}
\DeclareOption*{%
 \IfFileExists{\CurrentOption\REVTEX@society@ext}{%
  \expandafter\change@society\expandafter{\CurrentOption}%
 }{%
  \OptionNotUsed
 }%
}%
\def\REVTEX@society@ext{.rtx}%
\AtEndOfClass{%
 \@ifxundefined\@society{%
  \REVTEX@warn{No Society specified, using generic APS style}%
  \def\@society{aps}\def\@journal{}%
 }{}%
 \expandafter\input\expandafter{\@society\REVTEX@society@ext}%
}%
%    \end{macrocode}
%
% \subsection{Class-Asserted Options}%
% \changes{v4.0beta 2}{1999/06/20}
%    {%
%     Removed invocation of nonexistent class option \protect\classoption{groupauthors}
%     and all other class options that should only be invoked by the document.
%     (Otherwise precedence of class options does not work.)
%    }
% Here we establish the default document class options.
% Those of the document itself will override these.
%    \begin{macrocode}
\ExecuteOptions{10pt}
%    \end{macrocode}
%
% \subsection{Execute Options}%
% The document class options are processed in the order 
% they are declared in this document class file.
%
% Precedence is established in the following way:
%
% First, the single \file{.rtx} file is read in. 
% It may set values to any of the Booleans that represent class options,
% but it may do so only if that Boolean is undefined, signifying 
% that its corresponding document class options were absent from 
% the document's option list.
% In this way correct precedence of class options is maintained.
%
% Second, the type size option is acted upon. Type size code
% should not require altering the values of any of the Booleans carrying
% class options.
%
% Next, at \cmd\AtEndOfClass\ time, certain packages are read in.
%
% Finally, at \cmd\AtBeginDocument\ time, the state of the Booleans determines
% how the formatting will go.
%
%    \begin{macrocode}
\ProcessOptions\relax
%    \end{macrocode}
%
%
% \section{Procedures Dependent Upon Options}
%
% \begin{macro}{\ps@headings}
% \begin{macro}{\ps@myheadings}
% \changes{v4.e}{1998/01/31}
%    {Move after process options, so the following test works}
% \changes{v4.0beta 2}{1999/06/20}
%    {Defer decision until \cs{AtBeginDocument} time}
%    \begin{macrocode}
\def\ps@headings@twoside{%
    \let\@mkboth\markboth
    \let\@oddfoot\@empty
    \let\@evenfoot\@empty
    \def\@evenhead{\thepage\hfil \slshape \leftmark}%
    \def\@oddhead{{\slshape \rightmark}\hfil \thepage}%
    \def\sectionmark##1{%
      \markboth{%
       \MakeTextUppercase{%
        \@ifnum{\c@secnumdepth >\z@}{\thesection\hskip 1em\relax}{}%
         ##1%
       }%
       }{}%
    }%
    \def\subsectionmark##1{%
      \markright {%
        \@ifnum{\c@secnumdepth >\@ne}{\thesubsection\hskip 1em\relax}{}%
         ##1%
      }%
    }%
}%
\def\ps@headings@oneside{%
    \let\@mkboth\markboth
    \let\@oddfoot\@empty
    \let\@evenfoot\@empty
    \def\@oddhead{{\slshape \rightmark}\hfil\thepage}%
    \def\sectionmark##1{%
     \markright {%
      \MakeTextUppercase{%
       \@ifnum{\c@secnumdepth >\z@}{\thesection\hskip 1em\relax}{}%
       ##1%
      }%
     }%
    }%
}%
\AtBeginDocument{%
 \twoside@sw{%
  \let\ps@headings\ps@headings@twoside
 }{%
  \let\ps@headings\ps@headings@oneside
 }%
}%
%    \end{macrocode}
%
%    \begin{macrocode}
\def\ps@myheadings{%
  \let\@mkboth\@gobbletwo
  \def\@oddhead{{\slshape\rightmark}\hfil \thepage}%
  \let\@oddfoot\@empty
  \def\@evenhead{\thepage\hfil\slshape\leftmark}%
  \let\@evenfoot\@empty
  \let\sectionmark\@gobble
  \let\subsectionmark\@gobble
}%
\def\ps@article{%
  \def\@evenhead{\thepage\hfil{\leftmark}}%
  \def\@oddhead{{\rightmark}\hfil \thepage}%
  \def\@oddfoot{\byrevtex@sw{\hfil Typeset by \revtex\hfil}{}}%
  \let\@evenfoot\@oddfoot
  \let\@mkboth\@gobbletwo
  \let\sectionmark\@gobble
  \let\subsectionmark\@gobble
}%
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\lastpage@putlabel}
% Support the default meaning of \cmd\@endpage.
% \changes{v4.d}{1998/01/31}
%    {Move after process options, so \cs{clearpage} not in scope of
%     twocolumn}
% Name of this macro (and the \cmd\label\ key) taken from 
% \url{CTAN:/macros/latex/contrib/other/lastpage}%
% with code optimised slightly.
%    \begin{macrocode}
\def\lastpage@putlabel{%
 \if@filesw
  \begingroup
    \advance\c@page\m@ne
    \immediate\write\@auxout{\string\newlabel{LastPage}{{}{\thepage}}}%
  \endgroup
 \fi
}%
%    \end{macrocode}
% Install a late hook into \cmd\AtEndDocument\  that 
% labels the last page of the document.
% This is done just before the \file{.aux} file
% is closed, and does not require a \cmd\shipout, because it writes
% directly to the \file{.aux} file.
% Note that we invoke \cmd\clearpage: this means that no more typesetting
% should be done past this point.
% Check: are there any more things installed via \cmd\AtEndDocument?
%    \begin{macrocode}
\AtEndDocument{%
 \clearpage\lastpage@putlabel
}%
%    \end{macrocode}
% \end{macro}
%
%
% \section{Required Packages}
% \url{CTAN:macros/latex/contrib/other/misc/url.sty}%
%    \begin{macrocode}
\RequirePackage{url}%
%    \end{macrocode}
%
% \section{Society- and Journal-Specific Code}
%
% \begin{macro}{\@journal}
% Journal test helper, used as
% \begin{verbatim}
%\@ifx{\@journal\journal@pra}{%
%  <journal-specific setup>
%\fi
% \end{verbatim}
% Journal code might like to further specify (if as yet undefined) or distinguish on
% the following Booleans.
%
% Note: the journal substyle code should only alter the value of one of these Booleans if
% the Boolean is \cmd\undefined. This convention is what makes the document's
% options take precedence over the values set by the journal.
% 
% FIXME: make this table an exhaustive listing of all the parameters set by
% the class options.
%
% \begin{tabular}{ll}
% \cmd\@pointsize      &(10|11|12), depending on the type size\\
% \cmd\footinbib@sw    &true if footnotes are to be formatted in the bibliography\\
% \cmd\preprintsty@sw  &true for preprint and hyperpreprint\\
% \cmd\eqsecnum@sw     &true means that equations are numbered within sections\\
% \cmd\secnumarabic@sw &true means the sections are to be numbered arabic\\
% \cmd\groupauthors@sw &true means authors listed separately for each address\\
% \cmd\showPACS@sw     &true means to produce the PACS as part of the title block\\
% \cmd\@affils@sw      &true means each affiliation is printed, for each author\\
% \cmd\runinaddress@sw &true means author addresses are printed run-in\\
% \cmd\draft@sw        &true implies that PACS will be printed\\
% \cmd\tightenlines@sw &true if preprint single spaced\\
% \cmd\lengthcheck@sw  &true if length checking is in effect\\
% \cmd\byrevtex@sw     &true means to announce ``typeset by \revtex''\\
% \cmd\titlepage@sw    &true for title is to be set on a separate page\\
% \cmd\twocolumn@sw    &true if two-column page grid\\
% \cmd\twoside@sw      &true means to format pages for duplex printing\\
% \cmd\floats@sw       &false means floats are migrated to end of document\\
% \cmd\REVTEX@amsfonts &if \cmd\@empty, means that \classname{amsfonts} will \emph{not} be loaded\\
% \cmd\REVTEX@amssymb  &if \cmd\@empty, means that \classname{amssymb} will \emph{not} be loaded\\
% \cmd\author@note     &if \cmd\undefined, means that the default (\cmd\footnote) will be used\\
% \cmd\place@bibnumber &if \cmd\undefined, means that the default (inline) will be used\\
% \end{tabular}
%
% Note: if \cmd\twocolumn@sw\ and \cmd\preprintsty@sw\ are both false,
% then `galley' style is in effect. The \classoption{galley} option invokes
% \classoption{onecolumn}, but does not affect the \cmd\preprintsty@sw.
%
% Note: \cmd\paperwidth\ and \cmd\paperheight\ are not integrated into this scheme,
% and should be selected by the document alone.
% \end{macro}
%
%
% \section{Front Matter}
%
% \subsection{The title command}%
%
% \begin{macro}{\title}
% \begin{macro}{\REVTEX@title}
% The author uses \cmd\title\ to specify the title, as in the AMS
% classes, \cmd\title\ has an optional argument specifying a short form
% for use in running heads.
%    \begin{macrocode}
\renewcommand\title{\@dblarg\REVTEX@title}%
%    \end{macrocode}
%
%    \begin{macrocode}
\def\REVTEX@title[#1]#2{%
  \def\@title{#2}%
  \def\@shorttitle{#1}%
}%
%    \end{macrocode}
%    \end{macro}
%    \end{macro}
%
% \begin{macro}{\@title}
% \begin{macro}{\@shorttitle}
% The arguments to \cmd\title\ are saved in these internal
% macros, which are set up to produce a warning if \cmd\title\ has not
% been used before \cmd\maketitle.
%    \begin{macrocode}
\def\@title{\REVTEX@warn{No title}}%
\def\@shorttitle{}%
%    \end{macrocode}
%    \end{macro}
%    \end{macro}
%
%
% \subsection{The author command and related commands}%
%
% \begin{macro}{\c@affil}
% A counter to store the affiliation numbers used for the
% superscript marks. This command defines \cmd\theaffil.
%    \begin{macrocode}
\newcounter{affil}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\author}
% Each author is given in a \emph{separate} \cmd\author\ command.
% This is similar to the AMS classes, but the AMS also try to support
% the \classname{article} class \cmd\and\ command for putting multiple
% authors in one \cmd\author\ command. \cmd\and\ is not supported in this
% class.
%
% This procedure moves the previous author to the list for
% the current address (\cmd\move@author)
% and starts a new author name with a flag value indicating
% that an \cmd\author\ with no affiliation
% has been specified (a following \cmd\affiliation\ command will reset
% this, i.e., \cmd\@author@sw).
%    \begin{macrocode}
\renewcommand\author[1]{%
  \@author@sw{%
    \@addaffils
  }{}%
  \move@author
  \def\@author{{}{}{#1}{}}%
  \let\thanks\thanks@author
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\move@author}
% Move the most recent author to the list of current authors.
% If we recently did a \cmd\@author@init, this is a no-op.
% If we recently encountered a \cmd\collaboration, 
% we preface the author with the \cmd\@collaboration@opr\ intercollated operator,
% otherwise we apply \cmd\@author@opr.
% 
%    \begin{macrocode}
\def\move@author{%
 \@author@sw{}{%
  \collaboration@sw{%
    \@booleanfalse\collaboration@sw
    \expandafter\appdef
    \expandafter\@authors@curr
    \expandafter{%
    \expandafter \@collaboration@opr
                 \@author
                }%
  }{%
    \expandafter\appdef
    \expandafter\@authors@curr
    \expandafter{%
    \expandafter \@author@opr
                 \@author
                }%
  }%
 }%
}%
%    \end{macrocode}
%    \end{macro}
%
% \begin{macro}{\collaboration}
% Specify the collaboration (given after a group of authors).
%
% This procedure does exactly what \cmd\author\ does, and sets
% a flag signifying that the \cmd\collaboration\ command was given.
% 
%    \begin{macrocode}
\@booleanfalse\collaboration@sw
\def\collaboration#1{%
 \groupauthors@sw{%
  \REVTEX@warn{%
   \string\collaboration\space not allowed with groupaddress option.
   Use superscriptaddress instead
  }%
 }{%
  \@booleantrue\collaboration@sw
 }%
 \author{#1}%
}%
\def\@collaboration@opr#1#2#3#4{%
  \par
  {%
   \let\@affilID@temp\@empty
   \@author@opr{#1}{#2}{(\ignorespaces#3\unskip)}{#4}%
  }%
  \par
}%
\def\@collaboration@count{%
 \appdef@eval\@tempa{\the\@tempcnta}%
 \@tempcnta\z@
 \@gobblefour
}%
\def\@collaboration@present#1#2#3#4{%
 \par
 \@author@opr{#1}{#2}{(\ignorespaces#3\unskip)}{#4}\par
 \smallskip
 \reset@authorcount
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@author}
% \changes{v4.0beta 2}{1999/06/20}
%    {Change handling of \cs{@author} to prevent parsing problems.
%     (Helps in error recovery when syntax errors exist)}
% 
% We define a flag value for \cmd\@author (private),
% a procedure for setting \cmd\@author\ to the flag value (\cmd\@author@init),
% and a Boolean to test against the flag value (\cmd\@author@sw).
%    \begin{macrocode}
\def\@author@cleared{{}{}{}{}}%
\def\@author@init{\let\@author\@author@cleared\let\thanks\thanks@warning}%
\def\@author@sw{\@ifx{\@author\@author@cleared}}%
\AtBeginDocument{%
 \@author@init
}%
%    \end{macrocode}
%
% We define procedures for adding tokens to \cmd\@author\ and
% a procedure to do sanity checking just before the title block
% is formatted.
%    \begin{macrocode}
\def\@author@join@i#1#2#3#4#5{%
  \def\@author{{\@join{\@separator}{#1}{#5}}{#2}{#3}{#4}}%
}%
\def\@author@join@ii#1#2#3#4#5{%
  \def\@author{{#1}{\@join{\@separator}{#2}{#5}}{#3}{#4}}%
}%
\def\@author@join@iii#1#2#3#4#5{%
  \def\@author{{#1}{#2}{\@join{\@separator}{#3}{#5}}{#4}}%
}%
\def\@author@join@iv#1#2#3#4#5{%
  \def\@author{{#1}{#2}{#3}{\@join{\@separator}{#4}{#5}}}%
}%
\def\@author@finish{%
 \@author@sw{}{%
  \move@author
  \REVTEX@warn{No affiliation specified for \@author}%
 }%
 \@addaffils
}%
%    \end{macrocode}
%    \end{macro}
%
% \begin{macro}{\@join}
% The procedure \cmd\@join\ inserts 
% a separator between two tokens, or, if the first token is 
% nil, elides both that token and the separator.
%    \begin{macrocode}
\def\@join#1#2#3{%
  \@ifempty{#2}{#3}{#2#1#3}%
}%
\def\@separator{;\space}%
%    \end{macrocode}
%    \end{macro}
%
% \begin{macro}{\surname}
% \begin{macro}{\firstname}
% No-op to allow better post-processing of the file.
%    \begin{macrocode}
\let\surname\@firstofone
\let\firstname\@firstofone
%    \end{macrocode}
%    \end{macro}
%    \end{macro}
%
% \begin{macro}{\@authors@curr}
% The control sequence name \cmd\@authors@curr\ accretes
% author entries (with \cmd\@author@opr\ as the intercollated operator)
% and collaboration entries  (with \cmd\@collaboration@opr\ as the intercollated operator).
% Ultimately, its contents are appended to \cmd\@authors.
% It must be initialized to \cmd\@empty.
% 
%    \begin{macrocode}
\let\@authors@curr\@empty
%    \end{macrocode}
%    \end{macro}
%
% \begin{macro}{\and}
% The original \LaTeX\ idea of using one \cmd\author\ command to capture
% all authors and their address just doesn't work with multiple authors
% possibly sharing addresses, so in this class disable \cmd\and.
%    \begin{macrocode}
\renewcommand\and{\REVTEX@err{\protect\and\space is not supported}}
%    \end{macrocode}
%    \end{macro}
%
% \begin{macro}{\affiliation}
% After each group of authors with the same address,
% give that address in \cmd\affiliation.
% If later in the list you have an author
% with the address of an earlier author, repeat the \cmd\affiliation\
% command, the system will detect the similarity and only print the
% affiliation once, but reuse the superscript marker.
%    \begin{macrocode}
\def\cat@comma@active{\catcode`\,\active}%
{\cat@comma@active\gdef,{\active@comma}}%
\def\active@comma{,\penalty-400\relax}%
\newcommand*\affiliation[1][]{\begingroup\cat@comma@active\@affiliation{#1}}%
\def\@affiliation#1#2{%
  \endgroup
  \move@author\@author@init
%    \end{macrocode}
% Set the \cmd\temp@sw\ to true, then execute the affiliation list (\cmd\@affil@list)
% with the intercollated operator set to \cmd\@affil@match.
% If the current affiliation has been seen before, \cmd\temp@sw\ will be set to true,
% \cmd\@tempc\ will be set to the existing affiliation number,
% and \cmd\@tempd\ will be set to the affiliation's footnote.
% The Boolean \cmd\@affils@sw\ being false prevents this test from ever returning a positive result.
%    \begin{macrocode}
  \@booleanfalse\temp@sw
  \let\@tempd\@empty
  \@affils@sw{%
    \def\@tempa{#2}\let\@affil@opr\@affil@match\@affil@list
  }{}\temp@sw
%    \end{macrocode}
% True clause: This affiliation has been seen before.
% Check its footnote.
%    \begin{macrocode}
  {%
   \def\@tempa{#1}%
   \@ifx{\@tempd\@tempa}{}{%
    \REVTEX@warn{%
     New footnote specified for \string\affiliation{#2}. 
     Please put it on the *first* instance thereof.
    }%
   }%
  }%
%    \end{macrocode}
% False clause: This is a new address:
% increment the counter to get a unique ID for the new affiliation
% and append the new number, address, and footnote to the list \cmd\@affil@list.
%    \begin{macrocode}
  {%
    \stepcounter{affil}%
    \edef\@tempc{\theaffil}%
    \appdef     \@affil@list{\@affil@opr}%
    \appdef@eval\@affil@list\@tempc
    \appdef     \@affil@list{{#1}{#2}}%
  }%
%    \end{macrocode}
% Append the ID of the affiliation to the
% affiliation group of the current author list.
%    \begin{macrocode}
  \appdef@eval\@affilID@curr\@tempc
}%
%    \end{macrocode}
%    \end{macro}
%
% \begin{macro}{\noaffiliation}
% User-level command signifying that the current list of authors
% has \emph{no} affiliation.
%    \begin{macrocode}
\newcommand\noaffiliation{%
  \move@author\@author@init
  \edef\@affilID@curr{\@affilID@curr}%
}%
%    \end{macrocode}
%    \end{macro}
%
% \begin{macro}{\@authors}
% The \cmd\@authors\ macro accretes
% authors (using \cmd\@author@opr\ as the intercollated operator),
% affiliations (using \cmd\@affilID@opr\ as the intercollated operator),
% and collaborations  (using \cmd\@collaboration@opr\ as the intercollated operator).
%
% DPC: It starts with \cmd\relax\ for the affiliation processing,
% and then \cmd\@gobbletwo\ which will eat the \cmd\@andorcomma,
% before the first name, so the first name does not get a comma before it.
%    \begin{macrocode}
\let\@authors\@empty
%    \end{macrocode}
%    \end{macro}
%
% \begin{macro}{\@addaffils}
% \changes{v4.h}{1998/06/25}
%    {Changes to support groups of affiliations}
% Append \cmd\@authors@curr\ and \cmd\@affilID@curr\ to
% \cmd\@authors\ and \cmd\affils@list, respectively.
%    \begin{macrocode}
\def\@addaffils{%
%    \end{macrocode}
% First, append current affiliation group (expansion of \cmd\@affilID@curr)
% to the author list (\cmd\@authors),
% using \cmd\@affilID@opr\ as the intercollated operator;
% also append the current authors (\cmd\@authors@curr).
%    \begin{macrocode}
    \appdef     \@authors{\@affilID@opr}%
    \appdef@eval\@authors{\@affilID@curr}%
    \appdef@e   \@authors{\@authors@curr}%
%    \end{macrocode}
% Next, append the current affiliation group to \cmd\affils@list,
% (if it is not already there)
% using \cmd\affils@opr\ as the intercollated operator.
%    \begin{macrocode}
    \@booleanfalse\temp@sw
    \let\affils@opr\affils@match\affils@list
    \temp@sw{}{%
      \appdef     \affils@list{\affils@opr}%
      \appdef@eval\affils@list{\@affilID@curr}%
    }%
%    \end{macrocode}
% Finally, null out the temp registers.
%    \begin{macrocode}
    \let\@authors@curr\@empty
    \let\@affilID@curr\@empty
}%
%    \end{macrocode}
%    \end{macro}
%
% \begin{macro}{\affils@list}
% The macro \cmd\affils@list\ accretes \cmd\@affilID@curr,
% with \cmd\affils@opr\ as the intercollated operator.
% It must be empty at the beginning of the document.
%    \begin{macrocode}
\let\affils@list\@empty
%    \end{macrocode}
%    \end{macro}
%
% \begin{macro}{\@affil@list}
% The macro \cmd\@affil@list\ accretes the list of affiliations
% with \cmd\@affil@opr\ as the intercollated operator.
% It must be empty at the beginning of the document.
%
% Each \cmd\affiliation\ command in the document contributes
% to this list, as long as the argument of that instance of the command
% is ``new''.
%
% Each entry in this list consists of the \cmd\@affil@opr\ operator
% followed by three brace-delimited tokens, representing, in order:
% \begin{enumerate}
% \item
%    the affiliation's unique ID, a number increasing monotonically for
%    each new entry,
% \item
%    the optional argument of the \cmd\affiliation\ command, 
%    the footnote to the affiliation, and
% \item
%    the text of the affiliation.
% \end{enumerate}
%
% At various junctures in the code, the control sequence name
% \cmd\@affil@opr assumes the meaning of 
% \cmd\@affil@footnote, \cmd\@affil@match, \cmd\@affil@group, or \cmd\@affil@marked,
% and the list \cmd\@affil@list is expanded.
%    \begin{macrocode}
\let\@affil@list\@empty
%    \end{macrocode}
%    \end{macro}
%
% \begin{macro}{\@affilID@curr}
% The macro \cmd\@affilID@curr\ accretes affiliation IDs into an affiliation group.
% It must be empty at the beginning of the document.
%    \begin{macrocode}
\let\@affilID@curr\@empty
%    \end{macrocode}
%    \end{macro}
%
% \begin{macro}{\@affil@match}
% The definition for the \cmd\@affil@list\ intercollated operator
% when adding a new affiliation: seeks a match with any earlier affiliation.
% When the affiliation list is executed, this procedure tests each entry against
% the `new' affiliation (which has been stored in \cmd\@tempa).
%
% Uses \cmd\temp@sw, \cmd\@tempc, and \cmd\@tempd\ to communicate back:
% if it returns \cmd\temp@sw\ true, a match was found,
% then \cmd\@tempc\ will be the first attribute of the matching entry 
% and  \cmd\@tempd\ will be the second attribute of the matching entry.
%    \begin{macrocode}
\def\@affil@match#1#2#3{%
  \def\@tempb{#3}%
  \@ifx{\@tempa\@tempb}{%
    \@booleantrue\temp@sw
    \def\@tempd{#2}%
    \def\@tempc{#1}%
  }{}%
}%
%    \end{macrocode}
%    \end{macro}
%
% \begin{macro}{\@tempaffil@script}
% Give a superscript marker to the address,
% and junk the text argument (|#2|).
%    \begin{macrocode}
\def\@tempaffil@script#1#2{%
 ,\,#1%
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@tempaffil@group}
%
% Execute if we are grouping authors above `main addresses'.
% Put temp address in a footnote, with explanatory text.
% Note: this procedure uses \cmd\@tempb\ and \cmd\@tempc\
% to communicate to \cmd\@affil@opr.
%    \begin{macrocode}
\def\@tempaffil@group#1#2{%
 \def\@tempc{#1}%
 \def\@tempb{#2}%
 \begingroup
  \let\@affil@opr\@affil@footnote\@affil@list
 \endgroup
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@affil@footnote}
% The local definition of \cmd\@affil@opr\ when \cmd\@affil@list\
% is executed by \cmd\@tempaffil@group.
% If a match is found to \cmd\@tempc, then 
% footnotes are formatted with the relevant content.
%    \begin{macrocode}
\def\@affil@footnote#1#2#3{%
  \def\@tempa{#1}%
  \@ifx{\@tempa\@tempc}{%
   \comma@space
   \footnote{\@tempb#3}%
   \footnote{#2}%
  }{}%
}%
%    \end{macrocode}
%    \end{macro}
%
% \begin{macro}{\@affil@group}
% The local definition of \cmd\@affil@opr\ when the list \cmd\@affil@list\
% is executed by \cmd\do@affil@fromgroup:
% Print the address if its number matches \cmd\count@.
%    \begin{macrocode}
\def\@affil@group#1#2#3{%
  \@ifnum{\count@=#1\relax}{%
    #3%
    \@ifempty{#2}{}{\footnote{#2}}%
    \after@address
    \advance\@tempcnta\m@ne
  }{}%
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\email}
% Just tacks the email address on to the current author.
%    \begin{macrocode}
\newcommand*\email[2][Electronic address: ]{%
  \expandafter\@author@join@ii\@author{#1\href{mailto:#2}{#2}}%
}%
%    \end{macrocode}
%    \end{macro}
%
% \begin{macro}{\homepage}
% Just tacks the URL on to the current author.
% Note: group opened in \cmd\homepage\ is closed in \cmd\@homepage.
%    \begin{macrocode}
\newcommand\homepage{%
 \begingroup
  \@makeother\~%
  \@makeother\%%
  \@homepage
}%
\newcommand*\@homepage[2][URL:~]{%
 \endgroup
 \expandafter\@author@join@ii\@author{#1\url{#2}}%
}%
%    \end{macrocode}
%    \end{macro}
%
% \begin{macro}{\url}
% \begin{macro}{\href}
%    \begin{macrocode}
\AtBeginDocument{%
 \providecommand\url{\texttt}%
 \providecommand\href[2]{\url{#2}}%
}%
%    \end{macrocode}
%    \end{macro}
%    \end{macro}
%
% \begin{macro}{\thanks}
% \begin{macro}{\thanks@warning}
% \begin{macro}{\thanks@author}
% The \cmd\thanks\ command is only valid when appearing 
% between an \cmd\author\ command and preceding the following \cmd\affiliation\ command.
% That is, it must be subsidiary to \author.
%    \begin{macrocode}
\def\thanks@warning{%
 \REVTEX@warn{\string\thanks\space is valid only following \string\author.^^JPlease move it.}%
 \@gobble
}%
\let\thanks\thanks@warning
%    \end{macrocode}
%
% The operative version of \cmd\thanks\ appends an item to \@author's second argument.
%    \begin{macrocode}
\def\thanks@author{%
  \expandafter\@author@join@ii\@author
}%
%    \end{macrocode}
%    \end{macro}
%    \end{macro}
%    \end{macro}
%
% \begin{macro}{\altaffiliation}
% \changes{v4.d}{1998/01/31}
%    {change name from \cs{tempaffiliation}}
% \changes{v4.l}{1998/09/01}
%    {add optional argument handling back}
% Implemented more or less like \cmd\thanks\ but shares the affiliation
% counter.
% Optional argument may be used to give explanatory text eg
% `currently staying at'
% This will be placed before the address, if used in a footnote.
%    \begin{macrocode}
\newcommand*\altaffiliation[2][]{%
  \expandafter\@author@join@ii\@author{#1#2}%
}%
%    \end{macrocode}
%    \end{macro}
%
% \begin{macro}{\listand}
% Might need extending with penalties etc.
%    \begin{macrocode}
\def\@listand{\@ifnum{\@tempcnta=\tw@}{\andname}{}\space}%
%    \end{macrocode}
%    \end{macro}
%
% \begin{macro}{\@listcomma}
% This definition, with \cmd\@ne\ puts a comma before and.
% UK English (at least) would normally use \cmd\tw@\ here which would then
% use the more consistent convention of using comma or and but not both.
%    \begin{macrocode}
\def\@listcomma{\@ifnum{\@tempcnta>\@ne}{,}{}}%
%    \end{macrocode}
%    \end{macro}
%
% \begin{macro}{\@author@present@group}
% \changes{v4.d}{1998/01/31}
%    {\cs{comma@space}}
% Basic author-setting wrapper for \cmd\@author@opr.
% Depends on class option.
%
% If grouping authors, not much to do except count down the list
% calling the \cmd\doauthor\ hook on each author.
%    \begin{macrocode}
\def\@author@present@group#1#2#3#4{%
  \gdef\comma@space{\gdef\comma@space{\textsuperscript{,\,}}}%
  \doauthor{#1}{#2}{#3}{#4}%
  \advance\@tempcnta\m@ne
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@author@present@script}
% \changes{v4.h}{1998/06/25}
%    {Changes to support groups of affiliations}
% In the superscript address case, need to add commas between groups
% of address numbers, which are passed in the macro \cmd\@affilID@temp\ in the form
% |{3}{4}{7}| if this set of authors is related to addresses, 3, 4 and 7.
%    \begin{macrocode}
\def\@author@present@script#1#2#3#4{%
  \gdef\comma@space{\textsuperscript{,\,}}%
  \doauthor{#1}{#2}{#3}{%
   \textsuperscript{\expandafter\@affilcomma\@affilID@temp\relax\relax}%
   #4%
  }%
  \advance\@tempcnta\m@ne
}%
\def\@affilcomma#1#2{%
  #1%
  \@ifx{\relax#2}{}{%
    ,\,\@affilcomma
  }%
  #2%
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@author@present@count}
% This version of \cmd\@author@opr\ counts the number of authors it processes.
%    \begin{macrocode}
\def\@doauthor@count{\advance\@tempcnta\@ne\@gobblefour}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\doauthor}
% Main control over how authors are typeset.
%
% |#1| is never loaded
%
% |#2| is loaded by \cmd\email, \cmd\homepage, or \cmd\thanks
%
% |#3| is loaded by \cmd\author
%
% |#4| Superscript marks for address, and any extra marks from \cmd\@thanks\ etc.
%      and is never loaded.
%
% First, the author name is formatted, followed by a comma,
% then come any marks relating to affiliation,
% then come the homepage URL and email address, if any, with
% appropriate punctuation.
%    \begin{macrocode}
\def\doauthor#1#2#3#4{%
  \ignorespaces#3\unskip\@listcomma
  \@ifx{\@affilID@temp\@empty}{}{#4}%
  \@ifempty{#1#2}{}{%
   \@ifx{\@affilID@temp\@empty}{}{\comma@space}%
   \author@note{%
    % \ttfamily
    #1%
    \@ifempty{#1}{}{\@ifempty{#2}{}{, }}%
    #2%
   }%
  }%
  \space\@listand
}%#4
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@affilID@opr}
% \begin{macro}{\@affilID@temp}
% \begin{macro}{\@affilID@def}
% \begin{macro}{\@affilID@count}
% \begin{macro}{\@affilID@match}
% DPC: The number(s) associated to the affiliation address(es).
%
% The control sequence name \cmd\@affilID@opr\ is placed in the
% author list (\cmd\@authors) every time a new affiliation is 
% encountered, with that affiliation as its argument.
%
% Alternative procedures are assigned to this control sequence name,
% and the author list is executed, to either count the number of authors
% at a given address (\cmd\@affilID@count) or to 
% present the given authors (\cmd\@affilID@match).
%
% The default procedure is to simply define \cmd\@affilID@temp\ to the 
% given value (\cmd\@affilID@def).
%
% Note that \cmd\@affilID@temp\ is used to communicate between
% \cmd\doauthor\ and instances of \cmd\@affilID@opr\ within the author list.
%    \begin{macrocode}
\def\@affilID@def#1{%
 \def\@affilID@temp{#1}%
}%
\let\@affilID@temp\@empty
\let\@affilID@opr\@affilID@def
%
\def\@affilID@count#1{%
  \def\@tempb{#1}%
  \@ifx{\@tempa\@tempb}{%
    \let\@author@opr\@doauthor@count
  }{%
    \let\@author@opr\@gobblefour
  }%
}%
\def\@affilID@match#1{%
 \def\@tempb{#1}%
 \@ifx{\@tempa\@tempb}{%
   \let\@author@opr\@author@present
 }{%
   \let\@author@opr\@gobblefour
 }%
}%
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\@thanks}
% \changes{v4.d}{1998/01/31}
%    {\cs{comma@space} added}
% Society-specific options may change this. \cmd\comma@space\ is a separator
% between adjacent footnotes.
%    \begin{macrocode}
\def\@thanks{\comma@space\footnote}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@affil@marked}
% Alias \cmd\@affil@opr:
% The affiliations are being formatted in the case where
% authors are not being grouped: just make a list
% out of the affiliations with the numbers printed.
% Society-specific code can change the formatting
% by overriding the definition of \cmd\frontmatter@affiliationfont.
% FIXME: s/b separate hook. Instead, it is conflated with the hook
% to be used when printing affiliations
%    \begin{macrocode}
\def\@affil@marked#1#2#3{%
  \par
  \begingroup
   \frontmatter@affiliationfont
   \textsuperscript{\normalfont#1}%
   #3\par
  \endgroup
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\affils@match}
% Alias \cmd\affils@opr, 
% this procedure is used to probe the list of affiliation groups
% and set a Boolean if a match is found to \cmd\@affilID@curr.
%    \begin{macrocode}
\def\affils@match#1{%
  \def\@tempa{#1}%
  \@ifx{\@affilID@curr\@tempa}{%
    \@booleantrue\temp@sw
  }{}%
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\do@affil@fromgroup}
% Executes iteratively:
% selects the next address ID to print,
% and then re-execute the list of addresses to print the text of that address.
%
% Note: thus we create an $n^{2}$ computing process.
% FIXME: can use hashing instead, you know.
%    \begin{macrocode}
\def\do@affil@fromgroup#1#2{%
  \@ifx{\relax#2}{}{%
    \count@#2\relax
    #1\do@affil@fromgroup#1%
  }%
}%
%    \end{macrocode}
% \end{macro}
%
%
% \subsection{The keywords command}%
% \begin{macro}{\keywords}
%    \begin{macro}{\@keywords}
% Usual game, save text in a macro for processing by \cmd\maketitle.
%    \begin{macrocode}
\def\keywords#1{%
  \gdef\@keywords{#1}}
%    \end{macrocode}
%
%    \begin{macrocode}
\def\@keywords{}
%    \end{macrocode}
%    \end{macro}
%    \end{macro}
%
% \subsection{The \cs{date} command and related commands}%
% \begin{macro}{\date}
% \begin{macro}{\received}
% \begin{macro}{\revised}
% \begin{macro}{\accepted}
% \begin{macro}{\published}
% \begin{macro}{\@date}
% \begin{macro}{\@received}
% \begin{macro}{\@revised}
% \begin{macro}{\@accepted}
% \begin{macro}{\@published}
% Use the \cmd\date\ command to specify the document date,
% the \cmd\received\ command to specify the date received,
% \cmd\revised\   for date revised,
% \cmd\accepted\  for date accepted, and
% \cmd\published\ for date published.
% Normally only \cmd\date\ to be used by author, 
% the remainder used only by editors.
%
% DPC: As for \cmd\keywords, but this time don't flag a warning if there is no
% revision date specified.
%
% In each case the user-level command defines the value of a 
% macro which buffers the data entered by the user.
% For instance, \cmd\received\ causes \cmd\@received\ to
% acquire a value.
% The optional argument allows the user to override the 
% text that will be typeset along with the date;
% the default value of that text is itself 
% a localized macro.
%    \begin{macrocode}
\renewcommand*\date[2][\Dated@name]{\def\@date{#1#2}}%
\def\@date{}%
\newcommand*\received[2][\Received@name]{\def\@received{#1#2}}%
\def\@received{}%
\newcommand*\revised[2][\Revised@name]{\def\@revised{#1#2}}%
\def\@revised{}%
\newcommand*\accepted[2][\Accepted@name]{\def\@accepted{#1#2}}%
\def\@accepted{}%
\newcommand*\published[2][\Published@name]{\def\@published{#1#2}}%
\def\@published{}%
%    \end{macrocode}
%
%    \end{macro}
%    \end{macro}
%    \end{macro}
%    \end{macro}
%    \end{macro}
%    \end{macro}
%    \end{macro}
%    \end{macro}
%    \end{macro}
%    \end{macro}
%
% \subsection{The pacs command}%
% PACS, the Physics and Astronomy Classification Scheme.
% \begin{macro}{\pacs}
% \begin{macro}{\@pacs}
% As for \cmd\keywords\
%    \begin{macrocode}
\def\pacs#1{%
  \REVTEX@aftermaketitle{\pacs}%
  \gdef\@pacs{#1}%
}%
\def\@pacs{}%{\REVTEX@warn{No PACS numbers}}%
%    \end{macrocode}
%    \end{macro}
%    \end{macro}
%
% \subsection{The \cs{preprint} command}
%
% \changes{v4.g}{1998/06/10}
%    {multiple preprint commands}
%    \begin{macrocode}
\def\preprint#1{\gappdef\@preprint{\preprint{#1}}}%
\let\@preprint\@empty
%    \end{macrocode}
%
% \subsection{draft}
% DPC: Name clash with draft option. \LaTeX\ doesn't care, but it confuses me.
%
% This command is a 3.1 relic, now removed.
%    \begin{macrocode}
%\newcommand\draft{\@booleantrue\draft@sw}%
%    \end{macrocode}
%
% \subsection{The \env{abstract} environment}%
%
% \changes{v4.0beta 2}{1999/06/20}
%    {Gathered all code for the abstract environment together
%     and abstracted out the formatting details for journals to override.}
%
% \begin{macro}{\absbox}
%
%    \begin{macrocode}
\newbox\absbox
%    \end{macrocode}
%    \end{macro}
%
% \begin{environment}{abstract}
% Abstract, as in AMS classes, must be specified \emph{before}
% \cmd\maketitle. It just saves everything up in \cmd\absbox.
% \changes{v4.d}{1998/01/31}
%    {If empty \cs{abstractname} omit spacing}
%    \begin{macrocode}
% \changes{v4.e}{1998/01/31}
%    {hookify}
% Note that the specifics of how the abstract is to be 
% formatted are set by \cmd\frontmatter@abstractwidth,
% \cmd\frontmatter@abstractheading, and \cmd\frontmatter@abstractfont.
% 
\newenvironment{abstract}{%
  \REVTEX@aftermaketitle{\begin{abstract}}%
  \lrbox\absbox
   \minipage{\frontmatter@abstractwidth}%
    \frontmatter@abstractheading
    \frontmatter@abstractfont
}{%
   \endminipage
  \endlrbox
}%
%    \end{macrocode}
%    \end{environment}
%
% \begin{macro}{\frontmatter@abstractheading}
% The default abstract head; journals will override this procedure.
%    \begin{macrocode}
\def\frontmatter@abstractheading{%
 \begin{center}\large\abstractname\end{center}%
 \vspace{-1pc}%
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\frontmatter@abstractfont}
% The default type specification for the body of the abstract.
% Journals will override this setting.
%    \begin{macrocode}
\def\frontmatter@abstractfont{}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\frontmatter@abstractwidth}
% The default setting is the full text width;
% journals can override this setting.
%    \begin{macrocode}
\def\frontmatter@abstractwidth{\textwidth}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\frontmatter@abstract@produce}
% This procedure determines how the abstract is incorporated
% into the title block. We split this out in anticipation
% of the need to lift the limitation that the abstract not break over pages.
%    \begin{macrocode}
\def\frontmatter@abstract@produce{%
  \addvspace\frontmatter@preabstractspace
  \leavevmode\box\absbox\par
  \addvspace\frontmatter@postabstractspace
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\frontmatter@preabstractspace}
% \begin{macro}{\frontmatter@postabstractspace}
% Space above and space below abstract in title block
%    \begin{macrocode}
\def\frontmatter@preabstractspace{.5\baselineskip}
\def\frontmatter@postabstractspace{.5\baselineskip}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
%
%
% \subsection{Formatting the title block}%
%
% \begin{environment}{titlepage}
% This is \LaTeXe's \classname{article} class version,
% with modifications.
%    \begin{macrocode}
\newenvironment{titlepage}{%
      \let\wastwocol@sw\twocolumn@sw
      \wastwocol@sw{\onecolumn}{\newpage}%
      \thispagestyle{titlepage}%
      \setcounter{page}\@ne
}{%
     \wastwocol@sw{\twocolumn}{\newpage}%
     \twoside@sw{}{%
        \setcounter{page}\@ne
     }%
}%
%    \end{macrocode}
% \end{environment}
%
% \begin{macro}{\maketitle}
% \changes{v4.d}{1998/01/31}
%    {hookify}
% Put it all together to format the title block.
%
% Note: using \cmd\@tempcnta\ and \cmd\@tempa\ to communicate between
% procedures.
%    \begin{macrocode}
\def\maketitle{%
% \say\@authors
  \@author@finish
  \title@column\titleblock@produce
  \suppressfloats[t]%
%    \end{macrocode}
% Now save some memory.
%    \begin{macrocode}
  \let\and\relax
  \let\affiliation\@gobble@opt@one
% \let\address\affiliation
  \let\author\@gobble
  \@author@init
  \let\@authors\@empty
  \let\@authors@curr\@empty
  \let\@affil@list\@empty
  \let\keywords\@gobble
  \let\@keywords\@empty
  \let\email\@gobble
  \let\@address\@empty
  \let\maketitle\relax
  \let\thanks\@gobble
  \titlepage@sw{%
    \clearpage
  }{}%
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\titleblock@produce}
% This procedure produces the title block.
%
% It effectively executes inside a group
% (because we cannot rely on \classname{multicols} to do this for us)
% and always returns us to vertical mode.
%    \begin{macrocode}
\def\titleblock@produce{%
 \begingroup
%    \end{macrocode}
% Special footnote version [of footnotes] for \cmd\thanks,
% copied from \classname{article} class \cmd\maketitle.
% \changes{v4.0beta 2}{1999/06/20}
%    {Set \cs{footnote} to \LaTeX\ standard version for this scope.}
%    \begin{macrocode}
  \groupauthors@sw{%
   \let\@author@present\@author@present@group
   \let\frontmatter@author@produce\frontmatter@author@produce@group
   \let\@tempaffil\@tempaffil@group
  }{%
   \let\@author@present\@author@present@script
   \let\frontmatter@author@produce\frontmatter@author@produce@script
   \let\@tempaffil\@tempaffil@script
  }%
  \let\footnote\REVTEX@footnote
  \let\thefootnote\frontmatter@thefootnote
% \let\@makefntext\frontmatter@makefntext
  \global\c@footnote\@ne % FIXME: what if the title had a footnote?
  \let\@makefnmark\frontmatter@makefnmark
  \frontmatter@setup
  \thispagestyle{titlepage}\label{FirstPage}%
%    \end{macrocode}
% Produce the title:
%    \begin{macrocode}
  \frontmatter@title@produce
%    \end{macrocode}
% Produce the author list:
%    \begin{macrocode}
  \frontmatter@author@produce
%    \end{macrocode}
% Produce the dates:
%    \begin{macrocode}
  \frontmatter@RRAPformat{%
   \expandafter\produce@RRAP\expandafter{\@date}%
   \expandafter\produce@RRAP\expandafter{\@received}%
   \expandafter\produce@RRAP\expandafter{\@revised}%
   \expandafter\produce@RRAP\expandafter{\@accepted}%
   \expandafter\produce@RRAP\expandafter{\@published}%
  }%
%    \end{macrocode}
% Produce the abstract, PACS, and keywords, and end any paragraph.
%    \begin{macrocode}
  \frontmatter@abstract@produce
  \@pacs@produce\@pacs
  \@keywords@produce\@keywords
  \par
  \addvspace\frontmatter@finalspace
  \par
 \endgroup
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\frontmatter@title@produce}
% The default formatting procedure for the article title.
% This procedure should take care of the vertical space below the title.
%
% Journals will override this procedure.
%    \begin{macrocode}
\def\frontmatter@title@produce{%
 \begingroup\@title\par\endgroup
 \addvspace{\baselineskip}%
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\frontmatter@author@produce@group}
% \cmd\frontmatter@author@produce@group\ is an alias for \cmd\frontmatter@author@produce, 
% the procedure that formats the author/affiliation list.
%
% In this case, the authors are being grouped above their shared addresses.
%
% This procedure must ensure that any paragraph that it starts gets ended finally.
%    \begin{macrocode}
\def\frontmatter@author@produce@group{%
  \begingroup
    \frontmatter@authorformat
    \let\@collaboration@opr\@gobblefour
    \let\affils@opr\affils@present\affils@list
    \par
  \endgroup
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\frontmatter@author@produce@script}
% \cmd\frontmatter@author@produce@script\ is an alias for \cmd\frontmatter@author@produce, 
% the procedure that formats the author/affiliation list.
%
% In this case, the authors affiliations are being superscripted;
% the authors are not being grouped above their shared addresses.
%
% This procedure must ensure that any paragraph that it starts gets ended finally.
%    \begin{macrocode}
\def\frontmatter@author@produce@script{%
  \begingroup
    \frontmatter@authorformat
%    \end{macrocode}
% \changes{v4.l}{1998/09/01}
%    {Changes to add collaboration processing, which now
%     means doing comma/and processing on each sublist}
% When \cmd\@authors\ is executed, 
% \cmd\@tempcnt\ counts the number of authors in each collaboration,
% and
% \cmd\@tempa\ stores a list of number of authors in each collaboration.
%    \begin{macrocode}
    \let\@tempa\@empty
    \@tempcnta\z@
    \let\@affilID@opr\@gobble
    \let\@author@opr\@doauthor@count
    \let\@collaboration@opr\@collaboration@count
    \@authors
%    \end{macrocode}
% We have now processed the last batch of authors, but
% there might not be a \cmd\collaboration\ at the very end:
% we emulate what would have happened if there were.
%    \begin{macrocode}
    \appdef@eval\@tempa{\the\@tempcnta}%
    \reset@authorcount
%    \end{macrocode}
%  Execute \cmd\@doauthors, presenting the authors and their affiliations.
% Upon completion, there will be two spaces following the last letter because of \cmd\listand\ processing;
% remove them.
%    \begin{macrocode}
    \let\@affilID@opr\@affilID@def
    \let\@author@opr\@author@present
    \let\@collaboration@opr\@collaboration@present
    \@authors\unskip\unskip
    \par
    \frontmatter@above@affiliation
    \let\@affil@opr\@affil@marked\@affil@list
    \par
  \endgroup
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\affils@present}
% Alias of \cmd\affils@opr, 
% process each element in the affiliation list,
% presenting all authors with this affiliation.
%    \begin{macrocode}
\def\affils@present#1{%
%    \end{macrocode}
% Count (using \cmd\@tempcnta) the authors in the author list whose affiliation is |#1|.
% Note that \cmd\@tempa\ is used as a storage register for the argument 
% of the procedure, for purposes of comparison using \cmd\ifx.
%
% QUERY: does the value of \cmd\@tempa\ and \cmd\@affilID@opr\ need to persist?
%
% QUERY: what value does \cmd\@author@opr\ have at this point?
% ANSWER: the \cmd\@affilID@count\ procedure assigns a meaning to \cmd\@author@opr\ dynamically.
%
% QUERY: what value does \cmd\@collaboration@opr\ have at this point? 
% ANSWER: it has been directly defined: the default.
%    \begin{macrocode}
  \def\@tempa{#1}%
  \let\@affilID@opr\@affilID@count
  \begingroup
   \@tempcnta\z@
   \@authors
%    \end{macrocode}
%
% If no authors at this address, skip it.
%    \begin{macrocode}
   \@ifnum{\@tempcnta=\z@}{}{%
%    \end{macrocode}
%
% DPC: If we have a list of length two, need to locally zap a comma
% in case we are following the American custom
% of using `, and' except for lists of length two.
%    \begin{macrocode}
    \begingroup
     \@ifnum{\@tempcnta=\tw@}{%
        \let\@listcomma\relax
     }{}%
%    \end{macrocode}
% Run through the author list, presenting (with \cmd\@author@present)
% those authors whose affiliation matched the given one.
%    \begin{macrocode}
     \let\@affilID@opr\@affilID@match\@authors
    \endgroup
%    \end{macrocode}
%
%    \begin{macrocode}
    \begingroup
     \par
     \frontmatter@above@affiliation
     \frontmatter@affiliationfont
     \let\\\frontmatter@addressnewline
     \runinaddress@sw{%
       \@tempcnta\z@
       \@tfor\@tempa:=#1\do{\advance\@tempcnta\@ne}%
       \@ifnum{\@tempcnta=\tw@}{%
          \let\@listcomma\relax
       }{}%
       \def\after@address{\@listcomma\ \@listand}%
     }{%
      \tightenlines@sw{}{%
       \parskip\z@ %space between affilations in grouped mode
      }%
      \let\after@address\par
     }%
     \let\@affil@opr\@affil@group
     \do@affil@fromgroup\@affil@list#1\relax
    \endgroup
%    \end{macrocode}
% End of branch handling authors.
%    \begin{macrocode}
   }%
%    \end{macrocode}
%
%    \begin{macrocode}
   \par
  \endgroup
 \smallskip
}%
%    \end{macrocode}
%   \end{macro}
%
% \begin{macro}{\reset@authorcount}
% \changes{v4.l}{1998/09/01}
%    {macro added}
% Pull off the author count for this collaboration, and truncate the list
% of counts. For a list of length two, suppress comma addition.
% Note: this procedure communicates through \cmd\@tempcnta\ and \cmd\@tempa.
%    \begin{macrocode}
\def\reset@authorcount{%
  \expandafter\@reset@ac\@tempa0\@reset@ac
  \@ifnum{\@tempcnta=\tw@}{%
    \let\@listcomma\relax
  }{%
    \def\@listcomma{\@ifnum{\@tempcnta>\@ne}{,}{}}%
  }%
}%
%    \end{macrocode}
%
%    \begin{macrocode}
\def\@reset@ac#1#2\@reset@ac{%
  \@tempcnta#1%
  \def\@tempa{#2}%
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@pacs@produce}
%  PACS, keywords and dates.
% \changes{v4.d}{1998/01/31}
%    {PACS boxed to width of abstract}
% \changes{v4.0beta 2}{1999/06/20}
%    {Separate option now controls production}
%    \begin{macrocode}
\def\@pacs@produce#1{%
 \showPACS@sw{\parbox[t]{\frontmatter@abstractwidth}{\@pacs@name#1}}{}%
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@keywords@produce}
%    \begin{macrocode}
\def\@keywords@produce#1{%
% #1\par % FIXME: keywords squelched
}%
%    \end{macrocode}
% \end{macro}
% 
% \begin{macro}{\frontmatter@thefootnote}
%
%    \begin{macrocode}
\def\frontmatter@thefootnote{\@fnsymbol\c@footnote}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\frontmatter@makefnmark}
% The default procedure for setting the footnote mark within the frontmatter.
% Journals will override this procedure.
%    \begin{macrocode}
\def\frontmatter@makefnmark{\@textsuperscript{\normalfont\@thefnmark}}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\frontmatter@makefntext}
% This procedure is used when setting footnotes within the title block.
%    \begin{macrocode}
\long\def\frontmatter@makefntext#1{%
 \parindent 1em
 \noindent
 \@textsuperscript{\normalfont\@thefnmark}#1%
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\frontmatter@setup}
% The default type specification for the title page.
% Journals will override this definition.
%    \begin{macrocode}
\def\frontmatter@setup{}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\frontmatter@RRAPformat}
% \begin{macro}{\punct@RRAP}
% \begin{macro}{\produce@RRAP}
% The procedure \cmd\frontmatter@RRAPformat\ is the formatting procedure
% for the ``Received, Revised, etc.'' block on the title page.
% The macro \cmd\punct@RRAP\ produces the punctuation between the entries.
% Journals will override these two definitions.
%
% The procedure \cmd\produce@RRAP\ is fairly general.
%    \begin{macrocode}
\def\frontmatter@RRAPformat#1{\begingroup#1\par\endgroup}%
\def\punct@RRAP{; }%
\def\produce@RRAP#1{%
  \@ifempty{#1}{}{%
   \@ifvmode{\leavevmode}{\unskip\punct@RRAP\ignorespaces}%
   #1%
  }%
}%
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\frontmatter@authorformat}
% The default type specification for the author list.
% Journals will override this definition.
%    \begin{macrocode}
\def\frontmatter@authorformat{}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\frontmatter@above@affiliation}
% The default amount of space above affiliation.
% Journals will override this definition.
%    \begin{macrocode}
\def\frontmatter@above@affiliation{}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\frontmatter@affiliationfont}
% The default type specification for the affiliation.
% Journals will override this definition.
%    \begin{macrocode}
\def\frontmatter@affiliationfont{}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\frontmatter@finalspace}
%
%    \begin{macrocode}
\def\frontmatter@finalspace{2\baselineskip}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\frontmatter@addressnewline}
% \changes{v4.h}{1998/06/25}
%    {new hook}
% The definition of \cmd\\\ for address handling. Default puts all the `lines'
% on a run-in line, separated by comma and space.
% DPC:  was \newline space between lines of addresss.
%    \begin{macrocode}
\def\frontmatter@addressnewline{%
  \@ifhmode{\skip@\lastskip\unskip\unpenalty\break\hskip\skip@}{}%
  % was: \vskip-.5ex
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\REVTEX@aftermaketitle}
% Error-checking code.
%    \begin{macrocode}
\def\REVTEX@aftermaketitle#1{%
  \@ifx{\maketitle\relax}{%
    \REVTEX@err{\protect#1 must be used before \protect\maketitle}%
  }{}%
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\ps@titlepage}
% Default page style for title page.
% Journals will override this procedure.
%    \begin{macrocode}
\def\ps@titlepage{\ps@empty}%
%    \end{macrocode}
% \end{macro}
%
%FIXME: there is a limitation to the default meaning of 
% \cmd\@startpage, the label ``FirstPage'' is only
% defined if the document has a \cmd\maketitle\ command.
%
%    \begin{macrocode}
\def\volumeyear#1{\gdef\@volumeyear{#1}}%
\def\@volumeyear{}%
\def\volumenumber#1{\gdef\@volumenumber{#1}}%
\def\@volumenumber{}%
\def\issuenumber#1{\gdef\@issuenumber{#1}}%
\def\@issuenumber{}%
\def\eid#1{\gdef\@eid{#1}}%
\def\@eid{}%
%
\def\startpage#1{\gdef\@startpage{#1}\c@page#1\relax}%
\def\@startpage{\pageref{FirstPage}}%
\def\endpage#1{\gdef\@endpage{#1}}%
\def\@endpage{\pageref{LastPage}}%
%    \end{macrocode}
%
%
% \subsection{Printing out the ``list-of'' elements}%
%
% FIXME: The \cmd\appendix@toc\ procedure should change the meaning
% of \cmd\l@section\ so that the \cmd\section s can be appropriately formatted,
% reflecting their status as appendices.
% 
%    \begin{macrocode}
\def\print@toc#1{%
 \begingroup
% \c@secnumdepth-\maxdimen
  \expandafter\section
  \expandafter*%
  \expandafter{%
              \csname#1name\endcsname
              }%
  \let\appendix\appendix@toc
  \@starttoc{#1}%
 \endgroup
}%
\def\appendix@toc{}%
%    \end{macrocode}
%
%
% \section{Body}
%
% \subsection{counters}
% The following definitions are probably identical to those in 
% \file{classes.dtx}%
%    \begin{macrocode}
\def\labelenumi{\theenumi.}
\def\theenumi{\arabic{enumi}}
%    \end{macrocode}
%
%    \begin{macrocode}
\def\labelenumii{(\theenumii)}
\def\theenumii{\alph{enumii}}
\def\p@enumii{\theenumi}
%    \end{macrocode}
%
%    \begin{macrocode}
\def\labelenumiii{\theenumiii.}
\def\theenumiii{\roman{enumiii}}
\def\p@enumiii{\theenumi(\theenumii)}
%    \end{macrocode}
%
%    \begin{macrocode}
\def\labelenumiv{\theenumiv.}
\def\theenumiv{\Alph{enumiv}}
\def\p@enumiv{\p@enumiii\theenumiii}
%    \end{macrocode}
%
%    \begin{macrocode}
\def\labelitemi{\textbullet}
\def\labelitemii{\normalfont\bseries\textendash}
\def\labelitemiii{\textasteriskcentered}
\def\labelitemiv{\textperiodcentered}
%    \end{macrocode}
%
%    \begin{macrocode}
\pagenumbering{arabic}
%    \end{macrocode}
%
% \subsection{float parameters}
%
% from the old aps.sty. (same as article I think)
%    \begin{macrocode}
\setcounter{topnumber}{2}
\def\topfraction{.7}
\setcounter{bottomnumber}{1}
\def\bottomfraction{.3}
\setcounter{totalnumber}{3}
\def\textfraction{.2}
\def\floatpagefraction{.5}
\setcounter{dbltopnumber}{2}
\def\dbltopfraction{.7}
\def\dblfloatpagefraction{.5}
%    \end{macrocode}
%
% \subsection{List Environments}
%
%    \begin{macrocode}
\newenvironment{verse}{%
  \let\\=\@centercr
  \list{}{%
    \itemsep\z@ \itemindent -1.5em\listparindent \itemindent
    \rightmargin\leftmargin\advance\leftmargin 1.5em}\item[]%
}{%
 \endlist
}%
%    \end{macrocode}
%
%    \begin{macrocode}
\newenvironment{quotation}{%
  \list{}{%
    \listparindent 1.5em
    \itemindent\listparindent
    \rightmargin\leftmargin \parsep \z@ \@plus\p@}\item[]%
}{%
 \endlist
}%
%    \end{macrocode}
%
%    \begin{macrocode}
\newenvironment{quote}{%
  \list{}{%
  \rightmargin\leftmargin}\item[]%
}{%
 \endlist
}%
%    \end{macrocode}
%
%    \begin{macrocode}
\def\descriptionlabel#1{%
  \hspace\labelsep \normalfont\bfseries #1%
}%
%    \end{macrocode}
%
%    \begin{macrocode}
\newenvironment{description}{%
 \list{}{%
    \labelwidth\z@ \itemindent-\leftmargin
    \let\makelabel\descriptionlabel
 }%
}{%
 \endlist
}%
%    \end{macrocode}
%
% \subsection{Sectioning Commands}
%
% \subsubsection{Counters and Their Productions}%
%    \begin{macrocode}
\newcounter{part}
\newcounter{section}
\newcounter{subsection}[section]
\newcounter{subsubsection}[subsection]
\newcounter{paragraph}[subsubsection]
\newcounter{subparagraph}[paragraph]
%    \end{macrocode}
%
%    \begin{macrocode}
\def\thepart          {\Roman{part}} %
\def\thesection       {\Roman{section}}
\def\p@section        {}
\def\thesubsection    {\Alph{subsection}}
\def\p@subsection     {\thesection\,}
\def\thesubsubsection {\arabic{subsubsection}}
\def\p@subsubsection  {\thesection\,\thesubsection\,}
\def\theparagraph     {\alph{paragraph}}
\def\thesubparagraph  {\theparagraph.\arabic{subparagraph}}
%    \end{macrocode}
%
% \subsubsection{The Acknowledgments Environment}%
% This user-level command produces a head introducing 
% the acknowledgments, and acts as a wrapper for the text.
% In this implementation, it is an unnumbered section,
% but appears within the toc.
%    \begin{macrocode}
\newenvironment{acknowledgments}{%
 \section*{\acknowledgmentsname}%
}{%
 \par
}%
%    \end{macrocode}
%
% \subsubsection{Part Opener}%
% section setup copied verbatim from revtex3 aps/osa.
% Does not explicitly depend on pointsize options.
%    \begin{macrocode}
\def\part{\par
   \addvspace{4ex}
   \@afterindentfalse
   \secdef\@part\@spart}
%    \end{macrocode}
%
%    \begin{macrocode}
\def\@part[#1]#2{%
 \@ifnum{\c@secnumdepth >\m@ne}{%
        \refstepcounter{part}
        \addcontentsline{toc}{part}{\thepart\hspace{1em}#1}%
 }{%
      \addcontentsline{toc}{part}{#1}%
 }%
 \begingroup
    \parindent \z@ \raggedright
    \interlinepenalty\@M
    \@ifnum{\c@secnumdepth >\m@ne}{%
      \Large \bf \partname~\thepart%
      \par\nobreak
    }{}%
    \huge \bf
    #2%
    \markboth{}{}\par
 \endgroup
   \nobreak
   \vskip 3ex
   \@afterheading
}%
%    \end{macrocode}
%
%    \begin{macrocode}
\def\@spart#1{{\parindent \z@ \raggedright
    \interlinepenalty\@M
    \huge \bf
    #1\par}
    \nobreak
    \vskip 3ex
    \@afterheading}
%    \end{macrocode}
%
% \subsubsection{Stacked Heads}%
%    \begin{macrocode}
\def\section{%
  \@startsection
    {section}%
    {1}%
    {\z@}%
    {0.8cm \@plus1ex \@minus .2ex}%
    {0.5cm \@plus1ex \@minus.2ex}%
    {%
      \normalfont\small\bfseries
      \centering
      \MakeTextUppercase
    }%
}%
\def\@sectioncntformat#1{\csname the#1\endcsname.\quad}%
%    \end{macrocode}
%
%    \begin{macrocode}
\def\subsection{%
  \@startsection
    {subsection}%
    {2}%
    {\z@}%
    {.8cm \@plus1ex \@minus .2ex}%
    {.5cm \@plus1ex \@minus.2ex}%
    {\normalfont\small\bfseries\centering}}
%    \end{macrocode}
%
%    \begin{macrocode}
\def\subsubsection{%
  \@startsection
    {subsubsection}%
    {3}%
    {\z@}%
    {.8cm \@plus1ex \@minus .2ex}%
    {.5cm \@plus1ex \@minus.2ex}%
    {\normalfont\small\itshape\centering}}
%    \end{macrocode}
%
% \subsubsection{Runin Heads}%
%    \begin{macrocode}
\def\paragraph{%
  \@startsection
    {paragraph}%
    {4}%
    {\parindent}%
    {\z@}%
    {-1em}%
    {\normalfont\normalsize\itshape}%
}%
%    \end{macrocode}
%
%    \begin{macrocode}
\def\subparagraph{%
  \@startsection
    {subparagraph}%
    {5}%
    {\parindent}%
    {3.25ex \@plus1ex \@minus .2ex}%
    {-1em}%
    {\normalfont\normalsize\bseries}%
}%
%    \end{macrocode}
%
%
% \subsection{Math}
%
% \begin{macro}{\theequation}
% We change the production of the equation counter so that 
% we can accomodate the \classoption{eqsecnum} option.
%    \begin{macrocode}
\def\theequation{%
 \theequation@prefix\arabic{equation}%
}%
\def\theequation@prefix{}%
%    \end{macrocode}
% \end{macro}
%
%
% \subsection{Type Size-Dependent Settings}
%
% Note that many parameters, as well as the meaning of
% \cmd\normalsize, are deferred until 
% \cmd\AtEndOfClass\ time.
% Therefore, code elsewhere in this class \emph{should not}
% assume these things' values have been set!
%    \begin{macrocode}
\AtEndOfClass{%
 \expandafter\input\expandafter{\@pointsize pt\REVTEX@society@ext}%
}%
%    \end{macrocode}
%
%
% \subsection{All Point Sizes}
%    \begin{macrocode}
\setcounter{secnumdepth}{4}
%    \end{macrocode}
%
%    \begin{macrocode}
\lineskip 1pt
\normallineskip 1pt
\def\baselinestretch{1}%
%    \end{macrocode}
%
%    \begin{macrocode}
\@lowpenalty   51
\@medpenalty  151
\@highpenalty 301
%    \end{macrocode}
%
%    \begin{macrocode}
\@beginparpenalty -\@lowpenalty
\@endparpenalty   -\@lowpenalty
\@itempenalty     -\@lowpenalty
%    \end{macrocode}
%
%    \begin{macrocode}
\arraycolsep 3pt
\tabcolsep 2pt
\arrayrulewidth .4pt
\doublerulesep 2pt
%    \end{macrocode}
%
%    \begin{macrocode}
\skip\@mpfootins = \skip\footins
%    \end{macrocode}
%
%    \begin{macrocode}
\fboxsep  = 3.0pt
\fboxrule = 0.4pt
%    \end{macrocode}
%
% \subsection{Figures}
% \changes{v4.0beta 2}{1999/06/20}
%    {Processing delayed to \cs{AtBeginDocument} time}
%
% \begin{environment}{figure}
% We define the \env{figure} environment.
% Later, we will horse around with its meaning
% in order to accomodate \cmd\floats@sw.
%    \begin{macrocode}
\newenvironment{figure}
               {\@float{figure}}
               {\end@float}
\newenvironment{figure*}
               {\@dblfloat{figure}}
               {\end@dblfloat}
%    \end{macrocode}
% \end{environment}
%
% \begin{macro}{\@makecaption}
% More or less the standard caption code, from article class.
%    \begin{macrocode}
\newlength\abovecaptionskip
\newlength\belowcaptionskip
\setlength\abovecaptionskip{10\p@}
\setlength\belowcaptionskip{0\p@}
%    \end{macrocode}
%
% \changes{v4.0beta 2}{1999/06/20}
%    {One-line caption sets flush left.}
%    \begin{macrocode}
\long\def\@makecaption#1#2{%
  \vskip\abovecaptionskip
  \sbox\@tempboxa{#1: #2}%
  \@ifdim{\wd\@tempboxa >\hsize}{%
    #1: #2\par
  }{%
    \global \@minipagefalse
    \hb@xt@\hsize{\unhbox\@tempboxa\hfil}%
  }%
  \vskip\belowcaptionskip
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\thefigure}
% The figure counter and float placement defaults.
%    \begin{macrocode}
\newcounter{figure}
\renewcommand \thefigure {\@arabic\c@figure}
%    \end{macrocode}
%
%    \begin{macrocode}
\def\fps@figure{tbp}
\def\ftype@figure{1}
\def\ext@figure{lof}
\def\fnum@figure{\figurename~\thefigure}
%    \end{macrocode}
% \end{macro}
%
% \subsubsection{Deferring \env{figure} Floats}%
%
% We install a hook at \cmd\AtBeginDocument\ time which determines if
% figures will float or will be deferred until
% \cmd\printfigures\ time.
%    \begin{macrocode}
\AtBeginDocument{\do@if@floats{figure}{.fgx}}%
\appdef\class@enddocumenthook{%
 \printfigures
}%
%    \end{macrocode}
% 
% \begin{macro}{\printfigures}
% The user-level command \cmd\printfigures\ determines
% where the figures are to appear in a document in which
% \cmd\floats@sw\ is false.
% If the user invokes the \classoption{nofloats} and fails to
% insert a \cmd\printfigures\ command, 
% the figures will be printed at the end of the document.
% If the command is given, but floats are not being deferred, 
% it amounts to a no-op.
% \changes{v4.0beta 2}{1999/06/20}
%    {call \cs{print@floats}}
%    \begin{macrocode}
\newcommand\printfigures{\print@float{figure}}%
%    \end{macrocode}
% \end{macro}
%
%
%
% \subsection{Tables}
% \changes{v4.0beta 2}{1999/06/20}
%    {Processing delayed to \cs{AtBeginDocument} time}
%
% DPC: More or less taken from \file{revtex2} \file{aps.sty},
% but using dcolumn for decimal alignment.
% \begin{environment}{table}
% We define the \env{table} environment.
% Later, we will horse around with its meaning
% in order to accomodate \cmd\floats@sw.
%    \begin{macrocode}
\newenvironment{table}
               {\@float{table}}
               {\end@float}
\newenvironment{table*}
               {\@dblfloat{table}}
               {\end@dblfloat}
%    \end{macrocode}
% \end{environment}
%
% \begin{macro}{\thetable}
% Table counter and default float placement declarations.
%    \begin{macrocode}
\newcounter{table}
\renewcommand\thetable{\@Roman\c@table}
%    \end{macrocode}
%
%    \begin{macrocode}
\def\fps@table{tbp}
\def\ftype@table{2}
\def\ext@table{lot}
\def\fnum@table{\tablename~\thetable}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\tabular@font}
% \begin{macro}{\squeezetable}
% Assign a meaning to the hook installed into float processing.
%
% By default floats are \cmd\small. The \cmd\squeezetable\ declaration
% makes them smaller (\cmd\scriptsize). In general you can locally
% redefine \cmd\tabular@font\ to be whatever you like.
% (DPC: |\Huge\color{magenta}|\ldots?)
%    \begin{macrocode}
\def\tabular@font{\small}%
\def\squeezetable{\def\tabular@font{\scriptsize}}%
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \subsubsection{Deferring \env{table} Floats}%
%
% We install a hook at
% \cmd\AtBeginDocument\ time which determines if
% tables will float or will be deferred until
% \cmd\printtables\ time.
%
% We also deal with the possibility of \env{longtable} environments.
% 
%    \begin{macrocode}
\AtBeginDocument{%
 \floats@sw{}{%
  \let@environment{longtable@float}{longtable}%
  \let@environment{longtable}{longtable@write}%
 }%
 \do@if@floats{table}{.tbx}%
}%
\appdef\class@enddocumenthook{%
 \printtables
}%
\newenvironment{longtable@write}{%
 \write@@float{longtable}{table}%
}{%
 \endwrite@float
}%
%    \end{macrocode}
%
% \begin{macro}{\printtables}
% The user-level command \cmd\printtables\ determines
% where the tables are to appear in a document in which
% \cmd\floats@sw\ is false.
% If the user invokes the \classoption{nofloats} and fails to
% insert a \cmd\printtables\ command, 
% the tables will be printed at the end of the document.
% If the command is given, but floats are not being deferred, 
% it amounts to a no-op.
% \changes{v4.0beta 2}{1999/06/20}
%    {only execute if appropriate}
%    \begin{macrocode}
\newcommand\printtables{%
 \let@environment{longtable}{longtable@float}%
 \print@float{table}%
}%
%    \end{macrocode}
% \end{macro}
%
%
%
% \section{Tabular}
% Every tabular has a double (Scotch) rule above and below.
% The column specifier ``d'' is implemented using the \classname{dcolumn}
% package, if available.
% FIXME: always load dcolumn!
% \begin{macro}{\tabular@hook}
% \begin{macro}{\endtabular@hook}
%    \begin{macrocode}
\def\tabular@hook{}%
\def\endtabular@hook{}%
%\RequirePackage{dcolumn}%
\AtBeginDocument{%
 \@ifpackageloaded{dcolumn}{%
  \newcolumntype{d}{D{.}{.}{-1}}%
 }{}%
}%
\def\toprule{\hline\hline}%
\def\colrule{\hline}%
\def\botrule{\hline\hline}%
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \section{Footnote Text}
%
% \changes{v4.g}{1998/06/10}
%    {single space footnotes}
% \changes{v4.0beta 2}{1999/06/20}
%    {%
%     Frank Mittelbach, der LaTeXf\"uhrer, has stated in \protect\classname{multicol}:
%     ``The kernel command \cs{@footnotetext} should not be modified.''
%     Thus, I have removed David Carlisle's redefinition of that command.
%     }%
%
% \begin{macro}{\@makefntext}
%    \begin{macrocode}
\newcommand\@makefntext[1]{%
  \def\baselinestretch{1}%
  \reset@font\footnotesize
  \parindent 1em%
  \noindent
  \hb@xt@1.8em{\hss\@makefnmark}%
  #1\par
}%
%    \end{macrocode}
% \end{macro}
%
%
% \subsection{Citations, Bibliography, Endnotes}
%
% \subsubsection{Bibliography}
%
% Load Patrick Daly's \classname{natbib} package,
% \url{ftp://ctan.tug.org/macros/latex/contrib/supported/natbib}
%
% Note that \classname{natbib} assumes that it loads
% over a document class, such as the \classname{article} class, 
% that has already defined \env{thebibliography} and \cmd\@listi.
%
% Note also that \classname{natbib} also installs a command
% \cmd\NAT@set@cites\ into \cmd\AtBeginDocument\ which presumes
% that the proper \cmd\bibpunct\ command has been issued.
% 
%    \begin{macrocode}
\newenvironment{thebibliography}{}{}%
\let\@listi\@empty
\RequirePackage{natbib}%
\let\NAT@thebibliography\thebibliography
\let\NAT@endthebibliography\endthebibliography
%    \end{macrocode}
%
% \begin{macro}{\bibliographystyle}
% We arrange for the selection of bibliography style
% to occur either due to the document's explicit
% \cmd\bibliographystyle\ statement or
% via the journal substyle.
%
% Note that \revtex\ is now incompatible with 
% any package that patches \cmd\bibliographystyle,
% except for those (like \classname{natbib}) that load before here.
%    \begin{macrocode}
\let\LATEX@bibliographystyle\bibliographystyle
\def\bibliographystyle{\def\@bibstyle}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\bibsection}
% \begin{macro}{\@bibsetup}
% \begin{macro}{\bibfont}
% \begin{macro}{\@biblabel}
% We define the sectioning command to use when starting the bibliography
% and gently coax \classname{natbib} into using
% the formatting procedures that \emph{we} want to use.
%
% This way of setting up \env{thebibliography} 
% automatically sets the label width based on
% the largest number used within the bibliography.
% This scheme will not work properly using the
% Harvard style of bib entry, though.
%
% In \cmd\bibfont\ is the class's default \cmd\place@bibnumber.
% If neither the document not the journal substyle has made a selection
% at that late moment, the following selection will prevail
% and avoid this procedure being undefined.
%    \begin{macrocode}
\def\bibsection{\section*{\refname}}%
\def\REV@bibsetup#1{\NAT@bibsetup{\ref{LastBibItem}}}%
\let\bibpreamble\@empty
\def\bibfont{%
 \bibsep\z@\relax
 \let\NAT@bibsetup\@bibsetup
 \let\@bibsetup\REV@bibsetup
 \@ifxundefined\place@bibnumber{%
  \let\@biblabel\place@bibnumber@inl
 }{%
  \let\@biblabel\place@bibnumber
 }%
 \def\newblock{\ }%
}%
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\NAT@onlinecite}
% We anticipate using numerical citations.
% If superscript citations are used, we nonetheless need a way to
% use numerical citations as required by the author.
% These should be accessible via the \cmd\citet\ command.
%
% Nonetheless we remember how to do a numerical citation
% even when the superscript citation has been selected.
%
% Can you say ``inelegant hack''? I knew you could!
%    \begin{macrocode}
\let\NAT@citeyear\citeyear
\def\NAT@onlinecite#1{%
 \begingroup
  \let\@cite\NAT@citenum
  \let\NAT@mbox\mbox
  \let\citeyear\NAT@citeyear
  \def\NAT@space{ }%
  \cite{#1}%
 \endgroup
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\onlinecite}
% \begin{macro}{\textcite}
% We assign default meaning to two citation commands;
% \cmd\onlinecite\ is used when a citation should appear
% on the baseline (as opposed to superscripted), and 
% \cmd\textcite\ is used for a textual citation (\cmd\cite\
% gives a parenthetical citation.)
%    \begin{macrocode}
\AtBeginDocument{%
 \@ifxundefined\onlinecite{\def\onlinecite{\citealp}}{}%
 \@ifxundefined\textcite{\def\textcite{\citet}}{}%
}%
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{environment}{thebibliography}%
% We put a tail patch into \cmd\thebibliogrphy\ and
% a headpatch into \cmd\endthebibliography.
%    \begin{macrocode}
\renewenvironment{thebibliography}[1]{%
 \NAT@thebibliography{#1}%
 \@bibnotes
}{%
 \@endnotesinbib
 \edef\@currentlabel{\arabic{NAT@ctr}}%
 \label{LastBibItem}%
 \NAT@endthebibliography
}%
%    \end{macrocode}
% \end{environment}
%
% \begin{macro}{\place@bibnumber@sup}
% Two procedures to select from: produce the \cmd\bibitem\ device.
%    \begin{macrocode}
%\let\@openbib@code\@empty
\def\place@bibnumber@sup#1{\textsuperscript{#1}}%
\def\place@bibnumber@inl#1{[#1]}%
%    \end{macrocode}
% \end{macro}
%
%
% \subsubsection{\cs{endnote}s and \cs{rtx@bibnote}s}
% FIXME: check hyperref compatibility!
%
% \begin{macro}{\rtx@bibnote}
% A version of footnote that appears at the start of the bibliography,
% most likely used as \cmd\frontmatter@footnote.
% 
% Note: this procedure accumulates material in a macro, taxing 
% \TeX's mem.
%    \begin{macrocode}
\def\rtx@bibnote#1{%
  \stepcounter\@mpfn
  \protected@xdef\@thefnmark{\thempfn}%
  \protected@xdef\@@thefnmark{\textsuperscript{\normalfont\thempfn}}%
  \@footnotemark
  \expandafter\g@addto@macro
  \expandafter\@bibnotes
  \expandafter{%
  \expandafter \item
  \expandafter [\@@thefnmark]#1\par
              }%
}%
%    \end{macrocode}
%
%    \begin{macrocode}
\let\@bibnotes\@empty
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\endnote}
% A version of footnote that appears at the end of the document.
% Actually it just appears where \cmd\printendnotes\ appears.
%    \begin{macrocode}
\def\endnote{%
 \@ifnextchar[{%
  \@xendnote
 }{%
  \stepcounter{footnote}%
  \protected@xdef\@thefnmark{\thefootnote}%
  \@footnotemark
  \@endnotetext
 }%
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@xendnote}
%    \begin{macrocode}
\def\@xendnote[#1]{%
   \begingroup
     \c@footnote#1\relax
     \unrestored@protected@xdef\@thefnmark{\thefootnote}%
   \endgroup
   \@footnotemark
   \@endnotetext
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\REVTEX@endnote@ext}
%    \begin{macrocode}
\def\REVTEX@endnote@ext{.end}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@endnotetext}
% The commands \cmd\label, \cmd\index, and \cmd\glossary,
% which are robustified for \cmd\markright\ and \cmd\addcontentsline,
% are likewise robustified here.
%    \begin{macrocode}
\long\def\@endnotetext#1{%
  \@ifx{\@endnoteout\@undefined}{%
    \newwrite\@endnoteout
    \gdef\endnote@stream{\jobname\REVTEX@endnote@ext}%
    \immediate\openout\@endnoteout\endnote@stream\relax
  }{}%
  \begingroup
    \let\label\relax \let\index\relax \let\glossary\relax
    \let\cite\relax \let\ref\relax \let\pageref\relax
    \let\\\relax
    \let\protect\noexpand
    \newlinechar`\^^M%
%   \newlinechar`\ %
    \immediate\write\@endnoteout{\noexpand\REVdoendnote{\@thefnmark}{#1}}%
  \endgroup
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\endnotetext}
%    \begin{macrocode}
\def\endnotetext{%
  \@ifnextchar[{%
   \@xendnotenext
  }{%
   \protected@xdef\@thefnmark{\thefootnote}\@endnotetext
  }%
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@xendnotenext}
%    \begin{macrocode}
\def\@xendnotenext[#1]{%
  \begingroup
     \c@footnote#1\relax
     \unrestored@protected@xdef\@thefnmark{\thefootnote}%
  \endgroup
  \@endnotetext
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\printendnotes}
%    \begin{macrocode}
\def\printendnotes{%
 \@ifx{\@endnoteout\@undefined}{}{%
  \begingroup
   \c@secnumdepth-\maxdimen
   \section{%
    \notesname
   }%
   \immediate\closeout\@endnoteout
   \global\let\@endnoteout\@undefined
   \begin{enumerate}%
   \makeatletter
   \input{\endnote@stream}%
   \end{enumerate}%
  \endgroup
 }%
}%
\appdef\class@enddocumenthook{%
 \printendnotes
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\REVfirstnote}
% \begin{macro}{\set@firstnote}
%
% In \revtex, we have permanently altered the way
% that the footnote counter gets reset at the beginning
% of the document. 
%
% If footnotes appear in the bibliography, we initialise 
% the footnote counter to number of cites (found last time)
% via \cmd\set@firstnote.
%
%    \begin{macrocode}
\chardef\REVfirstnote\z@
\AtBeginDocument{%
 \global\c@footnote\REVfirstnote
 \appdef\maketitle{\global\c@footnote\REVfirstnote}%
}%
\def\set@firstnote#1{%
 \@ifnum{\REVfirstnote=#1\relax}{}{%
  \REVTEX@warn@end{Endnote numbers changed: rerun LaTeX}%
 }%
 \immediate\write\@mainaux{%
   \global\chardef\string\REVfirstnote#1\relax
 }%
}%
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\@endnotesinbib}
% \begin{macro}{\@endnotesinbibliography}
% We define a function \cmd\@endnotesinbib,
% and a variant \cmd\@endnotesinbibliography.
% The former is invoked at the start of 
% the end processing for \enve{thebibliography};
% the latter is a synonym.
%
% The procedure typesets the footnotes that are to 
% appear in the bibliography; the default is to
% simply arrange for the footnote counter to be
% reset at the start of the document.
%
% The switchover to setting footnotes in the bibliography
% is done via \cmd\AtBeginDocument\ code that
% changes the meaning of \cmd\footnote\ and
% that substitutes the synonym for 
% \cmd\@endnotesinbib.
%
% Note that this code make the assumption that 
% the counter used in \env{thebibliography} is \cmd\c@NAT@ctr.
%
%    \begin{macrocode}
\def\@endnotesinbib{%
 \set@firstnote\z@
}%
\def\@endnotesinbibliography{%
 \expandafter\set@firstnote\expandafter{\the\c@NAT@ctr}%
 \@ifx{\@endnoteout\@undefined}{}{%
  \immediate\closeout\@endnoteout
  \global\let\@endnoteout\@undefined
  \makeatletter
  \input{\endnote@stream}%
 }%
}%
\AtBeginDocument{%
 \let\REVTEX@footnote\footnote
 \footinbib@sw{%
  \let\footnote\endnote
  \let\printendnotes\relax
  \let\@endnotesinbib\@endnotesinbibliography
 }{}%
}%
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\REVdoendnote}
%    \begin{macrocode}
\def\REVdoendnote#1#2{\bibitem{endnote#1}#2}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@bibnotes}
%    \begin{macrocode}
\let\@bibnotes\@empty
%    \end{macrocode}
% \end{macro}
%
%
%
% \section{Initial setup}
% \changes{v4.0beta 2}{1999/06/20}
%    {Defer assignment until \cs{AtBeginDocument} time.}
% Note that this code is executed at \cmd\AtBeginDocument\ time 
% in order to handle a particular timing problem.
% Please do not move this code any earlier!
%    \begin{macrocode}
\AtBeginDocument{%
%    \end{macrocode}
%
%    \begin{macrocode}
 \ps@article
 \pagenumbering{arabic}%
 \normalsize
 \tabbingsep \labelsep
 \leftmargin\leftmargini
 \labelwidth\leftmargin\advance\labelwidth-\labelsep
 \let\@listi\@listI
 \@listi
 \@ifxundefined\REVTEX@settypespec{}{\REVTEX@settypespec}%
%    \end{macrocode}
%
%    \begin{macrocode}
 \twoside@sw{}{%
  \raggedbottom
 }%
%    \end{macrocode}
%
% FIXME: Always sloppy??
%    \begin{macrocode}
 \multicol@sw{}{%
  \twocolumn@sw{%
   \twocolumn
   \sloppy
   \raggedbottom
  }{%
   \onecolumn
   \sloppy
   \raggedbottom
  }%
 }%
%    \end{macrocode}
%
%    \begin{macrocode}
}%
%    \end{macrocode}
%
%
% \section{\cs{appendix}}
%
%    \begin{macrocode}
%\newif\ifappendixon
%    \end{macrocode}
% Note that, within appendices, 
% equations are numbered within sections (appendices).
%    \begin{macrocode}
\def\appendix{%
  \par
% \appendixontrue
  \setcounter{section}\z@
  \setcounter{subsection}\z@
  \setcounter{subsubsection}\z@
  \def\thesection{\Alph{section}}%
  \def\thesubsection{\arabic{subsection}}%
  \def\thesubsubsection{\alph{subsubsection}}%
  \@addtoreset{equation}{section}%
  \def\theequation@prefix{\thesection}%
  \addtocontents{toc}{\protect\appendix}%
}%
%    \end{macrocode}
%
% \section{Changing the page grid}
% \changes{v4.0beta 2}{1999/06/20}
%    {Define three separate environments,
%     defer assignment to \cs{AtBeginDocument} time.
%     }
%
% \subsection{Grid Changes with \classname{multicol}}%
%
% \begin{macro}{\title@column@multicol}%
% \begin{macro}{\close@column@multicol}%
% We're changing the page grid with the \classname{multicol} package:
% set a flag value to help us out when the document has a \env{widetext} environment.
%
% Implementation note :the optional argument of \cmd\multicols\ apparently
% does not execute inside a group, as does that of the \cmd\twocolumn\ command.
% However, the \cmd\multicols\ procedure itself opens a group which
% is then closed by \cmd\endmulticols. 
% QUERY: What gets restored when the group closes?
%    \begin{macrocode}
\def\title@column@multicol#1{%
 \@twocolumntrue
 \let\@currenvir@save\@currenvir
 \def\@currenvir{multicols}%
 \multicols{2}[#1]\relax
}%
\def\close@column@multicol{%
 \endmulticols
 \let\@currenvir\@currenvir@save
 \hfuzz\maxdimen
}%
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{environment}{widetext@multicol}
% \changes{v4.0beta 2}{1999/06/20}
%    {Invoke \cs{multicols} without the trappings of 
%     the environment processing.}
% DPC: This version of \env{widetext} is for the two-column 
% page grid. In the open code, we simply switch to a one-column grid;
% in the close code, we resume the interrupted two-column grid.
% Need to play around with \cmd\@currenvir, an internal of \cmd\begin,
% as this is an `inverse' environment.
%    \begin{macrocode}
\newenvironment{widetext@multicol}{%
  \endgroup
  \def\@tempa{multicols}%
  \@ifx{\@currenvir\@tempa}{%
    \csname end\@currenvir\endcsname
  }{%
    \REVTEX@err{%
      widetext environment must not be inside any environment: \@currenvir
    }%
    \def\endwidetext{\begingroup\def\@currenvir{widetext}}%
  }%
}{%
  \multicols{2}\relax
  \begingroup
  \def\@currenvir{widetext}%
  \@endpetrue
}%
%    \end{macrocode}
% \end{environment}
%
%
% \subsection{Avoiding Grid Changes}%
%
% In preprint styles, ``wide text'' is a no-op, and the title page
% processing involves no grid change.
% 
% \begin{macro}{\title@column@default}%
% \begin{macro}{\close@column@default}%
% 
%    \begin{macrocode}
\def\title@column@default#1{#1}%
\def\close@column@default{}%
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
%
% \subsection{Galley Style: Margin Changes}%
% A variant of preprint processing. Emulate journal appearance somewhat.
%
% \begin{environment}{widetext@galley}
% DPC: We're in galley style so do a lob sided display environment.
%
% QUERY: How can we be sure that we are in galley style?
% ANSWER: as noted elsewhere, require both \cmd\twocolumn@sw\ and \cmd\preprintsty@sw\ to be false.
%    \begin{macrocode}
\def\galley@outdent{\rightmargin-\columnwidth\advance\rightmargin-\columnsep}%
\let\widetext@outdent\@empty
\newenvironment{widetext@galley}{%
  \list{}{%
    \listparindent \parindent
    \itemindent    \parindent
    \leftmargin    \z@
    \parsep        \z@\@plus\p@
    \widetext@outdent
    \relax
  }%
  \item\relax
}{
  \endlist
}%
%    \end{macrocode}
% \end{environment}
%
%
% \subsection{Grid Changing Via \LaTeX}%
%
% In case \classoption{twocolumngrid} has been invoked,
% switch column grid using the column grid-changing commands.
% Supply stub definitions of those commands here.
%
% \begin{macro}{\title@column@grid}%
% \begin{macro}{\close@column@grid}%
% Standard \LaTeX\ is entirely adequate to the task of
% dealing with the title block, because 
% it always starts at the top of a new page.
% At the end of the document, the columns will \emph{not}
% be balanced.
% FIXME: balance them!
%    \begin{macrocode}
\def\title@column@grid#1{%
 \@twocolumntrue
 \twocolumn[#1]%
}%
\def\close@column@grid{%
 \onecolumn
}%
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{environment}{widetext@grid}
% We will not get the behavior we want with
% standard \LaTeX\ because it always forces a pagebreak
% when changing the grid. This needs fixed, of course.
%    \begin{macrocode}
\newenvironment{widetext@grid}{%
  \par\ignorespaces\twocolumn@grid
}{%
  \par\onecolumn@grid\global\@ignoretrue
  \@endpetrue
}%
\def\twocolumn@grid{\twocolumn\relax}%
\def\onecolumn@grid{\onecolumn}%
%    \end{macrocode}
% \end{environment}
%
%
% Read in the \classname{multicol} package if need be.
% \changes{v4.d}{1998/01/31}
%    {Hide twocolumn option to stop multicol warning it will not work,
%    when it will.}
%    \begin{macrocode}
\AtEndOfClass{%
 \@ifxundefined\twocolumn@sw{}{%
  \twocolumn@sw{%
   \multicol@sw{%
     \let\REVTEX@tempa\@classoptionslist
     \let\@classoptionslist\@empty
     \RequirePackage{multicol}%
     \let\@classoptionslist\REVTEX@tempa
   }{}%
  }{}%
 }%
}%
%    \end{macrocode}
%
% Decide, finally, how the page grid is to be manipulated.
%    \begin{macrocode}
\AtBeginDocument{%
 \twocolumn@sw{%
  \multicol@sw{%
%    \end{macrocode}
% Change the page grid with \classname{multicol} package.
%    \begin{macrocode}
   \let@environment{widetext}{widetext@multicol}%
   \let\title@column\title@column@multicol
   \let\close@column\close@column@multicol
  }{%
%    \end{macrocode}
% Change the page grid with standard \LaTeX.
%    \begin{macrocode}
   \let@environment{widetext}{widetext@grid}%
   \let\title@column\title@column@grid
   \let\close@column\close@column@grid
  }%
 }{%
  \let@environment{widetext}{widetext@galley}%
  \preprintsty@sw{%
%    \end{macrocode}
% Change the page grid not at all.
%    \begin{macrocode}
  }{%
%    \end{macrocode}
% If we are galley style, change the page margin only.
%    \begin{macrocode}
   \galley@sw{%
    \let\widetext@outdent\galley@outdent
   }{%
   }%
  }%
 }%
}%
%    \end{macrocode}
%
% \begin{macro}{\title@column}
% Provide a default meaning for \cmd\title@column\
% in case it was never defined.
%    \begin{macrocode}
\AtBeginDocument{%
 \@ifxundefined\title@column{%
  \let\title@column\title@column@default
 }{}%
}%
%    \end{macrocode}
% \end{macro}
%
%
% \section{Old font commands}
%
%    \begin{macrocode}
\DeclareOldFontCommand{\rm}{\normalfont\rmfamily}{\mathrm}
\DeclareOldFontCommand{\sf}{\normalfont\sffamily}{\mathsf}
\DeclareOldFontCommand{\tt}{\normalfont\ttfamily}{\mathtt}
\DeclareOldFontCommand{\bf}{\normalfont\bfseries}{\mathbf}
\DeclareOldFontCommand{\it}{\normalfont\itshape}{\mathit}
\DeclareOldFontCommand{\sl}{\normalfont\slshape}{\@nomath\sl}
\DeclareOldFontCommand{\sc}{\normalfont\scshape}{\@nomath\sc}
\DeclareRobustCommand*\cal{\@fontswitch\relax\mathcal}
\DeclareRobustCommand*\mit{\@fontswitch\relax\mathnormal}
%    \end{macrocode}
%
% \section{English-Language Texts}
% As this class is just for English language journals, we
% could hardwire these texts,
% but to make it easier to use this as a
% basis for the code for similar journal styles, separate out all the
% fixed text strings into the conventional macros of the form 
% |\|\ldots|name|
%
% Some of these might need changing in the society-specific code.
%
% \begin{macro}{\today}
% Procedure \cmd\today\ is used in the article class, but not in 
% this document class.
%    \begin{macrocode}
\def\today{\ifcase\month\or
  January\or February\or March\or April\or May\or June\or
  July\or August\or September\or October\or November\or December\fi
  \space\number\day, \number\year}
%    \end{macrocode}
%    \end{macro}
%
% \begin{macro}{\notesname}
% Text entity \cmd\notesname\ is used in \cmd\printendnotes.
%    \begin{macrocode}
\def\notesname{Notes}
%    \end{macrocode}
%    \end{macro}
%
% \begin{macro}{\partname}
% Text entity \cmd\partname\ is used in \cmd\@part.
%    \begin{macrocode}
\def\partname{Part}
%    \end{macrocode}
%    \end{macro}
%
% \begin{macro}{\tocname}
% Text entity \cmd\tocname\ is used in \cmd\tableofcontents,
% as defined in the standard \LaTeX\ book class.
%    \begin{macrocode}
\def\tocname{Contents}
%    \end{macrocode}
%    \end{macro}
%
% \begin{macro}{\lofname}
% Text entity \cmd\lofname\ is used in \cmd\listoffigures,
% as defined in the standard \LaTeX\ book class.
%    \begin{macrocode}
\def\lofname{List of Figures}
%    \end{macrocode}
%    \end{macro}
%
% \begin{macro}{\lotname}
% Text entity \cmd\lotname\ is used in \cmd\listoftables,
% as defined in the standard \LaTeX\ book class.
%    \begin{macrocode}
\def\lotname{List of Tables}
%    \end{macrocode}
%    \end{macro}
%
% \begin{macro}{\refname}
% Text entity \cmd\refname\ is used in \env{thebibliography}.
%    \begin{macrocode}
\def\refname{References}
%    \end{macrocode}
%    \end{macro}
%
% \begin{macro}{\indexname}
% Text entity \cmd\indexname\ is used in \env{theindex},
% as defined in the standard \LaTeX\ book class.
%    \begin{macrocode}
\def\indexname{Index}
%    \end{macrocode}
%    \end{macro}
%
% \begin{macro}{\figurename}
% \changes{v4.0beta 2}{1999/06/20}
%    {Added localization of \cs{figuresname}}
% Text entity \cmd\figurename\ is used in \env{figure},
% \cmd\figuresname\ in \cmd\printfigures.
%    \begin{macrocode}
\def\figurename{FIG.}
\def\figuresname{Figures}%
%    \end{macrocode}
%    \end{macro}
%
% \begin{macro}{\tablename}
% \changes{v4.0beta 2}{1999/06/20}
%    {Added localization of \cs{tablesname}}
% Text entity \cmd\tablename\ is used in \env{table},
% \cmd\tablesname\ in \cmd\printtables.
%    \begin{macrocode}
\def\tablename{TABLE}
\def\tablesname{Tables}%
%    \end{macrocode}
%    \end{macro}
%
% \begin{macro}{\abstractname}
% Text entity \cmd\abstractname\ is used in \env{abstract}.
%    \begin{macrocode}
\def\abstractname{Abstract}
%    \end{macrocode}
%    \end{macro}
%
% \begin{macro}{\appendixesname}
% \begin{macro}{\appendixname}
% Text entity \cmd\appendixesname\ is used in TOC.
%    \begin{macrocode}
\def\appendixesname{Appendixes}%
\def\appendixname{Appendix}%
%    \end{macrocode}
%    \end{macro}
%    \end{macro}
%
% \begin{macro}{\acknowledgmentsname}
% Text entity \cmd\acknowledgmentsname\ is used in \env{acknowledgments}.
%    \begin{macrocode}
\def\acknowledgmentsname{Acknowledgments}
%    \end{macrocode}
%    \end{macro}
%
% \begin{macro}{\journalname}
% This should be set by the society journal options, eg `pra'.
%    \begin{macrocode}
\def\journalname{??}
%    \end{macrocode}
%    \end{macro}
%
% \begin{macro}{\copyrightname}
% Default layout does not assign copyright, but a journal that wants
% to might use this.
%    \begin{macrocode}
\def\copyrightname{??}
%    \end{macrocode}
%    \end{macro}
%
% \begin{macro}{\andname}
% The text string ``and'' for use in author lists.
%    \begin{macrocode}
\def\andname{and}
%    \end{macrocode}
%    \end{macro}
%
% \begin{macro}{\@pacs@name}
% The text string prepended to PACS numbers.
%    \begin{macrocode}
\def\@pacs@name{PACS numbers: }%
%    \end{macrocode}
%    \end{macro}
%
% \begin{macro}{\ppname}
% The text string ``pp'' for use in page ranges.
%    \begin{macrocode}
\def\ppname{pp}
%    \end{macrocode}
%    \end{macro}
%
% \begin{macro}{\numbername}
% The text string ``number'' for use in article reference.
%    \begin{macrocode}
\def\numbername{number}
%    \end{macrocode}
%    \end{macro}
%
% \begin{macro}{\volumename}
% The text string ``volume'' for use in article reference.
%    \begin{macrocode}
\def\volumename{volume}
%    \end{macrocode}
%    \end{macro}
%
% \begin{macro}{\Dated@name}
% \begin{macro}{\Received@name}
% \begin{macro}{\Revised@name}
% \begin{macro}{\Accepted@name}
% \begin{macro}{\Published@name}
% These texts are used in the \cmd\date, et al. commands.
%    \begin{macrocode}
\def\Dated@name{dated: }%
\def\Received@name{received }%
\def\Revised@name{revised }%
\def\Accepted@name{accepted }%
\def\Published@name{published }%
%    \end{macrocode}
%    \end{macro}
%    \end{macro}
%    \end{macro}
%    \end{macro}
%    \end{macro}
%
% \section{Uppercase}
% A better definition is available in textcase.sty on ctan
% (skips mathematics).
%    \begin{macrocode}
\AtBeginDocument{%
  \providecommand\MakeTextUppercase{\MakeUppercase}%
}%
%    \end{macrocode}
%
% \section{Legacy Commands}
% Some commands left over from version 3.1.
% Some definitions can be overridden
% in the document preamble or in included packages.
%    \begin{macrocode}
\def\address{\replace@command\address\affiliation}%
\def\altaddress{\replace@command\altaddress\altaffiliation}%
\newenvironment{references}{%
 \REVTEX@warn@end{The references environment is not supported; use thebibliography instead.}
 \gdef\references{\thebibliography{}}\references
}{%
 \endthebibliography
}%
\def\draft{%
 \REVTEX@warn@end{Command \string\draft\space is obsolete;^^JInvoke option draft instead.}%
 \@booleantrue\draft@sw
}%
\def\tighten{%
 \REVTEX@warn@end{Command \string\tighten\space is obsolete;^^JInvoke option tightenlines instead.}%
 \@booleantrue\tightenlines@sw
}%
\def\tableline{%
 \noalign{%
  \REVTEX@warn@end{Command \string\tableline\space is obsolete;^^JUse \string\colrule\space instead.}%
  \global\let\tableline\colrule
 }%
 \tableline
}%
\def\case{\replace@command\case\frac}%
\def\slantfrac{\replace@command\slantfrac\frac}%
\def\tablenote{\replace@command\tablenote\footnote}%
\def\tablenotemark{\replace@command\tablenotemark\footnotemark}%
\def\tablenotetext{\replace@command\tablenotetext\footnotetext}%
% Lose the following definition:
\DeclareRobustCommand\REV@text[1]{%
 \relax
 \ifmmode
  \mathchoice
   {\hbox{{\everymath{\displaystyle     }#1}}}%
   {\hbox{{\everymath{\textstyle        }#1}}}%
   {\hbox{{\everymath{\scriptstyle      }\let\f@size\sf@size\selectfont#1}}}%
   {\hbox{{\everymath{\scriptscriptstyle}\let\f@size\ssf@size\selectfont#1}}}%
  \glb@settings
 \else
  \mbox{#1}%
 \fi
}%
% Lose the following definition:
\DeclareRobustCommand\REV@bbox[1]{%
 \relax
 \ifmmode
  \mathchoice
   {\hbox{{\everymath{\displaystyle     }\boldmath$#1$}}}%
   {\hbox{{\everymath{\textstyle        }\boldmath$#1$}}}%
   {\hbox{{\everymath{\scriptstyle      }\boldmath$#1$}}}%
   {\hbox{{\everymath{\scriptscriptstyle}\boldmath$#1$}}}%
  \glb@settings
 \else
  \mbox{#1}%
 \fi
}%
\DeclareRobustCommand\REV@bm[1]{%
 \REVTEX@warn@end{To use \string\bm, please load the bm package!}%
 \global\let\bm\relax
}%
\def\FL{\obsolete@command\FL}%
\def\FR{\obsolete@command\FR}%
\def\narrowtext{\obsolete@command\narrowtext}%
\def\mediumtext{\obsolete@command\mediumtext}%
\newenvironment{quasitable}{%
 \let@environment{tabular}{longtable}%
}{%
}%
\AtBeginDocument{%
 \@ifxundefined\text{\let\text\REV@text}{}%
 \@ifxundefined\bm{\let\bm\REV@bm}{}%
 \providecommand\bibinfo[2]{#2}%
 \providecommand\eprint[1]{#1}%
 \providecommand\url[1]{#1}%
}%
%    \end{macrocode}
%
% \begin{macro}{\bbox}
% 
%    \begin{macrocode}
\def\bbox#1{%
 \REVTEX@warn@end{\string\bbox\space is obsolete,^^Jload the bm package and use \string\bm\space instead.}%
 \global\let\bbox\relax
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\mathletters}
%
%    \begin{macrocode}
\newenvironment{mathletters}{%
 \REVTEX@warn@end{Environment {mathletters} is obsolete;^^Jload the amsmath package and use {subequations}!}%
 \global\let\mathletters\@empty
}{%
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\eqnum}
% 
%    \begin{macrocode}
\def\eqnum#1{%
 \REVTEX@warn@end{\string\eqnum\space is obsolete, load the amsmath package and use \string\tag!}%
 \global\let\eqnum\@gobble
}%
%    \end{macrocode}
% \end{macro}
%
% We read in the symbol definitions.
%    \begin{macrocode}
\RequirePackage{revsymb}%
%    \end{macrocode}
%
% \section{Endgame for the Document Class}
% 
% This section contains definitions related to the
% end-of-class processing:
% we want to control exactly what happens next.
% 
% We provide for a ``job macro package'' that can override
% definitions made by the class or any other packages it loads.
% We act on the value of \cmd\secnumarabic@sw;
% this code is a model for dealing with the job macro package.
% We also install a the very last procedures into
% \cmd\AtEndOfClass, ones that need to tail on to
% any processing performed either by the
% class, by any of its included packages, or
% by the job macro package and any packages it may have loaded.
%
% \subsection{Job Macro Package}
% You can create a ``job macro package'' for your document
% that will be read in automatically every time
% your document is processed.
% Thus, if your job is a file called \file{myarticle.tex},
% then the file \file{myarticle.rty} will be read in
% just the same as if you had placed a 
% \cmd\usepackage|{myarticle.rty}| statement
% immediately following your \cmd\documentclass\ statement.
%
% Within your \file{.rty} file,
% you can define and use control sequence names that use the |@| character
% and you can override any of the definitions or assignments made 
% by the \revtex\ document class or the selected journal substyle.
% That is, you have the power to really mess things up badly.
%
% If you choose to have a job macro package, you are well 
% advised to read the \LaTeX\ guide to document classes,
% \filename{clsguide.tex} or read up on the subject 
% in a book line the \LaTeX\ Companion.
%
% The file \filename{template.rty} contains a template for
% creating your own job macro package.
%
%    \begin{macrocode}
\AtEndOfClass{\InputIfFileExists{\jobname.rty}{}{}}%
%    \end{macrocode}
%
% \subsection{\cs{secnumarabic@sw}}\label{sec:secnumarabic}
% \begin{macro}{\secnumarabic@sw}
% The flag \cmd\secnumarabic@sw\ signifies that sectioning commands are
% to be numbered arabic.
% The effect of this command should override any settings
% made by the journal substyle or by the job macro package.
% However, it should be lower in precedence to definitions
% appearing in the document preamble.
% Therefore, we install its code into \cmd\AtEndOfClass,
% but do it \emph{after} the corresponding code
% for the journal substyle and the job macro package.
%
% Note: \cmd\thesection\ must \emph{not} be redefined,
% say, at \cmd\AtBeginDocument\ time by some delayed code.
%    \begin{macrocode}
\AtEndOfClass{%
 \@ifxundefined\secnumarabic@sw{\@booleanfalse\secnumarabic@sw}{}%
 \secnumarabic@sw{%
  \def\thesection       {\arabic{section}}%
  \def\thesubsection    {\thesection.\arabic{subsection}}%
  \def\thesubsubsection {\thesubsection.\arabic{subsubsection}}%
 }{}%
}%
%    \end{macrocode}
% \end{macro}
%
% \subsection{Define the Bibliography Style}
% This portion of the code for this class file
% \emph{must} appear at the very end,
% after the journal substyle has set the default value of
% \cmd\@bibstyle.
% 
% \begin{macro}{\@bibstyle}
%    \begin{macrocode}
\AtEndOfClass{%
 \AtBeginDocument{%
  \@ifxundefined\@bibstyle{}{%
   \expandafter\LATEX@bibliographystyle\expandafter{\@bibstyle}%
  }%
 }%
}%
%    \end{macrocode}
% \end{macro}
%
% \subsection{Hook for default values of Booleans}
% This portion of the code for this class file
% \emph{must} appear at the very end.
% \begin{macro}{\defaults@hook}
% The procedure \cmd\defaults@hook\ should hereby 
% be the very last to be installed into \cmd\AtBeginDocument.
% We provide it with a default in case it has not been 
% used up til now.
%    \begin{macrocode}
\AtEndOfClass{%
 \AtBeginDocument{%
  \defaults@hook
 }%
}%
\@ifxundefined\defaults@hook{\let\defaults@hook\@empty}{}%
%    \end{macrocode}
% \end{macro}
%
% End of the class file.
%    \begin{macrocode}
%</class>
%    \end{macrocode}
%
%
% \section{Symbols: the \texttt{revsymb} module}
%
%    \begin{macrocode}
%<*revsymb>
%    \end{macrocode}
%
% \begin{macro}{\lambdabar}
%    \begin{macrocode}
\DeclareRobustCommand\lambdabar{%
  \bgroup
    \def\@tempa{%
      \hbox{%
        \raise.73\ht\z@
        \hb@xt@\z@{%
          \kern.25\wd\z@
          \vrule \@width.5\wd\z@\@height.1\p@\@depth.1\p@
          \hss
        }%
        \box\z@
      }%
    }%
    \mathchoice
      {\setbox\z@\hbox{$\displaystyle     \lambda$}\@tempa}%
      {\setbox\z@\hbox{$\textstyle        \lambda$}\@tempa}%
      {\setbox\z@\hbox{$\scriptstyle      \lambda$}\@tempa}%
      {\setbox\z@\hbox{$\scriptscriptstyle\lambda$}\@tempa}%
  \egroup
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\openone}
% DPC: Really should use a font that includes this glyph.
% Unfortunately not in AMS ones, but is in bbold, cmbb.
% (I think, must check),
% \changes{v4.d}{1998/01/31}
%    {use font-dependent spacing}
% FIXME: check for bbold.
%    \begin{macrocode}
\DeclareRobustCommand\openone{\leavevmode\hbox{\small1\normalsize\kern-.33em1}}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\corresponds}
%    \begin{macrocode}
\DeclareRobustCommand\corresponds{{\lower.2ex\hbox{=}}{\kern-.75em^\triangle}}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\succsim}
% \begin{macro}{\precsim}
% \begin{macro}{\lesssim}
% \begin{macro}{\gtrsim}
% \begin{macro}{\alt}
% \begin{macro}{\agt}
% These version 3.1 commands are always supplied, 
% but the definitions in \classname{amssymb} are preferred.
%    \begin{macrocode}
\DeclareRobustCommand\altsuccsim{\succ\kern-.9em_\sim\kern.3em}%
\DeclareRobustCommand\altprecsim{\prec\kern-1em_\sim\kern.3em}%
\let\REV@succsim\altsuccsim
\let\REV@precsim\altprecsim
\DeclareRobustCommand\REV@lesssim{\mathrel{\mathpalette\vereq{<}}}%
\DeclareRobustCommand\REV@gtrsim{\mathrel{\mathpalette\vereq{>}}}%
\DeclareRobustCommand\alt{\lesssim}
\DeclareRobustCommand\agt{\gtrsim}
\def\vereq#1#2{%
 \lower3\p@\vbox{%
  \baselineskip1.5\p@
  \lineskip1.5\p@
  \ialign{$\m@th#1\hfill##\hfil$\crcr#2\crcr\sim\crcr}%
 }%
}%
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\tensor}
% \begin{macro}{\overstar}
% \begin{macro}{\overdots}
% \begin{macro}{\overcirc}
% \begin{macro}{\loarrow}
% \begin{macro}{\roarrow}
% \changes{v4.0beta 2}{1999/06/20}
%    {AO: remove duplicates}
%    \begin{macrocode}
\DeclareRobustCommand\tensor[1]{\@ontopof{#1}{\leftrightarrow}{1.15}\mathord{\box2}}
\DeclareRobustCommand\overstar[1]{\@ontopof{#1}{\ast}{1.15}\mathord{\box2}}
\DeclareRobustCommand\overdots[1]{\@ontopof{#1}{\cdots}{1.0}\mathord{\box2}}
\DeclareRobustCommand\overcirc[1]{\@ontopof{#1}{\circ}{1.2}\mathord{\box2}}
\DeclareRobustCommand\loarrow[1]{\@ontopof{#1}{\leftarrow}{1.15}\mathord{\box2}}
\DeclareRobustCommand\roarrow[1]{\@ontopof{#1}{\rightarrow}{1.15}\mathord{\box2}}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\@ontopof}
%    \begin{macrocode}
\def\@ontopof#1#2#3{%
 {%
  \mathchoice
    {\@@ontopof{#1}{#2}{#3}\displaystyle     \scriptstyle      }%
    {\@@ontopof{#1}{#2}{#3}\textstyle        \scriptstyle      }%
    {\@@ontopof{#1}{#2}{#3}\scriptstyle      \scriptscriptstyle}%
    {\@@ontopof{#1}{#2}{#3}\scriptscriptstyle\scriptscriptstyle}%
 }%
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@ontopof}
% Same as \revtex3, more or less.
%    \begin{macrocode}
\def\@@ontopof#1#2#3#4#5{%
  \setbox\z@\hbox{$#4#1$}%
  \setbox\f@ur\hbox{$#5#2$}%
  \setbox\tw@\null\ht\tw@\ht\z@ \dp\tw@\dp\z@
  \@ifdim{\wd\z@>\wd\f@ur}{%
    \setbox\f@ur\hb@xt@\wd\z@{\hss\box\f@ur\hss}%
    \mathord{\rlap{\raise#3\ht\z@\box\f@ur}\box\z@}%
  }{%
    \setbox\f@ur\hb@xt@.9\wd\f@ur{\hss\box\f@ur\hss}%
    \setbox\z@\hb@xt@\wd\f@ur{\hss$#4\relax#1$\hss}%
    \mathord{\rlap{\copy\z@}\raise#3\ht\z@\box\f@ur}%
  }%
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\frak}
% Deal with legacy \cmd\frak:
% if \classname{amsfonts} not loaded, defined in such a way as to ask for that package.
% Also, says to use \cmd\mathfrak\ instead.
%    \begin{macrocode}
\DeclareRobustCommand\frak{%
 \REVSYMB@warn{%
  Command \string\frak\space unsupported:^^J%
  please use \string\mathfrak\space instead.%
 }%
 \global\let\frak\mathfrak
 \frak
}%
\DeclareRobustCommand\REV@mathfrak{%
 \REVSYMB@warn{%
  Command \string\mathfrak\space undefined:^^J%
  please specify the amsfonts or amssymb option!%
 }%
 \global\let\mathfrak\@firstofone
 \mathfrak
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\Bbb}
% Deal with legacy \cmd\Bbb:
% if \classname{amsfonts} not loaded, defined in such a way as to ask for that package.
% Also, says to use \cmd\mathbb\ instead.
%    \begin{macrocode}
\DeclareRobustCommand\Bbb{%
 \REVSYMB@warn{%
  Command \string\Bbb\space unsupported:^^J%
  please use \string\mathbb\space instead.%
 }%
 \global\let\Bbb\mathbb
 \Bbb
}%
\DeclareRobustCommand\REV@mathfrak{%
 \REVSYMB@warn{%
  Command \string\mathbb\space undefined:^^J%
  please specify the amsfonts or amssymb option!%
 }%
 \global\let\mathbb\@firstofone
 \mathbb
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\Bigglb}
% Deal with legacy bold delimiters. 
% Each of the following takes an implicit argument consisting of
% the delimiter to be made big and bold.
% FIXME: \cmd\DeclareBoldMathCommand\ is not the right tool!
%    \begin{macrocode}
\def\Bigglb{\REV@boldopen \Bigg}%
\def\Biglb {\REV@boldopen \Big }%
\def\bigglb{\REV@boldopen \bigg}%
\def\biglb {\REV@boldopen \big }%
\def\Biggrb{\REV@boldclose\Bigg}%
\def\Bigrb {\REV@boldclose\Big }%
\def\biggrb{\REV@boldclose\bigg}%
\def\bigrb {\REV@boldclose\big }%
\def\REV@pmb#1{%
 \hbox{%
  \setbox\z@=\hbox{#1}%
  \kern-.02em\copy\z@\kern-\wd\z@
  \kern .04em\copy\z@\kern-\wd\z@
  \kern-.02em
  \raise.04em\copy\z@
 }%
}%
\def\REV@boldopen #1#2{\mathopen {\REV@pmb{$#1#2$}}}%
\def\REV@boldclose#1#2{\mathclose{\REV@pmb{$#1#2$}}}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\AtBeginDocument}
% Package dependencies are taken care of 
% \cmd\AtBeginDocument\ time.
%    \begin{macrocode}
\def\REVSYMB@warn#1{\PackageWarningNoLine{revsymb}{#1}}%
\AtBeginDocument{%
 \@ifxundefined\succsim{\let\succsim\altsuccsim}{}%
 \@ifxundefined\precsim{\let\precsim\altprecsim}{}%
 \@ifxundefined\lesssim{\let\lesssim\REV@lesssim}{}%
 \@ifxundefined\gtrsim {\let\gtrsim \REV@gtrsim }{}%
 \@ifxundefined\mathfrak{\let\mathfrak\REV@mathfrak}{}%
 \@ifxundefined\mathbb{\let\mathbb\REV@mathbb}{}%
}%
%    \end{macrocode}
% \end{macro}
%
%    \begin{macrocode}
%</revsymb>
%    \end{macrocode}
%
% \section{The \classoption{10pt} class option: the \texttt{10pt} module}
% \changes{v4.0beta 2}{1999/06/20}
%    {AO: all code for \protect\classoption{10pt} is in this module.}
% The file \file{10pt.rtx} is read in by the \classname{revtex4} document class
% if \cmd\@pointsize\ has the value 10.
%
%    \begin{macrocode}
%<*10pt>
%    \end{macrocode}
%
%    \begin{macrocode}
\def\normalsize{%
   \@setfontsize\normalsize\@xpt{11.5}%
   \abovedisplayskip 10\p@ \@plus2\p@ \@minus5\p@
   \belowdisplayskip \abovedisplayskip
   \abovedisplayshortskip  \abovedisplayskip
   \belowdisplayshortskip \abovedisplayskip
   \let\@listi\@listI
}%
%    \end{macrocode}
%
%    \begin{macrocode}
\def\small{%
  \@setfontsize\small\@ixpt{11}%
  \abovedisplayskip 8.5\p@ \@plus3\p@ \@minus4\p@
  \belowdisplayskip \abovedisplayskip
  \abovedisplayshortskip \z@ \@plus2\p@
  \belowdisplayshortskip 4\p@ \@plus2\p@ \@minus2\p@
  \def\@listi{%
    \leftmargin\leftmargini
    \topsep 4\p@ \@plus2\p@ \@minus2\p@
    \parsep 2\p@ \@plus\p@ \@minus\p@
    \itemsep \parsep
  }%
}%
%    \end{macrocode}
%
%    \begin{macrocode}
\def\footnotesize{%
  \@setfontsize\footnotesize\@viiipt{9.5pt}%
  \abovedisplayskip 6\p@ \@plus2\p@ \@minus4\p@
  \belowdisplayskip \abovedisplayskip
  \abovedisplayshortskip \z@ \@plus\p@
  \belowdisplayshortskip 3\p@ \@plus\p@ \@minus2\p@
  \def\@listi{%
    \leftmargin\leftmargini
    \topsep 3\p@ \@plus\p@ \@minus\p@
    \parsep 2\p@ \@plus\p@ \@minus\p@
    \itemsep \parsep
  }%
}%
%    \end{macrocode}
%
%    \begin{macrocode}
\def\scriptsize{%
 \@setfontsize\scriptsize\@viipt\@viiipt
}%
\def\tiny{%
 \@setfontsize\tiny\@vpt\@vipt
}%
\def\large{%
 \@setfontsize\large\@xiipt{14pt}%
}%
\def\Large{%
 \@setfontsize\Large\@xivpt{18pt}%
}%
\def\LARGE{%
 \@setfontsize\LARGE\@xviipt{22pt}%
}%
\def\huge{%
 \@setfontsize\huge\@xxpt{25pt}%
}%
\def\Huge{%
 \@setfontsize\Huge\@xxvpt{30pt}%
}%
%    \end{macrocode}
%
%    \begin{macrocode}
\AtBeginDocument{%
 \twoside@sw{%
    \oddsidemargin  -.4in
    \evensidemargin -.1in
    \marginparwidth 107pt
 }{%
    \oddsidemargin  -.25in
    \evensidemargin -.25in
    \marginparwidth 30pt
 }%
}%
%    \end{macrocode}
%
%    \begin{macrocode}
\marginparsep 6pt
%    \end{macrocode}
%
%    \begin{macrocode}
\topmargin -61pt
%    \end{macrocode}
%
%    \begin{macrocode}
\headheight 25pt
\headsep 16pt
%    \end{macrocode}
%
%    \begin{macrocode}
\topskip 10pt
%    \end{macrocode}
%
%    \begin{macrocode}
\footskip 30pt
%    \end{macrocode}
% 
%    \begin{macrocode}
\appdef\set@pica@hook{%
 \textheight = 57\baselineskip
 \advance\textheight by \topskip
}%
%    \end{macrocode}
%
%    \begin{macrocode}
\textwidth42.5pc
%    \end{macrocode}
%
%    \begin{macrocode}
\columnsep 1.5pc
\columnseprule 0pt
%    \end{macrocode}
%
%    \begin{macrocode}
\footnotesep 1pt
\skip\footins 39pt plus 4pt minus 2pt
\def\footnoterule{\kern-19pt\hrule width.5in\kern18.6pt}%
%    \end{macrocode}
%
%    \begin{macrocode}
\floatsep 12pt plus 2pt minus 2pt
\textfloatsep 20pt plus 2pt minus 4pt
\intextsep 12pt plus 2pt minus 2pt
%    \end{macrocode}
%
%    \begin{macrocode}
\dblfloatsep 12pt plus 2pt minus 2pt
\dbltextfloatsep 20pt plus 2pt minus 4pt
%    \end{macrocode}
%
%    \begin{macrocode}
\@fptop 0pt plus 1fil
\@fpsep 8pt plus 2fil
\@fpbot 0pt plus 1fil
\@dblfptop 0pt plus 1fil
\@dblfpsep 8pt plus 2fil
\@dblfpbot 0pt plus 1fil
%    \end{macrocode}
%
%    \begin{macrocode}
\marginparpush 5pt
%    \end{macrocode}
%
%    \begin{macrocode}
\parskip 0pt plus 1pt
\parindent 10pt
\emergencystretch8\p@
%    \end{macrocode}
%
%    \begin{macrocode}
\partopsep 2pt plus 1pt minus 1pt
%    \end{macrocode}
%
%    \begin{macrocode}
\leftmargini 25pt
\leftmarginii 22pt
\leftmarginiii 18.7pt
\leftmarginiv 17pt
\leftmarginv 10pt
\leftmarginvi 10pt
%    \end{macrocode}
%
%    \begin{macrocode}
\def\@listI{%
  \leftmargin\leftmargini
  \parsep 4\p@ plus2\p@ minus\p@
  \topsep 8\p@ plus2\p@ minus4\p@
  \itemsep 4\p@ plus2\p@ minus\p@
}%
%    \end{macrocode}
%
%    \begin{macrocode}
\labelsep 4pt
%    \end{macrocode}
%
%    \begin{macrocode}
\def\@listii{%
  \leftmargin\leftmarginii
  \labelwidth\leftmarginii
  \advance\labelwidth-\labelsep
  \topsep 4\p@ plus2\p@ minus\p@
  \parsep 2\p@ plus\p@ minus\p@
  \itemsep \parsep
}%
%    \end{macrocode}
%
%    \begin{macrocode}
\def\@listiii{%
  \leftmargin\leftmarginiii
  \labelwidth\leftmarginiii
  \advance\labelwidth-\labelsep
  \topsep 2\p@ plus\p@ minus\p@
  \parsep \z@
  \partopsep \p@ plus\z@ minus\p@
  \itemsep \topsep
}%
%    \end{macrocode}
%
%    \begin{macrocode}
\def\@listiv{%
  \leftmargin\leftmarginiv
  \labelwidth\leftmarginiv
  \advance\labelwidth-\labelsep
}%
%    \end{macrocode}
%
%    \begin{macrocode}
\def\@listv{%
  \leftmargin\leftmarginv
  \labelwidth\leftmarginv
  \advance\labelwidth-\labelsep
}%
%    \end{macrocode}
%
%    \begin{macrocode}
\def\@listvi{%
  \leftmargin\leftmarginvi
  \labelwidth\leftmarginvi
  \advance\labelwidth-\labelsep
}%
%    \end{macrocode}
%
%    \begin{macrocode}
%</10pt>
%    \end{macrocode}
%
% \section{The \classoption{11pt} class option: the \texttt{11pt} module}
% \changes{v4.0beta 2}{1999/06/20}
%    {AO: all code for \protect\classoption{11pt} is in this module.}
% The file \file{11pt.rtx} is read in by the \classname{revtex4} document class
% if \cmd\@pointsize\ has the value 11.
%
%    \begin{macrocode}
%<*11pt>
%    \end{macrocode}
%
%    \begin{macrocode}
\def\normalsize{%
    \@setfontsize\normalsize\@xipt{13.6}%
    \abovedisplayskip 11\p@ \@plus3\p@ \@minus6\p@
    \belowdisplayskip \abovedisplayskip
    \abovedisplayshortskip  \abovedisplayskip
    \belowdisplayshortskip \abovedisplayskip
    \let\@listi\@listI
}%
%    \end{macrocode}
%
%    \begin{macrocode}
\def\small{%
   \@setfontsize\small\@xpt\@xiipt
   \abovedisplayskip 10\p@ \@plus2\p@ \@minus5\p@
   \abovedisplayshortskip \z@ \@plus3\p@
   \belowdisplayshortskip 6\p@ \@plus3\p@ \@minus3\p@
   \def\@listi{\leftmargin\leftmargini
               \topsep 6\p@ \@plus2\p@ \@minus2\p@
               \parsep 3\p@ \@plus2\p@ \@minus\p@
               \itemsep \parsep
   }%
   \belowdisplayskip \abovedisplayskip
}%
%    \end{macrocode}
%
%    \begin{macrocode}
\def\footnotesize{%
   \@setfontsize\footnotesize\@ixpt{11}%
   \abovedisplayskip 8\p@ \@plus2\p@ \@minus4\p@
   \abovedisplayshortskip \z@ \@plus\p@
   \belowdisplayshortskip 4\p@ \@plus2\p@ \@minus2\p@
   \def\@listi{\leftmargin\leftmargini
               \topsep 4\p@ \@plus2\p@ \@minus2\p@
               \parsep 2\p@ \@plus\p@ \@minus\p@
               \itemsep \parsep
   }%
   \belowdisplayskip \abovedisplayskip
}%
%    \end{macrocode}
%
%    \begin{macrocode}
\def\scriptsize{%
  \@setfontsize\scriptsize\@viiipt{9.5}%
}%
\def\tiny{%
  \@setfontsize\tiny\@vipt\@viipt
}%
\def\large{%
  \@setfontsize\large\@xiipt{14}%
}%
\def\Large{%
  \@setfontsize\Large\@xivpt{18}%
}%
\def\LARGE{%
  \@setfontsize\LARGE\@xviipt{22}%
}%
\def\huge{%
    \@setfontsize\huge\@xxpt{25pt}%
}%
\def\Huge{%
  \@setfontsize\Huge\@xxvpt{30pt}%
}%
%    \end{macrocode}
%
%    \begin{macrocode}
%</11pt>
%    \end{macrocode}
%
% \section{The \classoption{12pt} class option: the \texttt{12pt} module}
% \changes{v4.0beta 2}{1999/06/20}
%    {AO: all code for \protect\classoption{12pt} is in this module.}
% The file \file{12pt.rtx} is read in by the \classname{revtex4} document class
% if \cmd\@pointsize\ has the value 12.
%
%    \begin{macrocode}
%<*12pt>
%    \end{macrocode}
%
%    \begin{macrocode}
\def\normalsize{%
  \@setfontsize\normalsize\@xiipt{14pt}%
  \abovedisplayskip 12\p@ \@plus3\p@ \@minus7\p@
  \belowdisplayskip \abovedisplayskip
  \abovedisplayshortskip  \z@ plus3\p@
  \belowdisplayshortskip  6.5\p@ \@plus3.5\p@ \@minus3\p@
  \let\@listi\@listI
}%
%    \end{macrocode}
%
%    \begin{macrocode}
 \def\small{%
  \@setfontsize\small\@xipt{14.5pt}%
  \abovedisplayskip 811\p@ \@plus3\p@ \@minus6\p@
  \belowdisplayskip \abovedisplayskip
  \abovedisplayshortskip \z@ \@plus3\p@
  \belowdisplayshortskip 6.5\p@ \@plus3.5\p@ \@minus3\p@
  \def\@listi{%
    \leftmargin\leftmargini
    \topsep 9\p@ \@plus3\p@ \@minus5\p@
    \parsep 4.5\p@ \@plus2\p@ \@minus\p@
    \itemsep \parsep
  }%
}%
%    \end{macrocode}
%
% Same baselineskip as \cmd\small\ ?
%    \begin{macrocode}
 \def\footnotesize{%
  \@setfontsize\footnotesize\@xpt{14.5pt}%
  \abovedisplayskip 10\p@ \@plus2\p@ \@minus5\p@
  \belowdisplayskip \abovedisplayskip
  \abovedisplayshortskip \z@ \@plus3\p@
  \belowdisplayshortskip 6\p@ \@plus3\p@ \@minus3\p@
  \def\@listi{%
    \leftmargin\leftmargini
    \topsep 6\p@ \@plus2\p@ \@minus2\p@
    \parsep 3\p@ \@plus2\p@ \@minus\p@
    \itemsep \parsep
  }%
}%
%    \end{macrocode}
%
%    \begin{macrocode}
\def\scriptsize{%
  \@setfontsize\scriptsize\@viiipt{9.5pt}%
}%
\def\tiny{%
  \@setfontsize\tiny\@vipt{7pt}%
}%
\def\large{%
  \@setfontsize\large\@xivpt{18pt}%
}%
\def\Large{%
  \@setfontsize\Large\@xviipt{22pt}%
}%
\def\LARGE{%
  \@setfontsize\LARGE\@xxpt{25pt}%
}%
\def\huge{%
    \@setfontsize\huge\@xxv{30pt}%
}%
\let\Huge=\huge
%    \end{macrocode}
%
%    \begin{macrocode}
%</12pt>
%    \end{macrocode}
%
% \section{Page parameters}%
% This code is common to both \classoption{11pt} and \classoption{12pt}.
%
%    \begin{macrocode}
%<*11pt|12pt>
%    \end{macrocode}
%
%    \begin{macrocode}
\AtBeginDocument{%
 \twoside@sw{%
  \oddsidemargin .25in
  \evensidemargin -.25in
  \marginparwidth 60pt
 }{%
  \oddsidemargin 0pt
  \evensidemargin 0pt
  \marginparwidth 44pt
 }%
}%
%    \end{macrocode}
%
%    \begin{macrocode}
\marginparsep 10pt
%    \end{macrocode}
%
%    \begin{macrocode}
\topmargin -37pt
%    \end{macrocode}
%
%    \begin{macrocode}
\headheight 12pt
\headsep 25pt
%    \end{macrocode}
%
%    \begin{macrocode}
\topskip 10pt
%    \end{macrocode}
%
%    \begin{macrocode}
\footskip 30pt
%    \end{macrocode}
% 
%    \begin{macrocode}
\appdef\set@pica@hook{%
 \@ifxundefined\tightenlines@sw{\@booleanfalse\tightenlines@sw}{}%
 \tightenlines@sw{%
  \textheight = 44\baselineskip
 }{%
  \linespread{1.655}\normalfont
  \textheight = 27\baselineskip
 }%
 \advance\textheight by \topskip
}%
%    \end{macrocode}
%
%    \begin{macrocode}
\textwidth 468pt
%    \end{macrocode}
%
%    \begin{macrocode}
\columnsep 10pt
\columnseprule 0pt
%    \end{macrocode}
%
%    \begin{macrocode}
\footnotesep 1pt
\skip\footins 25.25pt plus 4pt minus 2pt
\def\footnoterule{\kern-5.25pt\hrule width.5in\kern4.85pt}
%    \end{macrocode}
%
%    \begin{macrocode}
\floatsep        14pt plus 2pt minus 4pt
\textfloatsep    20pt plus 2pt minus 4pt
\intextsep       14pt plus 4pt minus 4pt
%    \end{macrocode}
%
%    \begin{macrocode}
\dblfloatsep     14pt plus 2pt minus 4pt
\dbltextfloatsep 20pt plus 2pt minus 4pt
%    \end{macrocode}
%
%    \begin{macrocode}
\@fptop 0pt plus 1fil
\@fpsep 10pt plus 2fil
\@fpbot 0pt plus 1fil
\@dblfptop 0pt plus 1fil
\@dblfpsep 10pt plus 2fil%
\@dblfpbot 0pt plus 1fil
%    \end{macrocode}
%
%    \begin{macrocode}
\marginparpush 7pt
%    \end{macrocode}
%
%    \begin{macrocode}
\parskip 0pt plus 1pt
\parindent 15pt
\emergencystretch8\p@
\partopsep 3pt plus 2pt minus 2pt
%    \end{macrocode}
%
%    \begin{macrocode}
\leftmargini   30pt
\leftmarginii  26pt
\leftmarginiii 22pt
\leftmarginiv  20pt
\leftmarginv   12pt
\leftmarginvi  12pt
%    \end{macrocode}
%
%    \begin{macrocode}
\def\@listI{\leftmargin\leftmargini \parsep 5\p@ plus2.5\p@ minus\p@
  \topsep 10\p@ plus4\p@ minus6\p@
  \itemsep 5\p@ plus2.5\p@ minus\p@
}%
%    \end{macrocode}
%
%    \begin{macrocode}
\labelsep 6pt
%    \end{macrocode}
%
%    \begin{macrocode}
\def\@listii{\leftmargin\leftmarginii
  \labelwidth\leftmarginii\advance\labelwidth-\labelsep
  \topsep 5\p@ plus2.5\p@ minus\p@
  \parsep 2.5\p@ plus\p@ minus\p@
  \itemsep \parsep
}%
%    \end{macrocode}
%
%    \begin{macrocode}
\def\@listiii{\leftmargin\leftmarginiii
  \labelwidth\leftmarginiii\advance\labelwidth-\labelsep
  \topsep 2.5\p@ plus\p@ minus\p@
  \parsep \z@ \partopsep \p@ plus\z@ minus\p@
  \itemsep \topsep
}%
%    \end{macrocode}
%
%    \begin{macrocode}
\def\@listiv{\leftmargin\leftmarginiv
  \labelwidth\leftmarginiv\advance\labelwidth-\labelsep
}%
%    \end{macrocode}
%
%    \begin{macrocode}
\def\@listv{\leftmargin\leftmarginv
  \labelwidth\leftmarginv\advance\labelwidth-\labelsep
}%
%    \end{macrocode}
%
%    \begin{macrocode}
\def\@listvi{\leftmargin\leftmarginvi
  \labelwidth\leftmarginvi\advance\labelwidth-\labelsep
}%
%    \end{macrocode}
%
%    \begin{macrocode}
%</11pt|12pt>
%    \end{macrocode}
%
% \section{The \classoption{aps} class option: the \texttt{aps} module}
% \changes{v4.0beta 2}{1999/06/20}
%    {AO: made aps.rtx part of revtex4.dtx}
% The file \file{aps.rtx} is read in by the \classname{revtex4} document class
% if \cmd\@society\ has the value \classoption{aps}.
%
% Here, code specific to APS journals is separated out from the \revtex\ document class.
% (Other societies can customize \revtex\ by supplying their own \file{.rtx} file.)
%
% We first give some text entities (amounting to journal abbreviations),
% then some APS-specific initialisations,
% then code for particular APS journals.
% In the latter case, the choice is 
% keyed off the macro \cmd\@journal.
%
% Note on \cmd\AtEndOfClass: this file, like all journal substyles,
% is read in at \cmd\AtEndOfClass\ time, so you should not predicate your
% code in this way. It would be an improvement in \LaTeX\ to 
% \cmd\let\cmd\AtEndOfClass\ to something like \cmd\@firstofone.
% This change would be effected in \cmd\@onefilewithoptions.
%
%    \begin{macrocode}
%<*aps>
%    \end{macrocode}
%
% \subsection{Defend Against Forseeable Errors}%
% Protect this file from being read in by anything but \revtex.
%    \begin{macrocode}
\ifx\undefined\REVTEX@society@ext
 \def\@tempa{%
  \endinput
  \GenericWarning{I must be read in by REVTeX! (Bailing out)}%
 }%
 \expandafter\else
  \def\@tempa{}%
 \expandafter\fi\@tempa
%    \end{macrocode}
%
% \subsection{Abbreviations}%
% The following macros constitute typing shortcuts for
% certain journal names.
%    \begin{macrocode}
\def\ao{Appl.\  Opt.\ }
\def\ap{Appl.\  Phys.\ }
\def\apl{Appl.\ Phys.\ Lett.\ }
\def\apj{Astrophys.\ J.\ }
\def\bell{Bell Syst.\ Tech.\ J.\ }
\def\jqe{IEEE J.\ Quantum Electron.\ }
\def\assp{IEEE Trans.\ Acoust.\ Speech Signal Process.\ }
\def\aprop{IEEE Trans.\ Antennas Propag.\ }
\def\mtt{IEEE Trans.\ Microwave Theory Tech.\ }
\def\iovs{Invest.\ Ophthalmol.\ Vis.\ Sci.\ }
\def\jcp{J.\ Chem.\ Phys.\ }
\def\jmo{J.\ Mod.\ Opt.\ }
\def\josa{J.\ Opt.\ Soc.\ Am.\ }
\def\josaa{J.\ Opt.\ Soc.\ Am.\ A }
\def\josab{J.\ Opt.\ Soc.\ Am.\ B }
\def\jpp{J.\ Phys.\ (Paris) }
\def\nat{Nature (London) }
\def\oc{Opt.\ Commun.\ }
\def\ol{Opt.\ Lett.\ }
\def\pl{Phys.\ Lett.\ }
\def\pra{Phys.\ Rev.\ A }
\def\prb{Phys.\ Rev.\ B }
\def\prc{Phys.\ Rev.\ C }
\def\prd{Phys.\ Rev.\ D }
\def\pre{Phys.\ Rev.\ E }
\def\prl{Phys.\ Rev.\ Lett.\ }
\def\rmp{Rev.\ Mod.\ Phys.\ }
\def\pspie{Proc.\ Soc.\ Photo-Opt.\ Instrum.\ Eng.\ }
\def\sjqe{Sov.\ J.\ Quantum Electron.\ }
\def\vr{Vision Res.\ }
%    \end{macrocode}
%
% \subsection{APS Setup}%
% Here we define the default procedures for APS journals.
% Individual APS journals may override these definitions.
%
% \subsubsection{Title block}%
%
% The specifics of the title block.
% Apply to all APS journals; individual journals may override these settings.
%
% \begin{macro}{\titlepage}
%    \begin{macrocode}
\renewenvironment{titlepage}{%
  \let\wastwocol@sw\twocolumn@sw
  \wastwocol@sw{\onecolumn}{\newpage}%
  \thispagestyle{titlepage}%
  \c@page\z@% article sets this to one not zero???
}{%
  \wastwocol@sw{\twocolumn}{\newpage}%
}%
\def\ps@titlepage{\ps@empty}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\frontmatter@abstractheading}
% APS Journals all set the abstract head the same way, with no head.
% However, if the user has specified the \classoption{preprint} class option,
% then the abstract will have a head.
%    \begin{macrocode}
\def\frontmatter@abstractheading{%
 \preprintsty@sw{%
  \begin{center}\large\abstractname\end{center}%
  \vspace{-1pc}%
 }{}%
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\frontmatter@abstractwidth}
% All APS journals set the abstract to the same relative width.
%    \begin{macrocode}
\def\frontmatter@abstractwidth{.75\textwidth}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\frontmatter@abstractfont}
% All APS journals set the abstract body the same way.
%    \begin{macrocode}
\def\frontmatter@abstractfont{\small}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\footinbib@sw}
% All APS journals except RMP invoke the \classoption{footinbib} option.
%    \begin{macrocode}
\@ifxundefined\footinbib@sw{\@booleantrue\footinbib@sw}{}%
%    \end{macrocode}
% \end{macro}
%
% All APS journal preprints use separate titlepage and full-width abstract.
% 
% Note that we defer polling the \cmd\preprintsty@sw\ Boolean until
% \cmd\AtBeginDocument\ time, because the document preamble
% may legitimately change the state of that variable.
%    \begin{macrocode}
 \AtBeginDocument{%
  \preprintsty@sw{%
   \@ifxundefined\titlepage@sw{\@booleantrue\titlepage@sw}{}%
   \def\frontmatter@abstractwidth{\textwidth}%
   \def\frontmatter@affiliationfont{\it}%
  }{}%
 }%
%    \end{macrocode}
%
% \begin{macro}{\frontmatter@authorformat}
% All APS journals set the author list the same.
%    \begin{macrocode}
\def\frontmatter@authorformat{%
 \skip@\@flushglue
 \@flushglue\z@ plus.3\hsize\relax
 \centering
 \baselineskip3ex
 \parskip\z@skip
 \@flushglue\skip@
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\frontmatter@above@affiliation}
% The default amount of space above affiliation.
% Journals will override this definition.
%    \begin{macrocode}
\def\frontmatter@above@affiliation{\smallskip}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\frontmatter@affiliationfont}
% All APS journals set the affiliation the same.
%    \begin{macrocode}
\def\frontmatter@affiliationfont{\small\it}%
%    \end{macrocode}
% \end{macro}
%
% Set up the default APS style for title block authors and affiliations.
%    \begin{macrocode}
\@ifxundefined\groupauthors@sw{%
 \clo@groupedaddress
}{}%
%    \end{macrocode}
%
% \begin{macro}{\frontmatter@setup}
% All APS journals set the title page the same.
%    \begin{macrocode}
\def\frontmatter@setup{\normalfont\centering}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\frontmatter@title@produce}
% All APS journals set the article title the same.
%    \begin{macrocode}
\def\frontmatter@title@produce{%
 \begingroup\large\bfseries\@title\par\endgroup
 \addvspace{2\baselineskip}%
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\frontmatter@makefnmark}
% All APS journals share this procedure for setting the titlepage footnote text.
%    \begin{macrocode}
\def\frontmatter@makefnmark{\@textsuperscript{\normalfont\@thefnmark}}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\frontmatter@RRAPformat}
% All APS journals use the same format for the ``Received, Revised, etc.'' block on the title page.
%    \begin{macrocode}
\def\frontmatter@RRAPformat#1{%
 \begingroup
  \centering\parskip.5ex\relax
  \everypar{\hbox\bgroup(\@gobble@leavemode@uppercase}%
  \def\par{\@ifvmode{}{\unskip)\egroup\@@par}}%
  #1\par
 \endgroup
}%
\def\punct@RRAP{;\egroup\ \hbox\bgroup}%
\def\@gobble@leavemode@uppercase#1#2{\expandafter\MakeTextUppercase}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\ps@titlepage}
% \changes{v4.g}{1998/06/10}
%    {multiple preprint commands}
% \changes{v4.0beta 2}{1999/06/20}
%    {Stack \cs{preprint} args flush right at right margin.}
% Title page style. Currently empty except for preprint header,
% which consists of all the \cmd\preprint\ arguments,
% stacked flush right at the right margin.
%    \begin{macrocode}
\def\ps@titlepage{%
  \def\@oddhead{%
   \hfill
   \produce@preprints\@preprint
  }%
  \let\@evenhead\@oddhead
  \def\@oddfoot{\hfil\preprintsty@sw{\thepage}{}\hfil}%
  \let\@evenfoot\@empty
}%
\def\produce@preprints#1{%
 \preprintsty@sw{%
  \vtop to \z@{%
   \def\baselinestretch{1}%
   \small
   \let\preprint\preprint@cr
   \halign{\hfil##\cr#1\crcr}%
   \par
   \vss
  }%
 }{}%
}%
\def\preprint@cr#1{#1\cr}%
%    \end{macrocode}
% \end{macro}
%
% Invoke \classname{bibnote} option, if it has not yet been set.
%    \begin{macrocode}
 \@ifxundefined\author@note{\def\author@note{\rtx@bibnote}}{}%
%    \end{macrocode}
%
%
% \subsubsection{Table of Contents}%
% The toc will itself make an entry in the toc, 
% but we temporarily turn off toc formatting for the duration.
%    \begin{macrocode}
\def\@pnumwidth{1.55em}
\def\@tocrmarg {2.55em}
\def\@dotsep{4.5}
\setcounter{tocdepth}{3}
%    \end{macrocode}
%
%    \begin{macrocode}
\def\tableofcontents{%
 \addtocontents{toc}{\string\tocdepth@munge}%
 \print@toc{toc}%
 \addtocontents{toc}{\string\tocdepth@restore}%
}%
%    \end{macrocode}
%
%    \begin{macrocode}
\def\tocdepth@munge{%
  \let\l@section@saved\l@section
  \let\l@section\@gobble@tw@
}%
\def\@gobble@tw@#1#2{}%
%    \end{macrocode}
%
%    \begin{macrocode}
\def\tocdepth@restore{%
  \let\l@section\l@section@saved
}%
%    \end{macrocode}
%
%    \begin{macrocode}
\def\l@part#1#2{\addpenalty{\@secpenalty}%
 \addvspace{2.25em plus\p@}%
 \begingroup
  \@tempdima 3em %
  \parindent \z@ \rightskip \@pnumwidth %
  \parfillskip -\@pnumwidth
  {\large \bf %
  \leavevmode %
  #1\hfil \hb@xt@\@pnumwidth{\hss #2}}\par
  \nobreak %
 \endgroup
}%
%    \end{macrocode}
%
%    \begin{macrocode}
\def\l@section#1#2{%
 \addpenalty{\@secpenalty}%
 \addvspace{1.0em plus\p@}%
 \@tempdima 3.0em %
 \begingroup
  \parindent \z@ \rightskip \@pnumwidth
  \parfillskip -\@pnumwidth
  \bf %
  \leavevmode %
  \advance\leftskip\@tempdima %
  \hskip -\leftskip %
  #1\nobreak\hfil \nobreak\hb@xt@\@pnumwidth{\hss #2}\par
 \endgroup
}%
%    \end{macrocode}
%
%    \begin{macrocode}
\def\l@subsection{\@dottedtocline{2}{3.0em}{2.0em}}
\def\l@subsubsection{\@dottedtocline{3}{5.0em}{1.5em}}
\def\l@paragraph{\@dottedtocline{4}{6.5em}{1.5em}}
\def\l@subparagraph{\@dottedtocline{5}{8.0em}{1.5em}}
%    \end{macrocode}
%
%    \begin{macrocode}
\def\listoffigures{\print@toc{lof}}%
\def\l@figure{\@dottedtocline{1}{1.5em}{2.3em}}
%    \end{macrocode}
%
%    \begin{macrocode}
\def\listoftables{\print@toc{lot}}%
\let\l@table\l@figure
%    \end{macrocode}
%
% \subsubsection{Appendix}%
% \begin{macro}{\appendix}
% \begin{macro}{\@hangfrom@appendix}
% \begin{macro}{\@hangfroms@appendix}
% \begin{macro}{\@appendixcntformat}
%    \begin{macrocode}
\appdef\appendix{%
 \let\@hangfrom@section\@hangfrom@appendix
 \let\@hangfroms@section\@hangfroms@appendix
 \let\@sectioncntformat\@appendixcntformat
}%
\def\@hangfrom@appendix#1#2{%
 #1\@ifempty{#2}{}{:\quad#2}%
}%
\def\@hangfroms@appendix#1#2{%
 #1\appendixname\@ifempty{#2}{}{:\quad#2}%
}%
\def\@appendixcntformat#1{\appendixname\ \csname the#1\endcsname}%
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \subsubsection{Bibliography}%
%
% Customize \revtex\ for the journal substyle;
% this task requires three components:
% the \BibTeX\ \file{apsrev.bst} style file,
% customizing code for \file{natbib}, and
% customizations of the \env{thebibliography} environment.
%
% \begin{macro}{\@bibstyle}
% Define the argument of the \cmd\bibliographystyle\ command
% (if the document does not do so).
% The user must have installed a \file{.bst} file of the corresponding name.
% This file will then be used by \BibTeX\ when compiling the document's \file{.bbl} file.
%
% The default bibliography style for the APS journal substyles, \file{apsrev.bst},
% was originally called \file{revtex.bst}, but
% that name is much too generic and should be given to a \file{.bst} file that 
% that applies generally to any \revtex\ jounal substyle, an impossibility.
%
%  To generate \file{apsrev.bst}, use \classname{custom-bib} version 3.89d1 or later.
%  Run the \file{.bst} generator, \file{makebst.tex}, and
%  accept all defaults, with the following exceptions:
%
% \begin{enumerate}
% \item
%  ORDERING OF REFERENCES: c: seq-no (references in order of Citation);
% \item
%  AUTHOR NAMES: i: nm-init (Initials + surname);
% \item
%  NUMBER OF AUTHORS: l: max 12, min 12 (there will be three prompts total);
% \item
%  TYPEFACE FOR AUTHORS IN LIST OF REFERENCES: u: User defined author font;
% \item
%  FONT FOR FIRST NAMES: u: First names in user defined font;
% \item
%  EDITOR NAMES IN INCOLLECTION ETC: a: Editors incollection like authors;
% \item
%  DATE FORMAT: p: yr-par (Date in parentheses);
% \item
%  SUPPRESS MONTH: x: Date is year only;
% \item
%  TITLE OF ARTICLE: i: tit-it (Title italic)
% \item
%  ARTICLE TITLE PRESENT: x: jtit-x (No article title);
% \item
%  JOURNAL TITLE FONT: r: jttl-rm (Journal title normal);
% \item
%  TECHNICAL REPORT TITLE: b: trtit-b (Tech. report title like books);
% \item
%  JOURNAL VOLUME: b: vol-bf (Volume bold);
% \item
%  VOLUME PUNCTUATION: c: volp-com (Volume with comma);
% \item
%  PAGE NUMBERS: f: jpg-1 (Only start page number);
% \item
%  JOURNAL NAME PUNCTUATION: x: jnm-x (Space after journal);
% \item
%  PUBLISHER IN PARENTHESES: d: pub-date (Publisher and date in parentheses);
% \item
%  PUBLISHER POSITION: p: pre-pub (Publisher before chapter, pages);
% \item
%  URL ADDRESS: n: URL as note;
% \item
%  EDITOR IN COLLECTIONS: b: Booktitle, edited by \dots;
% \item
%  PUNCTUATION BETWEEN SECTIONS (BLOCKS): c: blk-com (Comma between blocks);
% \item
%  ABBREVIATE WORD `PAGES': a: pp (`Page' abbreviated);
% \item
%  ABBREVIATE WORD `EDITORS': a: ed (`Editor' abbreviated);
% \item
%  OTHER ABBREVIATIONS: a: abr (Abbreviations);
% \item
%  ABBREVIATION FOR `EDITION': a: ednx (`Edition' abbreviated as `ed');
% \item
%  EDITION NUMBERS: n: ord (Numerical editions);
% \item
%  STORED JOURNAL NAMES: a: jabr (Abbreviated journal names);
% \item
%  FONT OF `ET AL': i: etal-it (Italic et al);
% \item
%  NEW FONT SELECTION SCHEME: n: nfss (NFSS);
% \item
%  ADDITIONAL REVTeX DATA FIELDS: y: revdata (additional data fields);
% \item
%  REFERENCE COMPONENT TAGS: y: reference component tags;
% \end{enumerate}
%
% A file \file{apsrev.dbj} file equivalent to the following should result:
% \begin{verbatim}
% \input docstrip
% \preamble
% ----------------------------------------
% *** REVTeX-compatible apsrev.bst ***
% \endpreamble
% \postamble
% End of customized bst file
% \endpostamble
% \keepsilent
% \askforoverwritefalse
% \def\MBopts{\from{merlin.mbs}{%
%    seq-no%: Citation order ((unsorted, like unsrt.bst))
%   ,nm-init,ed-au%: Initials + surname ((J. F. Smith))
%   ,nmlm%: Limited authors ((et al replaces missing names))
%     ,x10,x2%: Maximum of 12 authors
%     ,m10,m2%: Minimum of 12 authors
%   ,nmft,nmft-def%: User defined author font ((\bibnamefont))
%   ,fnm-def%: First names in user defined font ((\bibfnamefont))
%   ,nmfted%: Editors incollection like authors (font)
%   ,yr-par%: Date in parentheses (as (May 1993))
%   ,xmth%: Date is year only ()
%   ,tit-it%: Title italic ((\em))
%   ,jtit-x%: No article title ()
%   ,jttl-rm%: Journal title normal (font)
%   ,trtit-b%: Tech. report title like books ()
%   ,vol-bf%: Volume bold (as {\bf vol}(num))
%   ,volp-com%: Volume with comma (as vol(num), ppp)
%   ,jpg-1%: Only start page number ()
%   ,jnm-x%: Space after journal (name)
%   ,pub-date%: Publisher and date in parentheses ((Oxford, 1994))
%   ,pre-pub%: Publisher before chapter, pages ()
%   ,isbn%: Include ISBN (for books, booklets, etc.)
%   ,issn%: Include ISSN (for periodicals)
%   ,url,url-nt%: URL as note ()
%   ,edby%: Booktitle, edited by ..  ((where .. is names))
%   ,blk-com%: Comma between blocks ()
%   ,pp%: `Page' abbreviated (as p. or pp.)
%   ,ed%: `Editor' abbreviated (as ed. or eds.)
%   ,abr%: Abbreviations (of such words)
%   ,ednx%: `Edition' abbreviated as `ed' ()
%   ,ord%: Numerical editions (as 1st, 2nd, 3rd, etc)
%   ,jabr%: Abbreviated journal names ()
%   ,etal-it%: Italic et al ()
%   ,nfss%: NFSS (use \textbf, \emph, not \bf, \em)
%   ,revdata%: additional data fields (Include collaboration, eid, eprint, numpages, and isbn in all output.)
%   ,bibinfo%: reference component tags (Apply tags like \bibinfo to the content of \bibitem)
%   }}
% \generate{\file{\jobname.bst}{\MBopts}}
% \endbatchfile
% \end{verbatim}
%
% To get a banner in the \file{.blg} file, patch by hand into \file{apsrev.bst}:
% \begin{verbatim}
% FUNCTION {banner.log} {"REVTeX-compatible apsrev.bst 9812" warning$}
% \end{verbatim}
% and invoke \texttt{banner.log} from within \texttt{begin.bib}
%
% We ensure that the journal substyle has the first word
% in the matter by installing the (default) APS code 
% later on (see Section~\ref{sec:aps-defaults}).
% \end{macro}
%
% \begin{macro}{\bibpunct}
% The following commands effectively etablish the style in which \cmd\cite\ commands are
% formatted.
% You can think of them as the second needed component for the bibliography.
% 
% Set up for numerical citations.
% We also nip inside \classname{natbib} and set up for \classoption{sort\&compression}.
%
% The journal substyles can override these choices.
%    \begin{macrocode}
\@ifpackageloaded{natbib}{%
 \bibpunct{[}{]}{,}{n}{}{,}%
 \def\NAT@sort{2}%
}{}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\bibsection}
% \begin{macro}{\@bibsetup}
% \begin{macro}{\bibfont}
% \begin{macro}{\@biblabel}
% We define the sectioning command to use when starting the bibliography
% and gently coax \classname{natbib} into using
% the formatting procedures apprpriate to the APS.
%
% This way of setting up \env{thebibliography} 
% automatically sets the label width based on
% the largest number used within the bibliography.
%
% In \cmd\bibfont\ is the class's default \cmd\place@bibnumber.
% If neither the document not the journal substyle has made a selection
% at that late moment, the following selection will prevail
% and avoid this procedure being undefined.
%
% A journal substyle may override these settings.
%    \begin{macrocode}
\def\bibsection{\section*{\refname}}%
\def\REV@bibsetup#1{\NAT@bibsetup{\ref{LastBibItem}}}%
\let\bibpreamble\@empty
\def\bibfont{%
 \bibsep\z@\relax
 \let\NAT@bibsetup\@bibsetup
 \let\@bibsetup\REV@bibsetup
 \@ifxundefined\place@bibnumber{%
  \let\@biblabel\place@bibnumber@inl
 }{%
  \let\@biblabel\place@bibnumber
 }%
 \def\newblock{\ }%
}%
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
%
% \subsubsection{Index}%
% FIXME: the following call to \cmd\twocolumn\ appears wrong if we were in two-column grid.
%    \begin{macrocode}
\newenvironment{theindex}{%
 \let\wastwocol@sw\twocolumn@sw
 \columnseprule \z@
 \columnsep 35\p@
 \c@secnumdepth-\maxdimen
 \twocolumn[%
  \section{%
   \indexname
  }%
 ]%
 \thispagestyle{plain}%
 \parindent\z@
 \parskip\z@ plus.3\p@\relax
 \let\item\@idxitem
}{%
 \wastwocol@sw{\clearpage}{\onecolumn}%
}%
%
\def\@idxitem{\par\hangindent 40\p@}
%
\def\subitem{\par\hangindent 40\p@ \hspace*{20\p@}}
%
\def\subsubitem{\par\hangindent 40\p@ \hspace*{30\p@}}
%
\def\indexspace{\par \vskip 10\p@ plus5\p@ minus3\p@\relax}
%    \end{macrocode}
%
%
% \subsection{Journal-Specific Code}%
%
% For APS journals, we supply code specific to PRA, PRB, PRC, PRD, PRE, PRL, and RMP.
% At present, they are identical,
% with the exception of PRB's code for superscript citations.
% 
%    \begin{macrocode}
\def\journal@pra{pra}%
\def\journal@prb{prb}%
\def\journal@prc{prc}%
\def\journal@prd{prd}%
\def\journal@pre{pre}%
\def\journal@prl{prl}%
\def\journal@prstab{prstab}%
\def\journal@rmp{rmp}%
%    \end{macrocode}
%
% Note: the convention in this document class is that 
% the substyle must not override any explicit class options
% declared by the document.
% This means that the various Booleans of Section~\ref{sec:options}
% may be assigned here only if they are still undefined at this point.
%
% For most all of the APS journals, the journal-dependent 
% code is relatively meager and is therefore embedded in this file.
% However, the RMP code is sufficiently extensive that 
% splitting it out into a separate file is more convenient.
%
% \subsubsection{\classoption{pra}}%
%    \begin{macrocode}
\@ifx{\@journal\journal@pra}{%
%    \end{macrocode}
%
% End of \classoption{pra} code.
%    \begin{macrocode}
}{}%
%    \end{macrocode}
%
% \subsubsection{\classoption{prb}}%
%    \begin{macrocode}
\@ifx{\@journal\journal@prb}{%
%    \end{macrocode}
% PRB requires superscript citations.
% We use Patrick Daly's \classname{natbib} package,
% and hyperref and other packages are already set up to cope with this.
%
% \begin{macro}{\bibpunct}
% Set up for numerical citations.
% We also nip inside \classname{natbib} and set up for \classoption{sort\&compression}.
%    \begin{macrocode}
 \bibpunct{}{}{,}{s}{}{\textsuperscript{,}}%
 \def\NAT@sort{2}%
 \def\onlinecite#1{\begingroup\let\@cite\NAT@citenum\citealp{#1}\endgroup}%
%    \end{macrocode}
% \end{macro}
%
% Invoke \classoption{superbib} option if the document
% has made no selection of its own.
%    \begin{macrocode}
 \AtBeginDocument{%
  \@ifxundefined\place@bibnumber{%
   \def\place@bibnumber{\place@bibnumber@sup}%
  }{}%
 }%
%    \end{macrocode}
%
% End of \classoption{prb} code.
%    \begin{macrocode}
}{}%
%    \end{macrocode}
%
% \subsubsection{\classoption{prc}}%
%    \begin{macrocode}
\@ifx{\@journal\journal@prc}{%
%    \end{macrocode}
%
% End of \classoption{prc} code.
%    \begin{macrocode}
}{}%
%    \end{macrocode}
%
% \subsubsection{\classoption{prd}}%
%    \begin{macrocode}
\@ifx{\@journal\journal@prd}{%
%    \end{macrocode}
%
% End of \classoption{prd} code.
%    \begin{macrocode}
}{}%
%    \end{macrocode}
%
% \subsubsection{\classoption{pre}}%
%    \begin{macrocode}
\@ifx{\@journal\journal@pre}{%
%    \end{macrocode}
%
% End of \classoption{prd} code.
%    \begin{macrocode}
}{}%
%    \end{macrocode}
%
% \subsubsection{\classoption{prl}}%
%    \begin{macrocode}
\@ifx{\@journal\journal@prl}{%
%    \end{macrocode}
% Implement length checking.
% Use the \classname{mathtime} package, plus whatever other
% processing is required to make the formatted output be true
% to the metrics of the journal.
%
% Note that we execute \cmd\RequirePackage\ at
% \cmd\AtBeginDocument\ time; this timing can be problematic
% for some packages: they are not used to being read in so late.
%    \begin{macrocode}
 \AtBeginDocument{%
  \lengthcheck@sw{%
   \Requirepackage{mathtime}%
  }{}%
 }%
%    \end{macrocode}
% Note: we defer this code until after type size file is read in.
%    \begin{macrocode}
 \appdef\set@typesize@hook{%
  \@ifnum{\@pointsize=10\relax}{%
   \def\normalsize{%
    \@setfontsize\normalsize\@xpt\@xiipt
    \abovedisplayskip 10\p@ \@plus2\p@ \@minus5\p@
    \belowdisplayskip \abovedisplayskip
    \abovedisplayshortskip  \abovedisplayskip
    \belowdisplayshortskip \abovedisplayskip
    \let\@listi\@listI
   }%
  }{}%
 }%
 \appdef\set@pica@hook{%
  \@ifnum{\@pointsize=10\relax}{%
   \textheight = 55\baselineskip
   \advance\textheight by \topskip
  }{}%
 }%
%    \end{macrocode}
%
% End of \classoption{prl} code.
%    \begin{macrocode}
}{}%
%    \end{macrocode}
%
% \subsubsection{\classoption{prstab}}%
%    \begin{macrocode}
\@ifx{\@journal\journal@prstab}{%
%    \end{macrocode}
%
% End of \classoption{prstab} code.
%    \begin{macrocode}
}{}%
%    \end{macrocode}
%
% \subsubsection{\classoption{rmp}}%
% Read in the code from a file.
%    \begin{macrocode}
\@ifx{\@journal\journal@rmp}{\input{\@journal\REVTEX@society@ext}}{}%
%    \end{macrocode}
%
%
% \subsection{Establish APS Defaults}\label{sec:aps-defaults}
%
% \begin{macro}{\place@bibnumber}
% \begin{macro}{\@bibstyle}
% We install code that will select the presentation for \cmd\bibitem s
% and govern the \BibTeX\ processing.
% If the user has not selected any related option and if
% the journal substyle also has not, then the \classoption{aps}
% option choses these defaults.
%    \begin{macrocode}
\AtBeginDocument{%
 \@ifxundefined\place@bibnumber{%
  \def\place@bibnumber{\place@bibnumber@inl}%
 }{}%
 \@ifxundefined\@bibstyle{%
  \def\@bibstyle{apsrev}%
 }{}%
}%
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
%
%    \begin{macrocode}
%</aps>
%    \end{macrocode}
%
%
% \section{The \classoption{rmp} journal substyle: the \texttt{rmp} module}
%
% The file \file{rmp.rtx} is read in by the \classname{revtex4} document class
% if \cmd\@society\ has the value \classoption{aps}
% and \cmd\@journal\ has the value \classoption{rmp}.
%
% It is read at the end of the \filename{aps.rtx}, so all definitions
% and assignments in that file are operative unless overridden here.
%
%
%    \begin{macrocode}
%<*rmp>
%    \end{macrocode}
%
% Protect this file from being read in by anything but \revtex.
%    \begin{macrocode}
\ifx\undefined\REVTEX@society@ext
 \def\@tempa{%
  \endinput
  \GenericWarning{I must be read in by REVTeX! (Bailing out)}%
 }%
 \expandafter\else
  \def\@tempa{}%
 \expandafter\fi\@tempa
%    \end{macrocode}
%
% Protect this file from being read in as a society instead of a journal.
% In such a case, \cmd\@journal\ will be \cmd\@empty.
%    \begin{macrocode}
\@ifx@empty\@journal{%
 \REVTEX@warn{I have to read in the aps substyle first!}%
 \endinput
 \def\@society{aps}\def\@journal{rmp}%
 \expandafter\input\expandafter{\@society\REVTEX@society@ext}%
}{}%
%    \end{macrocode}
%
% \subsection{Frontmatter}%
%
% \begin{macro}{\frontmatter@setup}
% 
%    \begin{macrocode}
\def\frontmatter@setup{\normalfont\raggedright\sffamily}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\frontmatter@title@produce}
% 
%    \begin{macrocode}
\def\frontmatter@title@produce{%
 \begingroup\Large\bfseries\@title\par\endgroup
 \addvspace{8pt}%
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\frontmatter@authorformat}
% Set the rag to a milder value, because we want to do true ragged right
% typesetting, as opposed to the \LaTeX\ default, which gives very poor results.
%    \begin{macrocode}
\def\frontmatter@authorformat{%
 \preprintsty@sw{\vskip0.5pc\relax}{}%
 \@tempskipa\@flushglue
 \@flushglue\z@ plus50\p@\relax
 \raggedright\advance\leftskip.5in\relax
 \@flushglue\@tempskipa
 \parskip\z@skip
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\frontmatter@affiliationfont}
% 
%    \begin{macrocode}
\def\frontmatter@affiliationfont{\small\slshape\selectfont}%
%    \end{macrocode}
% \end{macro}
%
% Set up the default RMP style for title block authors and affiliations.
% This command should effectively override the effect of the 
% corresponding command in the parent substyle.
%    \begin{macrocode}
\@ifxundefined\groupauthors@sw{%
 \clo@groupedaddress
}{}%
%    \end{macrocode}
%
% \begin{macro}{\frontmatter@RRAPformat}
% Note: in RMP, if we are not in preprint mode, the date will not be produced.
%    \begin{macrocode}
\def\frontmatter@RRAPformat#1{%
 \begingroup
  \small
  \raggedright\advance\leftskip.5in\relax
  \parskip.5ex\relax
  \everypar{\hbox\bgroup(\@gobble@leavemode@uppercase}%
  \def\par{\@ifvmode{}{\unskip)\egroup\@@par}}%
  \preprintsty@sw{}{\let\@date\@empty}%
  #1\par
 \endgroup
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\frontmatter@abstractheading}
% The default abstract head; journals will override this procedure.
%    \begin{macrocode}
\def\frontmatter@abstractheading{%
 \preprintsty@sw{%
  \begingroup
   \centering\large\abstractname\par
  \endgroup
  \vspace{.5pc}%
 }{}%
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\frontmatter@abstractfont}
% 
%    \begin{macrocode}
\def\frontmatter@abstractfont{%
 \footnotesize
 \hsize\columnwidth
 \leftskip=0.5in
 \rightskip=\leftskip
 \parindent\z@
%\hsize5.5in
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\frontmatter@preabstractspace}
% \begin{macro}{\frontmatter@postabstractspace}
% Space above and space below abstract in title block
%    \begin{macrocode}
\def\frontmatter@preabstractspace{2.5pc}
\def\frontmatter@postabstractspace{2.0pc}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% Not done: PACS.
%
% \subsection{General Text}%
%
% If not in preprint mode, set the type size to 10/12 point.
%    \begin{macrocode}
 \appdef\set@typesize@hook{%
  \@ifxundefined\preprintsty@sw{}{%
   \preprintsty@sw{}{%
    \def\normalsize{%
     \@setsize\normalsize{12pt}\xpt\@xpt
     \abovedisplayskip 10\p@ plus2\p@ minus5\p@
     \belowdisplayskip \abovedisplayskip
     \abovedisplayshortskip  \abovedisplayskip
     \belowdisplayshortskip \abovedisplayskip
     \let\@listi\@listI
    }%
   }%
  }%
 }%
%    \end{macrocode}
%
% Footnote mods:
%    \begin{macrocode}
 \footnotesep 9.25pt
 \skip\footins 36pt plus 4pt minus 2pt
 \def\footnoterule{\kern-13pt\hrule width.5in\kern15.6pt}%
%    \end{macrocode}
%
%
% \subsection{Sectioning}
%
%    \begin{macrocode}
\def\thepart{\Roman{part}} %
\def\thesection{\Roman{section}}
\def\p@section{}
\def\thesubsection{\Alph{subsection}}
\def\p@subsection{\thesection.}
\def\thesubsubsection{\arabic{subsubsection}}
\def\p@subsubsection{\thesection.\thesubsection.}
\def\p@paragraph{\thesection.\thesubsection.\thesubsubsection.}
\def\theparagraph{\alph{paragraph}}
\def\thesubparagraph{\theparagraph.\arabic{subparagraph}}
%    \end{macrocode}
%
%    \begin{macrocode}
 \def\section{%
  \@startsection{section}{1}{\z@}{0.8cm plus1ex minus.2ex}{0.4cm plus1ex minus.2ex}%
  {%
   \small\sffamily\bfseries\selectfont
   \raggedright
   \parindent\z@
   \MakeTextUppercase % Implicit #1
  }%
 }%
 \def\subsection{%
  \@startsection{subsection}{2}{\z@}{0.8cm plus1ex minus.2ex}{0.4cm plus1ex minus.2ex}%
  {%
   \small\sffamily\bfseries
   \raggedright
   \parindent\z@
  }%
 }%
 \def\subsubsection{%
  \@startsection{subsubsection}{3}{\z@}{.8cm plus1ex minus.2ex}{0.4cm plus1ex minus.2ex}%
  {%
   \small\sffamily\selectfont
   \raggedright
   \parindent\z@
  }%
 }%
 \def\paragraph{%
  \@startsection{paragraph}{4}{\z@}{.8cm plus1ex minus.2ex}{0.4cm plus1ex minus.2ex}%
  {%
   \small\slshape\selectfont
   \raggedright
   \parindent\z@
  }%
 }%
 \def\subparagraph{%
  \@startsection{subparagraph}{4}{\parindent}{3.25ex plus1ex minus.2ex}{-1em}%
  {\normalsize\bfseries\selectfont}%
 }%
 \def\@seccntformat#1{\csname the#1\endcsname.\ }%
%
 \setcounter{tocdepth}{4}% FIXME: has no effect
%    \end{macrocode}
%
% \begin{macro}{\appendix}
% \begin{macro}{\@hangfrom@appendix}
% \begin{macro}{\@hangfroms@appendix}
% \begin{macro}{\@appendixcntformat}
%    \begin{macrocode}
\appdef\appendix{%
 \let\@hangfrom@section\@hangfrom@appendix
 \let\@hangfroms@section\@hangfroms@appendix
 \let\@sectioncntformat\@appendixcntformat
}%
\def\@hangfrom@appendix#1#2{%
 #1\@ifempty{#2}{}{:\ #2}%
}%
\def\@hangfroms@appendix#1#2{%
 #1\appendixname\@ifempty{#2}{}{:\ #2}%
}%
\def\@appendixcntformat#1{\appendixname\ \csname the#1\endcsname}%
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
%
% \subsection{Figure and Table Caption Formatting}
% \begin{macro}{\@makecaption}
%
%    \begin{macrocode}
\setlength\belowcaptionskip{2\p@}
\long\def\@makecaption#1#2{%
  \vskip\abovecaptionskip
  \vbox{%
   \small\rmfamily
%  \hsize\@capwidth
   \noindent
   #1\nobreak\hskip.5em plus.2em\ignorespaces#2\par
  }%
  \vskip\belowcaptionskip
}%
%    \end{macrocode}
% \end{macro}
%
% \subsection{Citations and Bibliography}%
%
% Customize \revtex\ for the journal substyle;
% this task requires three components:
% a \BibTeX\ \file{.bst} style file,
% customizing code for \file{natbib}, and
% customizations of the \env{thebibliography} environment.
%
% \begin{macro}{\@bibstyle}
% Define the argument of the \cmd\bibliographystyle\ command
% (if the document does not do so).
%
% The user must have installed a \file{.bst} file of the corresponding name.
% This file will then be used by \BibTeX\ when compiling the document's \file{.bbl} file.
%
%  To generate \file{apsrmp.bst}, use \classname{custom-bib} version 3.89d1 or later.
%  Run the \file{.bst} generator, \file{makebst.tex}, with the following options:
%
% \begin{enumerate}
% \item
%  ORDERING OF REFERENCES: *: (Alphabetical);
% \item
%  AUTHOR NAMES: i: nm-init (Initials + surname);
% \item
%  NUMBER OF AUTHORS: l: max 10, min 11;
% \item
%  DATE FORMAT: p: yr-par (Date in parentheses);
% \item
%  TITLE OF ARTICLE: i: tit-it (Title italic)
% \item
%  ARTICLE TITLE PRESENT: x: jtit-x (No article title);
% \item
%  JOURNAL TITLE FONT: r: jttl-rm (Journal title normal);
% \item
%  TECHNICAL REPORT TITLE: b: trtit-b (Tech. report title like books);
% \item
%  JOURNAL VOLUME: b: vol-bf (Volume bold);
% \item
%  VOLUME PUNCTUATION: c: volp-com (Volume with comma);
% \item
%  PAGE NUMBERS: f: jpg-1 (Only start page number);
% \item
%  JOURNAL NAME PUNCTUATION: x: jnm-x (Space after journal);
% \item
%  PUBLISHER IN PARENTHESES: d: pub-date (Publisher and date in parentheses);
% \item
%  PUBLISHER POSITION: p: pre-pub (Publisher before chapter, pages);
% \item
%  ISBN NUMBER: *: isbn (Include ISBN);
% \item
%  PUNCTUATION BETWEEN SECTIONS (BLOCKS): c: blk-com (Comma between blocks);
% \item
%  ABBREVIATE WORD `PAGES': a: pp (`Page' abbreviated);
% \item
%  ABBREVIATE WORD `EDITORS': a: ed (`Editor' abbreviated);
% \item
%  OTHER ABBREVIATIONS: a: abr (Abbreviations);
% \item
%  ABBREVIATION FOR `EDITION': a: ednx (`Edition' abbreviated as `ed');
% \item
%  EDITION NUMBERS: n: ord (Numerical editions);
% \item
%  STORED JOURNAL NAMES: a: jabr (Abbreviated journal names);
% \item
%  FONT OF `ET AL': i: etal-it (Italic et al);
% \item
%  NEW FONT SELECTION SCHEME: n: nfss (NFSS);
% \item
%  ADDITIONAL REVTeX DATA FIELDS: y: revdata (additional data fields);
% \item
%  REFERENCE COMPONENT TAGS: r: bibinfo (reference component tags);
% \end{enumerate}
%
% A file \file{apsrmp.dbj} file equivalent to the following should result:
% \begin{verbatim}
% \input docstrip
% \preamble
% ----------------------------------------
% *** REVTeX-compatible apsrmp.bst ***
% \endpreamble
% \postamble
% End of customized bst file
% \endpostamble
% \keepsilent
% \askforoverwritefalse
% \def\MBopts{\from{merlin.mbs}{%
%    ay%:       Author-year (with some non-standard interface)
%   ,nat%:      Natbib (for use with natbib.sty v5.3)
%   ,vonx%:     Sort without von part ((de la Maire after Mahone))
%   ,nm-rev1%:  Only first name reversed, initials ((AGU style: Smith, J. F., H.~K.~Jones))
%   ,nmlm%:     Limited authors ((et al replaces missing names))
%     ,x10,x2%: Maximum of 12 authors
%     ,m10,m2%: Minimum of 12 authors
%   ,nmft,nmft-def%: User defined author font ((\bibnamefont))
%   ,fnm-def%:  First names in user defined font ((\bibfnamefont))
%   ,nmfted%:   Editors incollection like authors (font)
%   ,nmand-rm%: `And' in normal font ((JONES and JAMES))
%   ,lab,lab-def%: User defined citation font ((\citenamefont))
%   ,keyxyr%:   Year blank when KEY replaces missing author ((for natbib 7.0))
%   ,dt-beg%:   Date after authors ()
%   ,xmth%:     Date is year only ()
%   ,yr-com%:   Date preceded by comma (as `, 1993')
%   ,note-yr%:  Year text full (as 1990--1993 or `in press')
%   ,jtit-x%:   No article title ()
%   ,jttl-rm%:  Journal title normal (font)
%   ,trtit-b%:  Tech. report title like books ()
%   ,vol-bf%:   Volume bold (as {\bf vol}(num))
%   ,volp-com%: Volume with comma (as vol(num), ppp)
%   ,jpg-1%:    Only start page number ()
%   ,pp-last%:  Pages at end (but before any notes)
%   ,num-xser%: Allows number without series (and suppresses word "number")
%   ,jnm-x%:    Space after journal (name)
%   ,pub-par%:  Publisher in parentheses ()
%   ,pre-pub%:  Publisher before chapter, pages ()
%   ,isbn%:     Include ISBN (for books, booklets, etc.)
%   ,issn%:     Include ISSN (for periodicals)
%   ,url,url-blk%: Include URL (as regular item block)
%   ,edpar%:    `Name (editor),' (in parentheses, after name, comma after)
%   ,edby%:     Booktitle, edited by ..  ((where .. is names))
%   ,blk-com%:  Comma between blocks ()
%   ,injnl%:    Add `in' before journal name (in style for incollection)
%   ,pp%:       `Page' abbreviated (as p. or pp.)
%   ,ed%:       `Editor' abbreviated (as ed. or eds.)
%   ,xedn%:     Editions as in database (saving much processing memory)
%   ,jabr%:     Abbreviated journal names ()
%   ,etal-it%:  Italic et al ()
%   ,nfss%:     NFSS (use \textbf, \emph, not \bf, \em)
%   ,revdata%:  additional data fields (Include collaboration, eid, eprint, numpages, and isbn in all output.)
%   ,bibinfo%:  reference component tags (Apply tags like \bibinfo to the content of \bibitem)
%   }}
% \generate{\file{\jobname.bst}{\MBopts}}
% \endbatchfile
% \end{verbatim}
%
%    \begin{macrocode}
\AtBeginDocument{%
 \@ifxundefined\@bibstyle{%
  \def\@bibstyle{apsrmp}%
 }{}%
}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\bibpunct}
% The following commands effectively etablish the style in which \cmd\cite\ commands are
% formatted.
% You can think of them as the second needed component for the bibliography.
% 
% Set up for numerical citations.
% We also nip inside \classname{natbib} and set up for \classoption{sort\&compression}.
%    \begin{macrocode}
\@ifpackageloaded{natbib}{%
 \bibpunct{(}{)}{,}{a}{}{,}%
 \def\NAT@sort{0}%
}{}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\bibsection}
% \begin{macro}{\@bibsetup}
% \begin{macro}{\bibfont}
% \begin{macro}{\@biblabel}
% \begin{macro}{\@bibsetup@rmp}
% We define the sectioning command to use when starting the bibliography.
%
% In \cmd\bibfont\ is the journal substyle's definition of \cmd\@biblabel.
%    \begin{macrocode}
\def\bibsection{\section*{\refname}}%
\let\bibpreamble\@empty
\def\bibfont{%
 \bibsep\z@\relax
 \let\@bibsetup\@bibsetup@rmp
 \let\@biblabel\@gobble
 \def\newblock{\ }%
}%
\def\@bibsetup@rmp#1{%
 \leftmargin10\p@
 \labelwidth\z@
 \labelsep\z@
 \itemindent-\leftmargin
 \parsep\z@
 \topsep\z@
 \itemsep\z@
}%
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\footinbib@sw}
% Footnotes in bibliography are inconsistent with author-year
% references, and are particularly nast under \classname{natbib}:
% the packcage will automatically change to numbered references if
% any \cmd\bibitem\ commands lack the optional argument.
% Also, all APS journals except RMP invoke the \classoption{footinbib} option.
% Therefore, we must uninvoke it now, even if invoked by the 
% document.
%    \begin{macrocode}
\@ifxundefined\footinbib@sw{}{%
 \footinbib@sw{%
  \REVTEX@warn{%
   Footnotes in bibliography are incompatible with RMP.^^J%
   Undoing the footinbib option.
  }%
 }{}%
}%
\@booleanfalse\footinbib@sw
%    \end{macrocode}
% \end{macro}
%
%
% \subsection{Table of Contents}
%
% We set up for auto-sizing of certain TOC elements.
% 
% To do this, we override certain definitions for 
% the default TOC font (\cmd\toc@@font) and spacing (\@dotsep),
% and define
% formatting for the needed elements (\cmd\l@\dots).
% Finally, we activate the autosizing by 
% assigning \cmd\toc@pre\ and \cmd\toc@post.
%
% \begin{macro}{\toc@@font}
% Set the formatting characteristics of the auto-indenting part
%  of the TOC.
%    \begin{macrocode}
\def\toc@@font{%
 \footnotesize\rmfamily
 \def\\{\space\ignorespaces}%
}%
\def\@dotsep{5.5pt}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\l@section}
% Determine which TOC elements are automatically indented.
%    \begin{macrocode}
\def\l@section{%
 \l@@sections{}{section}% Implicit #3#4
}%
\def\tocleft@{\z@}%
\def\l@subsection{%
 \l@@sections{section}{subsection}% Implicit #3#4
}%
\def\l@subsubsection#1#2{}%
\def\l@paragraph#1#2{}%
\def\l@subparagraph#1#2{}%
%    \end{macrocode}
% \end{macro}
%
% Activate the TOC processing.
%    \begin{macrocode}
\let\toc@pre\toc@pre@auto
\let\toc@post\toc@post@auto
%    \end{macrocode}
%
%
%    \begin{macrocode}
%</rmp>
%    \end{macrocode}
%
%
% \Finale
% %Here ends the programmer's documentation.
% \endinput
%
\endinput

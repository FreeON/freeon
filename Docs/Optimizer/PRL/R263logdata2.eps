%!PS-Adobe-2.0 EPSF-2.0
%%Title: R263logdatap96.eps
%%Creator: gnuplot 3.8j patchlevel 0
%%CreationDate: Thu Apr 22 14:37:59 2004
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 12.500 def
/userlinewidth gnulinewidth def
/vshift -100 def
/dl {20.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse } forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times Roman) findfont 300 scalefont setfont
1.000 UL
LTb
1350 900 M
63 0 V
5277 0 R
-63 0 V
stroke
1170 900 M
gsave 0 setgray
[ [(Times Roman) 300.0 0.0 true true 0 (-10)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1350 1440 M
63 0 V
5277 0 R
-63 0 V
stroke
1170 1440 M
gsave 0 setgray
[ [(Times Roman) 300.0 0.0 true true 0 (-9)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1350 1980 M
63 0 V
5277 0 R
-63 0 V
stroke
1170 1980 M
gsave 0 setgray
[ [(Times Roman) 300.0 0.0 true true 0 (-8)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1350 2520 M
63 0 V
5277 0 R
-63 0 V
stroke
1170 2520 M
gsave 0 setgray
[ [(Times Roman) 300.0 0.0 true true 0 (-7)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1350 3060 M
63 0 V
5277 0 R
-63 0 V
stroke
1170 3060 M
gsave 0 setgray
[ [(Times Roman) 300.0 0.0 true true 0 (-6)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1350 3600 M
63 0 V
5277 0 R
-63 0 V
stroke
1170 3600 M
gsave 0 setgray
[ [(Times Roman) 300.0 0.0 true true 0 (-5)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1350 4140 M
63 0 V
5277 0 R
-63 0 V
stroke
1170 4140 M
gsave 0 setgray
[ [(Times Roman) 300.0 0.0 true true 0 (-4)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1350 4680 M
63 0 V
5277 0 R
-63 0 V
stroke
1170 4680 M
gsave 0 setgray
[ [(Times Roman) 300.0 0.0 true true 0 (-3)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1350 900 M
0 63 V
0 3717 R
0 -63 V
stroke
1350 600 M
gsave 0 setgray
[ [(Times Roman) 300.0 0.0 true true 0 ( 0)]
] -100.0 MCshow
grestore
1.000 UL
LTb
1884 900 M
0 63 V
0 3717 R
0 -63 V
stroke
1884 600 M
gsave 0 setgray
[ [(Times Roman) 300.0 0.0 true true 0 ( 10)]
] -100.0 MCshow
grestore
1.000 UL
LTb
2418 900 M
0 63 V
0 3717 R
0 -63 V
stroke
2418 600 M
gsave 0 setgray
[ [(Times Roman) 300.0 0.0 true true 0 ( 20)]
] -100.0 MCshow
grestore
1.000 UL
LTb
2952 900 M
0 63 V
0 3717 R
0 -63 V
stroke
2952 600 M
gsave 0 setgray
[ [(Times Roman) 300.0 0.0 true true 0 ( 30)]
] -100.0 MCshow
grestore
1.000 UL
LTb
3486 900 M
0 63 V
0 3717 R
0 -63 V
stroke
3486 600 M
gsave 0 setgray
[ [(Times Roman) 300.0 0.0 true true 0 ( 40)]
] -100.0 MCshow
grestore
1.000 UL
LTb
4020 900 M
0 63 V
0 3717 R
0 -63 V
stroke
4020 600 M
gsave 0 setgray
[ [(Times Roman) 300.0 0.0 true true 0 ( 50)]
] -100.0 MCshow
grestore
1.000 UL
LTb
4554 900 M
0 63 V
0 3717 R
0 -63 V
stroke
4554 600 M
gsave 0 setgray
[ [(Times Roman) 300.0 0.0 true true 0 ( 60)]
] -100.0 MCshow
grestore
1.000 UL
LTb
5088 900 M
0 63 V
0 3717 R
0 -63 V
stroke
5088 600 M
gsave 0 setgray
[ [(Times Roman) 300.0 0.0 true true 0 ( 70)]
] -100.0 MCshow
grestore
1.000 UL
LTb
5622 900 M
0 63 V
0 3717 R
0 -63 V
stroke
5622 600 M
gsave 0 setgray
[ [(Times Roman) 300.0 0.0 true true 0 ( 80)]
] -100.0 MCshow
grestore
1.000 UL
LTb
6156 900 M
0 63 V
0 3717 R
0 -63 V
stroke
6156 600 M
gsave 0 setgray
[ [(Times Roman) 300.0 0.0 true true 0 ( 90)]
] -100.0 MCshow
grestore
1.000 UL
LTb
6690 900 M
0 63 V
0 3717 R
0 -63 V
stroke
6690 600 M
gsave 0 setgray
[ [(Times Roman) 300.0 0.0 true true 0 ( 100)]
] -100.0 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1350 900 M
5340 0 V
0 3780 V
-5340 0 V
0 -3780 V
LTb
300 2790 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times Roman) 300.0 0.0 true true 0 (log)]
[(Times Roman) 240.0 -90.0 true true 0 (10)]
[(Times Roman) 300.0 0.0 true true 0 (|\(E)]
[(Times Roman) 240.0 -90.0 true true 0 (i+1)]
[(Times Roman) 300.0 0.0 true true 0 ( - E)]
[(Times Roman) 240.0 -90.0 true true 0 (opt)]
[(Times Roman) 300.0 0.0 true true 0 (\)/E)]
[(Times Roman) 240.0 -90.0 true true 0 (opt)]
[(Times Roman) 300.0 0.0 true true 0 (|)]
] -70.0 MCshow
grestore
grestore
LTb
4020 150 M
gsave 0 setgray
[ [(Times Roman) 300.0 0.0 true true 0 (i)]
] -100.0 MCshow
grestore
1.000 UP
2.000 UP
2.000 UL
LT0
1403 4322 M
54 -114 V
53 -66 V
54 -32 V
53 -40 V
53 -39 V
54 -25 V
53 -31 V
54 -34 V
53 -37 V
53 -25 V
54 -44 V
53 -30 V
54 -52 V
53 -42 V
53 -41 V
54 -5 V
53 -46 V
54 -14 V
53 -19 V
53 -23 V
54 -28 V
53 -11 V
54 -29 V
53 -4 V
53 -13 V
54 -6 V
53 -41 V
54 -24 V
53 -22 V
53 -26 V
54 -16 V
53 -13 V
54 -6 V
53 -14 V
53 -7 V
54 -9 V
53 -15 V
54 -21 V
53 -16 V
53 -23 V
54 -24 V
53 -14 V
54 -11 V
53 -9 V
53 -19 V
54 -13 V
53 -3 V
54 -29 V
53 -21 V
53 -10 V
54 -11 V
53 -22 V
54 0 V
53 -48 V
53 -31 V
54 -6 V
53 -42 V
54 -51 V
53 -41 V
53 -29 V
54 -59 V
53 -50 V
54 -9 V
53 -62 V
53 -72 V
54 -35 V
53 -30 V
54 -22 V
53 -23 V
53 -2 V
54 -7 V
53 -2 V
54 -66 V
53 -27 V
53 -33 V
54 -29 V
53 -6 V
54 -61 V
53 -28 V
53 -27 V
54 -34 V
53 -28 V
54 -12 V
53 -39 V
53 -71 V
54 -6 V
53 -85 V
54 -42 V
53 -32 V
53 -49 V
54 -50 V
53 -88 V
54 -81 V
53 -50 V
53 -113 V
1403 4322 Pls
1457 4208 Pls
1510 4142 Pls
1564 4110 Pls
1617 4070 Pls
1670 4031 Pls
1724 4006 Pls
1777 3975 Pls
1831 3941 Pls
1884 3904 Pls
1937 3879 Pls
1991 3835 Pls
2044 3805 Pls
2098 3753 Pls
2151 3711 Pls
2204 3670 Pls
2258 3665 Pls
2311 3619 Pls
2365 3605 Pls
2418 3586 Pls
2471 3563 Pls
2525 3535 Pls
2578 3524 Pls
2632 3495 Pls
2685 3491 Pls
2738 3478 Pls
2792 3472 Pls
2845 3431 Pls
2899 3407 Pls
2952 3385 Pls
3005 3359 Pls
3059 3343 Pls
3112 3330 Pls
3166 3324 Pls
3219 3310 Pls
3272 3303 Pls
3326 3294 Pls
3379 3279 Pls
3433 3258 Pls
3486 3242 Pls
3539 3219 Pls
3593 3195 Pls
3646 3181 Pls
3700 3170 Pls
3753 3161 Pls
3806 3142 Pls
3860 3129 Pls
3913 3126 Pls
3967 3097 Pls
4020 3076 Pls
4073 3066 Pls
4127 3055 Pls
4180 3033 Pls
4234 3033 Pls
4287 2985 Pls
4340 2954 Pls
4394 2948 Pls
4447 2906 Pls
4501 2855 Pls
4554 2814 Pls
4607 2785 Pls
4661 2726 Pls
4714 2676 Pls
4768 2667 Pls
4821 2605 Pls
4874 2533 Pls
4928 2498 Pls
4981 2468 Pls
5035 2446 Pls
5088 2423 Pls
5141 2421 Pls
5195 2414 Pls
5248 2412 Pls
5302 2346 Pls
5355 2319 Pls
5408 2286 Pls
5462 2257 Pls
5515 2251 Pls
5569 2190 Pls
5622 2162 Pls
5675 2135 Pls
5729 2101 Pls
5782 2073 Pls
5836 2061 Pls
5889 2022 Pls
5942 1951 Pls
5996 1945 Pls
6049 1860 Pls
6103 1818 Pls
6156 1786 Pls
6209 1737 Pls
6263 1687 Pls
6316 1599 Pls
6370 1518 Pls
6423 1468 Pls
6476 1355 Pls
1.000 UL
LTb
1350 900 M
5340 0 V
0 3780 V
-5340 0 V
0 -3780 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times Roman

%!PS-Adobe-2.0 EPSF-2.0
%%Title: curve2_1.eps
%%Creator: gnuplot 3.8j patchlevel 0
%%CreationDate: Sat Apr 24 18:50:02 2004
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 12.500 def
/userlinewidth gnulinewidth def
/vshift -100 def
/dl {20.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse } forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times Roman) findfont 300 scalefont setfont
1.000 UL
LTb
1170 900 M
63 0 V
5457 0 R
-63 0 V
stroke
990 900 M
gsave 0 setgray
[ [(Times Roman) 300.0 0.0 true true 0 (-6)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1170 1440 M
63 0 V
5457 0 R
-63 0 V
stroke
990 1440 M
gsave 0 setgray
[ [(Times Roman) 300.0 0.0 true true 0 (-5)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1170 1980 M
63 0 V
5457 0 R
-63 0 V
stroke
990 1980 M
gsave 0 setgray
[ [(Times Roman) 300.0 0.0 true true 0 (-4)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1170 2520 M
63 0 V
5457 0 R
-63 0 V
stroke
990 2520 M
gsave 0 setgray
[ [(Times Roman) 300.0 0.0 true true 0 (-3)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1170 3060 M
63 0 V
5457 0 R
-63 0 V
stroke
990 3060 M
gsave 0 setgray
[ [(Times Roman) 300.0 0.0 true true 0 (-2)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1170 3600 M
63 0 V
5457 0 R
-63 0 V
stroke
990 3600 M
gsave 0 setgray
[ [(Times Roman) 300.0 0.0 true true 0 (-1)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1170 4140 M
63 0 V
5457 0 R
-63 0 V
stroke
990 4140 M
gsave 0 setgray
[ [(Times Roman) 300.0 0.0 true true 0 ( 0)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1170 4680 M
63 0 V
5457 0 R
-63 0 V
stroke
990 4680 M
gsave 0 setgray
[ [(Times Roman) 300.0 0.0 true true 0 ( 1)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1170 900 M
0 63 V
0 3717 R
0 -63 V
stroke
1170 600 M
gsave 0 setgray
[ [(Times Roman) 300.0 0.0 true true 0 ( 0)]
] -100.0 MCshow
grestore
1.000 UL
LTb
1959 900 M
0 63 V
0 3717 R
0 -63 V
stroke
1959 600 M
gsave 0 setgray
[ [(Times Roman) 300.0 0.0 true true 0 ( 20)]
] -100.0 MCshow
grestore
1.000 UL
LTb
2747 900 M
0 63 V
0 3717 R
0 -63 V
stroke
2747 600 M
gsave 0 setgray
[ [(Times Roman) 300.0 0.0 true true 0 ( 40)]
] -100.0 MCshow
grestore
1.000 UL
LTb
3536 900 M
0 63 V
0 3717 R
0 -63 V
stroke
3536 600 M
gsave 0 setgray
[ [(Times Roman) 300.0 0.0 true true 0 ( 60)]
] -100.0 MCshow
grestore
1.000 UL
LTb
4324 900 M
0 63 V
0 3717 R
0 -63 V
stroke
4324 600 M
gsave 0 setgray
[ [(Times Roman) 300.0 0.0 true true 0 ( 80)]
] -100.0 MCshow
grestore
1.000 UL
LTb
5113 900 M
0 63 V
0 3717 R
0 -63 V
stroke
5113 600 M
gsave 0 setgray
[ [(Times Roman) 300.0 0.0 true true 0 ( 100)]
] -100.0 MCshow
grestore
1.000 UL
LTb
5901 900 M
0 63 V
0 3717 R
0 -63 V
stroke
5901 600 M
gsave 0 setgray
[ [(Times Roman) 300.0 0.0 true true 0 ( 120)]
] -100.0 MCshow
grestore
1.000 UL
LTb
6690 900 M
0 63 V
0 3717 R
0 -63 V
stroke
6690 600 M
gsave 0 setgray
[ [(Times Roman) 300.0 0.0 true true 0 ( 140)]
] -100.0 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1170 900 M
5520 0 V
0 3780 V
-5520 0 V
0 -3780 V
LTb
300 2790 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times Roman) 300.0 0.0 true true 0 (log|\(E)]
[(Times Roman) 240.0 -90.0 true true 0 (i)]
[(Times Roman) 300.0 0.0 true true 0 ( - E)]
[(Times Roman) 240.0 -90.0 true true 0 (opt)]
[(Times Roman) 300.0 0.0 true true 0 (\)/E)]
[(Times Roman) 240.0 -90.0 true true 0 (opt)]
[(Times Roman) 300.0 0.0 true true 0 (|)]
] -70.0 MCshow
grestore
grestore
LTb
3930 150 M
gsave 0 setgray
[ [(Times Roman) 300.0 0.0 true true 0 (i)]
] -100.0 MCshow
grestore
1.000 UP
2.000 UP
2.000 UL
LT0
1209 4263 M
40 -114 V
39 -67 V
40 -32 V
39 -39 V
40 -40 V
39 -25 V
39 -30 V
40 -34 V
39 -37 V
40 -25 V
39 -45 V
40 -29 V
39 -53 V
39 -41 V
40 -41 V
39 -5 V
40 -46 V
39 -14 V
40 -20 V
39 -22 V
39 -28 V
40 -11 V
39 -29 V
40 -4 V
39 -13 V
40 -7 V
39 -40 V
39 -24 V
40 -22 V
39 -26 V
40 -16 V
39 -13 V
40 -6 V
39 -14 V
39 -7 V
40 -9 V
39 -14 V
40 -21 V
39 -20 V
40 -8 V
39 -18 V
39 29 V
40 -23 V
39 -23 V
40 -14 V
39 -11 V
40 -9 V
39 -19 V
39 -14 V
40 -2 V
39 -29 V
40 -21 V
39 -10 V
40 -11 V
39 -22 V
39 1 V
40 -48 V
39 -31 V
40 -6 V
39 -41 V
40 -51 V
39 -40 V
39 -29 V
40 -57 V
39 -49 V
40 -9 V
39 -59 V
40 -68 V
39 -34 V
39 -27 V
40 -20 V
39 -22 V
40 -1 V
39 -6 V
40 -3 V
39 -58 V
39 -25 V
40 -27 V
39 -25 V
40 -4 V
39 -50 V
40 -22 V
39 -21 V
39 -25 V
40 -20 V
39 -8 V
40 -26 V
39 -44 V
40 -3 V
39 -45 V
39 -19 V
40 -13 V
39 -19 V
40 -16 V
39 -24 V
40 -17 V
39 -8 V
39 -13 V
40 -24 V
39 -25 V
40 -9 V
39 -25 V
40 -2 V
39 -28 V
stroke
5310 1730 M
39 -13 V
40 -5 V
39 -10 V
40 -26 V
39 -7 V
40 -23 V
39 -77 V
39 -9 V
40 -30 V
39 -2 V
40 -31 V
39 -49 V
40 -10 V
39 -66 V
39 -5 V
40 -83 V
39 -80 V
1209 4263 Pls
1249 4149 Pls
1288 4082 Pls
1328 4050 Pls
1367 4011 Pls
1407 3971 Pls
1446 3946 Pls
1485 3916 Pls
1525 3882 Pls
1564 3845 Pls
1604 3820 Pls
1643 3775 Pls
1683 3746 Pls
1722 3693 Pls
1761 3652 Pls
1801 3611 Pls
1840 3606 Pls
1880 3560 Pls
1919 3546 Pls
1959 3526 Pls
1998 3504 Pls
2037 3476 Pls
2077 3465 Pls
2116 3436 Pls
2156 3432 Pls
2195 3419 Pls
2235 3412 Pls
2274 3372 Pls
2313 3348 Pls
2353 3326 Pls
2392 3300 Pls
2432 3284 Pls
2471 3271 Pls
2511 3265 Pls
2550 3251 Pls
2589 3244 Pls
2629 3235 Pls
2668 3221 Pls
2708 3200 Pls
2747 3180 Pls
2787 3172 Pls
2826 3154 Pls
2865 3183 Pls
2905 3160 Pls
2944 3137 Pls
2984 3123 Pls
3023 3112 Pls
3063 3103 Pls
3102 3084 Pls
3141 3070 Pls
3181 3068 Pls
3220 3039 Pls
3260 3018 Pls
3299 3008 Pls
3339 2997 Pls
3378 2975 Pls
3417 2976 Pls
3457 2928 Pls
3496 2897 Pls
3536 2891 Pls
3575 2850 Pls
3615 2799 Pls
3654 2759 Pls
3693 2730 Pls
3733 2673 Pls
3772 2624 Pls
3812 2615 Pls
3851 2556 Pls
3891 2488 Pls
3930 2454 Pls
3969 2427 Pls
4009 2407 Pls
4048 2385 Pls
4088 2384 Pls
4127 2378 Pls
4167 2375 Pls
4206 2317 Pls
4245 2292 Pls
4285 2265 Pls
4324 2240 Pls
4364 2236 Pls
4403 2186 Pls
4443 2164 Pls
4482 2143 Pls
4521 2118 Pls
4561 2098 Pls
4600 2090 Pls
4640 2064 Pls
4679 2020 Pls
4719 2017 Pls
4758 1972 Pls
4797 1953 Pls
4837 1940 Pls
4876 1921 Pls
4916 1905 Pls
4955 1881 Pls
4995 1864 Pls
5034 1856 Pls
5073 1843 Pls
5113 1819 Pls
5152 1794 Pls
5192 1785 Pls
5231 1760 Pls
5271 1758 Pls
5310 1730 Pls
5349 1717 Pls
5389 1712 Pls
5428 1702 Pls
5468 1676 Pls
5507 1669 Pls
5547 1646 Pls
5586 1569 Pls
5625 1560 Pls
5665 1530 Pls
5704 1528 Pls
5744 1497 Pls
5783 1448 Pls
5823 1438 Pls
5862 1372 Pls
5901 1367 Pls
5941 1284 Pls
5980 1204 Pls
1.000 UL
LTb
1170 900 M
5520 0 V
0 3780 V
-5520 0 V
0 -3780 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times Roman

If you checked out the sources from the git repository, then you will have to
build the configure script before you can configure and make the sources. This
step has to be done only once however. After subsequent updates from git through
"git pull" you will need to only make "make clean" and then "make" again.

In order to build the configure script run the following commands:

aclocal
autoconf
autoheader
automake --add-missing

This whole procedure can be done in one single command:

autoreconf -i -s

Once the sources are configured (run "./configure --help" to get a list of
options it understands) run

make
make install

which will build the sources and install them. You should decide where you want
to have the binaries installed when you run the configure script. The default is
"/usr/local", i.e. the binaries are going to be installed in "/usr/local/bin".
You can change this by running configure as

./configure --prefix=/some/other/directory

which will install the binaries into /some/other/directory/bin.

Some examples of how to configure MondoSCF. The following configure commands
work. In order to use the PHiPAC (P3) optimized dgemms, add --enable-phipac to
the configure command line.

(1)
./configure FC=/usr/local/gcc-4.2.1/bin/gfortran F77=/usr/local/gcc-4.2.1/bin/gfortran CC=/usr/local/gcc-4.2.1/bin/gcc LDFLAGS=-L/usr/local/lapack/lib LIBS="-llapack_linuxi386-gfortran-4.2.1 -lblas_linuxi386-gfortran-4.2.1" CFLAGS="-O3 -fomit-frame-pointer" FFLAGS="-O3 -fomit-frame-pointer" FCFLAGS="-O3 -fomit-frame-pointer" --prefix=/tmp/Mondo

(2)
./configure FC=/usr/local/gcc-4.2.1/bin/gfortran F77=/usr/local/gcc-4.2.1/bin/gfortran CC=/usr/local/gcc-4.2.1/bin/gcc LDFLAGS=-L/usr/local/lapack/lib LIBS="-llapack_linuxi386-gfortran-4.2.1 -lblas_linuxi386-gfortran-4.2.1" FFLAGS="-O0 -g" FCFLAGS="-O0 -g" CFLAGS="-O0 -g" --prefix=/tmp/Mondo

(3)
./configure FC=ifort F77=ifort CC=icc LDFLAGS=-L/usr/local/lapack/lib LIBS="-llapack_linux-ifort-10.0.023 -lblas_linux-ifort-10.0.023" CFLAGS="-O3 -fomit-frame-pointer" FFLAGS="-O3 -fomit-frame-pointer" FCFLAGS="-O3 -fomit-frame-pointer" --prefix=/tmp/Mondo

(4)
./configure FC=ifort F77=ifort CC=icc CFLAGS="-O3 -fomit-frame-pointer" FFLAGS="-O3 -fomit-frame-pointer" FCFLAGS="-O3 -fomit-frame-pointer" --prefix=/tmp/Mondo

(5)
./configure FC=/usr/local/gcc-4.2.1/bin/gfortran F77=/usr/local/gcc-4.2.1/bin/gfortran CC=/usr/local/gcc-4.2.1/bin/gcc CFLAGS="-O3 -fomit-frame-pointer" FFLAGS="-O3 -fomit-frame-pointer" FCFLAGS="-O3 -fomit-frame-pointer" --prefix=/tmp/Mondo --with-hdf5=/usr/local/hdf-1.4.5-post2

(6)
./configure FC=ifort F77=ifort CC=icc CFLAGS="-O3 -fomit-frame-pointer" FFLAGS="-O3 -fomit-frame-pointer" FCFLAGS="-O3 -fomit-frame-pointer" --prefix=/tmp/Mondo --disable-internal-lapack --with-lapack=/usr/local/lapack --with-lapacklibs="-llapack_linux-ifort-10.0.023 -lblas_linux-ifort-10.0.023"

Note:
The internal hdf5 does not seem to work well on 64-bit. You might have to add
something like "-m32" to the compiler flags, i.e. FFLAGS="-O2 -m32" for
instance.

Some timing information:

Running Validate/MD_H2.inp on MacBook Pro 1 (Core Duo) 2.16GHz
gfortran 4.2.1, compiled with (1): real 10m39.911s user 9m46.164s sys 0m15.639s
ifort 10.0.023, compiled with (3): real  9m10.989s user 8m14.051s sys 0m16.881s

Some building information:

Building (4) on MacBook Pro 1 (Core Duo) 2.16GHz
make -j1: real 23m6.268s  user 20m16.247s sys 1m38.732s
make -j2: real 15m24.275s user 23m26.838s sys 1m49.598s
make -j3: real 15m35.510s user 23m38.548s sys 1m49.434s
